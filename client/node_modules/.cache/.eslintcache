[{"F:\\Myproject\\node1\\client\\src\\index.js":"1","F:\\Myproject\\node1\\client\\src\\reducers\\index.js":"2","F:\\Myproject\\node1\\client\\src\\components\\App.js":"3","F:\\Myproject\\node1\\client\\src\\components\\game\\Game.jsx":"4","F:\\Myproject\\node1\\client\\src\\reducers\\userReducer.js":"5","F:\\Myproject\\node1\\client\\src\\reducers\\gameReducer.js":"6","F:\\Myproject\\node1\\client\\src\\components\\game\\SelectGame.jsx":"7","F:\\Myproject\\node1\\client\\src\\actions\\user.js":"8","F:\\Myproject\\node1\\client\\src\\components\\registration\\Registration.jsx":"9","F:\\Myproject\\node1\\client\\src\\components\\navbar\\Navbar.jsx":"10","F:\\Myproject\\node1\\client\\src\\components\\registration\\Login.jsx":"11","F:\\Myproject\\node1\\client\\src\\components\\game\\View.js":"12","F:\\Myproject\\node1\\client\\src\\utils\\input\\input.jsx":"13","F:\\Myproject\\node1\\client\\src\\actions\\game.js":"14","F:\\Myproject\\node1\\client\\src\\components\\game\\Answers.js":"15","F:\\Myproject\\node1\\client\\src\\actions\\history.js":"16","F:\\Myproject\\node1\\client\\src\\reducers\\appReducer.js":"17","F:\\Myproject\\node1\\client\\src\\components\\history\\History.jsx":"18","F:\\Myproject\\node1\\client\\src\\components\\range\\Range.jsx":"19","F:\\Myproject\\node1\\client\\src\\actions\\range.js":"20","F:\\Myproject\\node1\\client\\src\\components\\game\\Result.js":"21","F:\\Myproject\\node1\\client\\src\\store\\index.js":"22","F:\\Myproject\\node1\\client\\src\\utils\\validator\\validator.js":"23","F:\\Myproject\\node1\\client\\src\\utils\\Modal\\Modal.jsx":"24","F:\\Myproject\\node1\\client\\src\\components\\settings\\Settings.jsx":"25","F:\\Myproject\\node1\\client\\src\\actions\\settings.js":"26","F:\\Myproject\\node1\\client\\src\\components\\home\\Home.jsx":"27","F:\\Myproject\\node1\\client\\src\\config.js":"28","F:\\Myproject\\node1\\client\\src\\components\\footer\\Footer.jsx":"29","F:\\Myproject\\node1\\client\\src\\components\\resetPassword\\resetPassword.js":"30"},{"size":514,"mtime":1619516994400,"results":"31","hashOfConfig":"32"},{"size":629,"mtime":1617361451028,"results":"33","hashOfConfig":"32"},{"size":2243,"mtime":1619718949138,"results":"34","hashOfConfig":"32"},{"size":5448,"mtime":1619447053689,"results":"35","hashOfConfig":"32"},{"size":993,"mtime":1619724289088,"results":"36","hashOfConfig":"32"},{"size":2810,"mtime":1621352863289,"results":"37","hashOfConfig":"32"},{"size":3389,"mtime":1621359368788,"results":"38","hashOfConfig":"32"},{"size":4439,"mtime":1621363217236,"results":"39","hashOfConfig":"32"},{"size":1883,"mtime":1621354943052,"results":"40","hashOfConfig":"32"},{"size":1861,"mtime":1621354670919,"results":"41","hashOfConfig":"32"},{"size":2426,"mtime":1621355192308,"results":"42","hashOfConfig":"32"},{"size":678,"mtime":1615822482580,"results":"43","hashOfConfig":"32"},{"size":1358,"mtime":1619606653288,"results":"44","hashOfConfig":"32"},{"size":5476,"mtime":1621359552786,"results":"45","hashOfConfig":"32"},{"size":752,"mtime":1617609516033,"results":"46","hashOfConfig":"32"},{"size":2542,"mtime":1618850495697,"results":"47","hashOfConfig":"32"},{"size":2138,"mtime":1618149527643,"results":"48","hashOfConfig":"32"},{"size":2299,"mtime":1621354616328,"results":"49","hashOfConfig":"32"},{"size":4036,"mtime":1621355785409,"results":"50","hashOfConfig":"32"},{"size":2458,"mtime":1618848820113,"results":"51","hashOfConfig":"32"},{"size":1275,"mtime":1619447012995,"results":"52","hashOfConfig":"32"},{"size":931,"mtime":1619616053127,"results":"53","hashOfConfig":"32"},{"size":3087,"mtime":1621356084303,"results":"54","hashOfConfig":"32"},{"size":434,"mtime":1617809367238,"results":"55","hashOfConfig":"32"},{"size":5850,"mtime":1621359264331,"results":"56","hashOfConfig":"32"},{"size":1516,"mtime":1619448642130,"results":"57","hashOfConfig":"32"},{"size":2820,"mtime":1619433650885,"results":"58","hashOfConfig":"32"},{"size":116,"mtime":1621359623229,"results":"59","hashOfConfig":"32"},{"size":2539,"mtime":1619429852754,"results":"60","hashOfConfig":"32"},{"size":4830,"mtime":1621355275526,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"1glgu00",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"65"},"F:\\Myproject\\node1\\client\\src\\index.js",["140","141","142","143"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport {store,persistor} from \"./store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n            <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n",["144","145"],"F:\\Myproject\\node1\\client\\src\\reducers\\index.js",[],"F:\\Myproject\\node1\\client\\src\\components\\App.js",["146","147","148","149"],"import React, {useEffect,Suspense, lazy} from \"react\";\nimport Navbar from \"./navbar/Navbar\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport \"./app.css\";\nimport Registration from \"./registration/Registration\";\nimport Login from \"./registration/Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {auth} from \"../actions/user\";\nimport SelectGame from \"./game/SelectGame\";\nimport Game from \"./game/Game.jsx\";\nimport History from \"./history/History\";\nimport Range from \"./range/Range\";\nimport {actionRefreshRange} from \"../actions/range\";\nimport Settings from \"./settings/Settings\";\nimport {actionRefreshHistory} from \"../actions/history\";\nimport Home from \"./home/Home\";\nimport ResetPassword from \"./resetPassword/resetPassword\";\n\n\nfunction App() {\n    const isAuth = useSelector(state=>state.user.isAuth)\n    const isGame = useSelector(state=>state.game.startGame)\n\n    const dispatch = useDispatch();\n\n    actionRefreshHistory();\n    actionRefreshRange();\n\n    useEffect(()=>{\n        dispatch(auth());\n    },[])\n\n    let step = useSelector(state=>state.user.step);\n\n    return (\n        <BrowserRouter>\n            {!isGame ?<div className={\"app\"}>\n                <Navbar />\n                </div>\n            : ''}\n            {!isAuth ?\n                <Switch>\n                    <Route path={\"/registration\"} component={Registration}/>\n                    <Route path={\"/reset\"}  component={ResetPassword}/>\n\n                    <Route exact path={['/login', '/']} component={Login}/>\n                </Switch>\n                :\n                <div className={'wrapp'}>\n                    <Switch>\n                        <Route exact path={[\"/\", \"/login\", \"/registrations\"]} component={Home}/>\n                        <Route path={'/preview'} component={SelectGame}/>\n                        <Route exact path={\"/game/:name\"} component={Game}/>\n                        <Route exact path={\"/history\"} component={History}/>\n                        <Route exact path={\"/range\"} component={Range}/>\n                        <Route exact path={\"/settings\"} component={Settings}/>\n                    </Switch>\n                </div>\n\n            }\n\n        </BrowserRouter>\n);\n}\n\nexport default App;\n","F:\\Myproject\\node1\\client\\src\\components\\game\\Game.jsx",["150"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {giveAnswers, next, refresh, setAnswer, startGame} from \"../../actions/game\";\r\nimport Answers from \"./Answers\";\r\nimport Result from \"./Result\";\r\nimport \"./game.css\";\r\nimport Modal from \"../../utils/Modal/Modal\";\r\nimport {resetGame} from \"../../reducers/gameReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n// window.onbeforeunload = function (event) {\r\n//   return false;\r\n// }\r\n\r\n\r\nconst Game = () => {\r\n    const dispatch = useDispatch();\r\n    let flagStart = useSelector(state=>state.game.startGame);\r\n    const [loaderVisible,setLoaderVisible] = useState(false);\r\n    const [textError,setTextError] = useState('')\r\n    const [modal,setModal] = useState(false);\r\n    setTimeout(()=>setLoaderVisible(true),);\r\n    refresh();\r\n\r\n    let number = useSelector(state=>state.game.currentQuestionCount);\r\n    let options = useSelector(state=>state.game.currentOptions);\r\n    let flagEnd = useSelector(state=>state.game.endGame);\r\n    let length = useSelector(state=>state.game.questionsLength);\r\n    let rightAnswers = useSelector(state=>state.game.rightAnswersCount);\r\n    let kind = useSelector(state=>state.game.currentKind);\r\n    let answers = options.answers;\r\n\r\n    useEffect(()=>{\r\n        startGame();\r\n        answers = shuffleArray(options.answers);\r\n    },[kind])\r\n\r\n\r\n\r\n    function checkForm() {\r\n        let answers = giveAnswers();\r\n        if (answers.length === 0){\r\n            setTextError('Answer is empty');\r\n            return false;\r\n        } else {\r\n            setTextError('');\r\n            return true;\r\n        }\r\n    }\r\n    function shuffleArray(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n        // Пока остаются элементы, чтобы перемешать …\r\n        while (0 !== currentIndex) {\r\n            // Выберите оставшийся элемент …\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            // И поменяйте местами с текущим элементом.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n        return array;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'m-3'}>\r\n            <h2 className={'text-center'}>{kind}</h2>\r\n            <div className={'d-flex justify-content-end'}>\r\n                {flagStart ?<button onClick={()=>setModal(true)} className={'btn btn-primary mr-5 mt-2'}>Exit</button>:\"\"}\r\n            </div>\r\n            <Modal active={modal} setActive={setModal}>\r\n                <p>You are sure that want to leave from this quiz, everything data will be lost!</p>\r\n                <div className={'d-flex justify-content-around'}>\r\n                    <NavLink to={'/'}>\r\n                        <button onClick={()=>{\r\n                            setModal(false);\r\n                            dispatch(resetGame());\r\n                        }}>OK</button>\r\n                    </NavLink>\r\n\r\n                    <button onClick={()=>setModal(false)}>Cancel</button>\r\n                </div>\r\n            </Modal>\r\n            {!flagEnd?\r\n                    <CSSTransition\r\n                        key={number}\r\n                        in={loaderVisible}\r\n                        timeout={500}\r\n                        classNames={\"answers\"}\r\n                        // mountOnEnter\r\n                        // unmountOnExit\r\n                    >\r\n                        <div className=\"answers\" key={number}>\r\n                            <h3>{number + 1} Question of {length}</h3>\r\n                            <h2>{options.question}</h2>\r\n                            <ul className=\"answerOptions\">\r\n                                {/*Для каждого варианта ответа вызываем функцию*/}\r\n                                {answers.map((item, index) => {\r\n                                    return <Answers key={index} type={item.type} content={item.content}/>\r\n                                })}\r\n                            </ul>\r\n                            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                                <button className={'btn btn-secondary mr-5 mt-2'} type={\"button\"} id={'check'} onClick={()=>{\r\n                                    if (checkForm()) setAnswer();\r\n                                }}>Check</button>\r\n\r\n                                {textError}\r\n\r\n                                <button className={'btn btn-secondary mr-5 mt-2'} type={\"button\"} style={{display: 'none'}} id={'next'} onClick={() => {\r\n                                    next(number+1, length);\r\n                                    if (length - number !== 1){\r\n                                        setLoaderVisible(!loaderVisible);\r\n                                    }\r\n                                }}>{length - number === 1 ? \"Finish\" : \"Next\"}</button>\r\n                            </div>\r\n                        </div>\r\n                    </CSSTransition>\r\n                    :\r\n                    <Result number={number} answers={rightAnswers} length={length}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n\r\n\r\n\r\n\r\n","F:\\Myproject\\node1\\client\\src\\reducers\\userReducer.js",[],"F:\\Myproject\\node1\\client\\src\\reducers\\gameReducer.js",["151"],"import {loadFromLocalStorage} from \"../store\";\r\n\r\nconst questions = require('../assets/questions.json');\r\n\r\nconst SET_KIND=\"SET_KIND\";\r\nconst REFRESH_GAME=\"REFRESH_GAME\";\r\nconst NEXT_GAME=\"NEXT_GAME\";\r\nconst END_GAME=\"END_GAME\";\r\nconst RESET_GAME=\"RESET_GAME\";\r\nconst SET_CURRENTLY_RESULT=\"SET_CURRENTLY_RESULT\";\r\n\r\n\r\nconst defaultState = {\r\n    currentKind:\"\",\r\n    currentQuestionCount:0,\r\n    currentOptions:{},\r\n    currentArr:[],\r\n    questionsLength: 0,\r\n    endGame:false,\r\n    startGame:false,\r\n    rightAnswer:[],\r\n    rightAnswersCount:0,\r\n    currentlyResult:{},\r\n}\r\n\r\nexport default function gameReducer(state=defaultState,action) {\r\n    switch (action.type) {\r\n        case SET_KIND:\r\n            const question = action.payload[0];\r\n            return {\r\n                ...state,\r\n                currentKind: action.name,\r\n                currentOptions: question,\r\n                currentArr: action.payload,\r\n                questionsLength: action.payload.length,\r\n                endGame: false,\r\n                startGame: true,\r\n                rightAnswer: question.answer,\r\n                rightAnswersCount:0\r\n            }\r\n        case REFRESH_GAME:\r\n            let game = loadFromLocalStorage('game');\r\n            return {\r\n                ...state = game,\r\n            }\r\n        case NEXT_GAME:{\r\n            const question = state.currentArr[state.currentQuestionCount+1];\r\n            return {\r\n                ...state,\r\n                currentQuestionCount: state.currentQuestionCount+1,\r\n                currentOptions: question,\r\n                rightAnswer: question.answer,\r\n                rightAnswersCount: action.payload ? state.rightAnswersCount+1 : state.rightAnswersCount\r\n\r\n            }\r\n\r\n        }\r\n        case SET_CURRENTLY_RESULT:\r\n            return {\r\n                ...state,\r\n                currentlyResult: action.payload\r\n            }\r\n        case END_GAME:\r\n            return {\r\n                ...state,\r\n                currentQuestionCount: 0,\r\n                endGame: true,\r\n                startGame: false,\r\n                rightAnswersCount: action.flag ? state.rightAnswersCount+1 : state.rightAnswersCount,\r\n                currentlyResult: action.result\r\n            }\r\n        case RESET_GAME:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setKind = (arr,kind) =>({type:SET_KIND,payload:arr,name:kind})\r\nexport const refreshGame = () =>({type:REFRESH_GAME})\r\nexport const nextGame = (answerFlag) => ({type:NEXT_GAME,payload:answerFlag})\r\nexport const endGame = (answerFlag,result) => ({type:END_GAME,flag:answerFlag,result:result})\r\n// export const setCurrentlyResult = (item) =>({type:SET_CURRENTLY_RESULT,payload:item})\r\nexport const resetGame = () => ({type:RESET_GAME})","F:\\Myproject\\node1\\client\\src\\components\\game\\SelectGame.jsx",["152","153","154","155","156","157","158"],"import React from 'react';\r\nimport {BrowserRouter as Router, NavLink, Route,Switch} from \"react-router-dom\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../reducers/userReducer\";\r\nimport {setKind} from \"../../reducers/gameReducer\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport saveToLocalStorage, {store} from \"../../store\";\r\nimport './game.css'\r\nimport Game from \"./Game\";\r\nimport {checkKind} from \"../../actions/game\";\r\n\r\nconst SelectGame = (props) => {\r\n    const dispatch = useDispatch();\r\n    const routes = ['История','Биология','География','Смешанная'];\r\n    // const kind = useSelector(state=>state.game.currentKind)\r\n    // console.log(kind);\r\n    return (\r\n        <div>\r\n            <Route exact path={props.match.path} >\r\n                <p className={'text-center'}>\r\n                    В этом разделе вы можете проверить свои знания в одной из областей.<br/>\r\n                    Для того чтобы поучавствовать в викторине <b>перейдите</b> в интересующий вас раздел и <b>кликните по кнопке \"Начать игру\"</b>\r\n                </p>\r\n            </Route>\r\n            <ul className=\"kinds\">\r\n                    {routes.map((item) =>  (\r\n                        <li className=\"nav-item\" role=\"presentation\">\r\n                            <NavLink className=\"nav-link\" type=\"button\"\r\n                                     key={item} to={'/preview/'+item} activeClassName={'active'}>\r\n                                {item}\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                    ))}\r\n            </ul>\r\n            <div>\r\n                {routes.map((item,index)=>(\r\n                    <Route key={item} exact path={`${props.match.path}/`+item}>\r\n                        {({ match }) => (\r\n                            <CSSTransition\r\n                                in={match != null}\r\n                                timeout={300}\r\n                                classNames=\"page\"\r\n                                unmountOnExit\r\n                            >\r\n                                <div className=\"page\">\r\n                                    <div className={'d-flex flex-column align-items-center'}>\r\n                                        <p>Этот раздел \"{item}\" сосотоит из 20 вопросов. Нажав кнопку начать игру вы не сможете досрочно ее завершить</p>\r\n                                        <NavLink to={'/game/'+item}>\r\n                                            <button onClick={()=>{\r\n                                                dispatch(()=>checkKind(item,index));\r\n                                                saveToLocalStorage('game',store.getState().game);\r\n                                            }}>Начать игру</button>\r\n                                        </NavLink>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </CSSTransition>\r\n                        )}\r\n                    </Route>\r\n                ))}\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SelectGame;\r\n","F:\\Myproject\\node1\\client\\src\\actions\\user.js",["159"],"F:\\Myproject\\node1\\client\\src\\components\\registration\\Registration.jsx",["160","161"],"import React, {useState} from 'react';\r\nimport \"./registration.css\";\r\nimport Input from \"../../utils/input/input\";\r\nimport {registration} from \"../../actions/user\";\r\nimport {useInput} from \"../../utils/validator/validator\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Registration = () => {\r\n    const email= useInput('',{isEmpty: {value:true,text:'Поле пустое'},minLength:{value:3,text:\"минимальная длина 3\"},isEmail: {value:true,text:'Неправильный email'}})\r\n    const password = useInput('',{isEmpty: {value:true,text:'Поле пустое'},minLength: {value:3,text:'минимальная длина 3'},maxLength: {value:8,text:'максимальная длина 8'}})\r\n    return (\r\n        <div className={'registration'}>\r\n            <div className=\"registration_header\">Registration</div>\r\n            {email.isDirty && email.printError(['isEmpty','minLengthError','emailError'])}\r\n\r\n            <Input setValue={email.onChange} onBlur={email.onBlur} value={email.value}  type={\"text\"} placeholder={\"Введите email...\"}/>\r\n\r\n            {password.isDirty && password.printError(['isEmpty','minLengthError','maxLengthError'])}\r\n\r\n            <Input id={'password-login'} setValue={password.onChange} onBlur={password.onBlur} value={password.value}  type={\"password\"} placeholder={\"Введите пароль...\"}/>\r\n            {(!email.inputValid.value || !password.inputValid.value) && <div>{email.inputValid.text || password.inputValid.text}</div>}\r\n\r\n                <button className=\"registration_btn\"\r\n                        disabled={!email.inputValid.value || !password.inputValid.value}\r\n                        onClick={()=> registration(email.value,password.value)}\r\n                >\r\n                    Sign up\r\n                </button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","F:\\Myproject\\node1\\client\\src\\components\\navbar\\Navbar.jsx",["162","163"],"import React from 'react';\r\nimport './navbar.css';\r\nimport logo from '../../assets/img/navbar_logo.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../reducers/userReducer\";\r\nimport {start} from \"../../actions/range\";\r\nimport \"./navbar.css\";\r\nconst Navbar = () => {\r\n    const isAuth = useSelector(state=>state.user.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return (\r\n        <div className={\"navbar\"}>\r\n            <NavLink activeClassName={'active1'} to={'/'}>\r\n                <img src={'https://img.icons8.com/wired/64/000000/knowledge-sharing.png'} alt=\"\" width=\"42\" height=\"36\"\r\n                     className=\"align-text-center\"/>\r\n                     Главная\r\n            </NavLink>\r\n            {!isAuth &&\r\n            <div className=\"navbar_login\">\r\n                <NavLink className={'p-3'} to={\"/login\"}>Войти</NavLink>\r\n                <NavLink to={\"/registration\"}>Регистрация</NavLink>\r\n            </div> }\r\n            {isAuth &&\r\n            <div className={'d-flex justify-content-between w-75'}>\r\n                <div className={'d-flex justify-content-around w-50'}>\r\n                    <NavLink activeClassName={'active'} to={\"/preview\"}>Играть</NavLink>\r\n                    <NavLink to={\"/history\"}>История</NavLink>\r\n                    <NavLink to={\"/range\"}>Рейтинг</NavLink>\r\n                    <NavLink to={\"/settings\"}>Профиль</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={'/login'}>\r\n                        <button className=\"navbar_logout\" onClick={()=>dispatch(logout())}>Выйти</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","F:\\Myproject\\node1\\client\\src\\components\\registration\\Login.jsx",["164","165","166","167"],"import React, {useEffect, useState} from 'react';\r\nimport \"./registration.css\";\r\nimport Input from \"../../utils/input/input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login, redirect, setLocalStep} from \"../../actions/user\";\r\nimport {useInput} from \"../../utils/validator/validator\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    const email= useInput('',{isEmpty: {value:true,text:'Поле пустое'},minLength:{value:3,text:\"минимальная длина 3\"},isEmail: {value:true,text:'Неправильный email'}})\r\n    const password = useInput('',{isEmpty: {value:true,text:'Поле пустое'},minLength: {value:3,text:'минимальная длина 3'},maxLength: {value:8,text:'максимальная длина 8'}})\r\n    const dispatch = useDispatch();\r\n    // const history = useHistory();\r\n    // const isAuth = useSelector(state=>state.user.isAuth)\r\n\r\n    return (\r\n\r\n        <div className={'registration'}>\r\n            <div className=\"registration_header\">Авторизация</div>\r\n\r\n            {email.isDirty && email.printError(['isEmpty','minLengthError','emailError'])}\r\n\r\n            <Input setValue={email.onChange} onBlur={email.onBlur} value={email.value}  type={\"text\"} placeholder={\"Введите email...\"}/>\r\n            {password.isDirty && password.printError(['isEmpty','minLengthError','maxLengthError'])}\r\n\r\n            <Input id={'password-login'} setValue={password.onChange} onBlur={password.onBlur} value={password.value}  type={\"password\"} placeholder={\"Введите пароль...\"}/>\r\n            {(!email.inputValid.value || !password.inputValid.value) && <div>{email.inputValid.text || password.inputValid.text}</div>}\r\n                <div className={' w-100 d-flex flex-row justify-content-between align-items-center'}>\r\n                    <Link to={'/reset'} onClick={()=>setLocalStep()}>Забыли пароль?</Link>\r\n                    <button disabled={!email.inputValid.value || !password.inputValid.value}\r\n                            className=\"registration_btn\"\r\n                            onClick={()=>{\r\n                                dispatch(login(email.value,password.value));\r\n                            }}\r\n                    >\r\n                        Войти\r\n                    </button>\r\n                </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","F:\\Myproject\\node1\\client\\src\\components\\game\\View.js",[],["168","169"],"F:\\Myproject\\node1\\client\\src\\utils\\input\\input.jsx",["170","171"],"import React from 'react';\r\nimport \"./input.css\"\r\nconst Input = (props) => {\r\n    return (\r\n        props.type === 'password'?\r\n            <div className={'password'}>\r\n                <input onChange={(event)=> props.setValue(event)}\r\n                       onBlur={event => props.onBlur(event)}\r\n                       value={props.value}\r\n                       type={props.type}\r\n                       placeholder={props.placeholder}\r\n                       id={props.id}/>\r\n\r\n                <a href=\"#\" className={'password-control'}\r\n                   onClick={(e)=>{\r\n                       return show_hide_password(e.target,props.id);\r\n                   }}\r\n                />\r\n            </div>\r\n\r\n\r\n            :\r\n        <input onChange={(event)=> props.setValue(event)}\r\n               onBlur={event => props.onBlur(event)}\r\n               value={props.value}\r\n               type={props.type}\r\n               placeholder={props.placeholder}/>\r\n);\r\n};\r\n\r\nfunction show_hide_password(target,id){\r\n    var input = document.getElementById(id);\r\n    if (input.getAttribute('type') === 'password') {\r\n        target.classList.add('show');\r\n        input.setAttribute('type', 'text');\r\n    } else {\r\n        target.classList.remove('show');\r\n        input.setAttribute('type', 'password');\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport default Input;","F:\\Myproject\\node1\\client\\src\\actions\\game.js",["172","173","174","175"],"import React from \"react\";\r\nimport {endGame, nextGame, refreshGame, setKind} from \"../reducers/gameReducer\";\r\nimport saveToLocalStorage, {store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {startHistory} from \"./history\";\r\nimport {startRange} from \"./range\";\r\nimport {API_URL} from \"../config\";\r\nconst questions = require('../assets/questions.json');\r\n\r\n\r\nexport const startGame = () =>{\r\n    let input = document.querySelectorAll('input[type=checkbox]');\r\n    input.forEach((item)=>{\r\n        item.className = 'radioCustomButton';\r\n        item.checked = false;\r\n    })\r\n    document.querySelectorAll(\"label.radioCustomLabel1\").forEach((item)=>{\r\n        item.className = 'radioCustomLabel';\r\n    });\r\n\r\n\r\n}\r\n\r\nexport const checkKind = (kind,index)=>{\r\n    console.log(kind,index);\r\n   if (index===3){\r\n       let arr = [], sort = 0, quest = 0;\r\n       let repeat = new Map();\r\n       while (arr.length < 20){\r\n           sort = Math.floor(Math.random() * 3);\r\n           quest = Math.floor(Math.random() * 20);\r\n\r\n           if (repeat.get(sort) !== quest) {\r\n               arr.push(questions[sort][quest]);\r\n               repeat.set(sort,quest);\r\n           }\r\n       }\r\n       return store.dispatch(setKind(arr,kind));\r\n   } else {\r\n       return store.dispatch(setKind(questions[index],kind));\r\n   }\r\n}\r\n\r\nexport const refresh = ()=>{\r\n    let kind = store.getState().game.currentKind;\r\n    if (!kind) store.dispatch(refreshGame());\r\n}\r\n\r\nexport const next = (current,length) =>{\r\n\r\n    var answer = checkAnswer();\r\n    if (current === length) {\r\n        setTimeout(() => end(answer,length),500 );\r\n\r\n    } else  {\r\n        clear();\r\n        store.dispatch(nextGame(answer));\r\n    }\r\n    saveToLocalStorage('game',store.getState().game);\r\n}\r\n\r\n\r\nconst end = async (answer,length) =>{\r\n        try {\r\n            const right = answer ? store.getState().game.rightAnswersCount+1 : store.getState().game.rightAnswersCount;\r\n            const kind = store.getState().game.currentKind;\r\n            const email = store.getState().user.currentUser.email;\r\n            const result = Math.floor(right/length *100);\r\n\r\n\r\n\r\n            let date = new Date();\r\n            date.setMonth(date.getMonth()+1);\r\n            let day = changeDate(date.getDate());\r\n            let month = changeDate(date.getMonth());\r\n            let hours = changeDate(date.getHours());\r\n            let minutes = changeDate(date.getMinutes());\r\n\r\n            date = day +\".\"+ month +\".\"+date.getFullYear() +\" \"+hours+\":\"+minutes;\r\n\r\n            const response = await axios.post(`${API_URL}/history/request`,{\r\n                email,\r\n                result,\r\n                kind,\r\n                right,\r\n                length,\r\n                date\r\n            });\r\n            await startHistory();\r\n            await startRange();\r\n            let current = currentResult(kind,response.data.id)\r\n            store.dispatch(endGame(answer, current));\r\n            saveToLocalStorage('game',store.getState().game);\r\n            console.log(response.data);\r\n        } catch (e) {\r\n\r\n            console.log(e.response)\r\n        }\r\n\r\n}\r\n\r\n\r\nexport const changeDate = (variable)=>{\r\n    return variable <10 ? \"0\"+variable: variable;\r\n}\r\n\r\n\r\nexport const currentResult = (kind,id)=> {\r\n    const range = store.getState().app.range[kind];\r\n    let current = {\r\n        number:0,\r\n        item:{}\r\n    }\r\n    range.forEach((item,number)=>{\r\n        if (item._id === id){\r\n            current.number = number+1;\r\n            current.item = item;\r\n        }\r\n    })\r\n    return current;\r\n}\r\n\r\n\r\nexport const giveAnswers = () =>{\r\n    var selectedCheckBoxes = document.querySelectorAll('input:checked');\r\n    return Array.from(selectedCheckBoxes).map(cb => cb.value);\r\n}\r\n\r\nexport const setAnswer = ()=>{\r\n    let flag = checkAnswer();\r\n    let answer = giveAnswers();\r\n    let number = store.getState().game.currentQuestionCount;\r\n\r\n    answer.map((item,index)=>{\r\n        let checkbox = document.getElementById(item);\r\n        checkbox.classList.replace('radioCustomButton',flag?'radioCustomButton1':'radioCustomButton2');\r\n    });\r\n    if (!flag) setTimeout(()=>selectRightAnswer(),500);\r\n\r\n    document.querySelectorAll('input[type=checkbox]').forEach((item)=>{\r\n        item.disabled = true;\r\n    })\r\n\r\n    document.getElementById('next').style.display = 'block';\r\n    document.getElementById('check').style.display = 'none';\r\n\r\n}\r\n\r\nconst selectRightAnswer = ()=>{\r\n    let input = document.querySelectorAll('input[type=checkbox]'),\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    input.forEach((item)=>{\r\n        item.className = 'radioCustomButton';\r\n        item.checked = false;\r\n    });\r\n    rightAnswer.map((item)=>{\r\n        document.querySelector(\"label[for=\"+item+\"]\").className = 'radioCustomLabel1';\r\n    });\r\n}\r\n\r\n\r\nconst checkAnswer = () =>{\r\n    let answer = giveAnswers();\r\n    let count = 0, flag = false,\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    answer.forEach((item)=>{\r\n        if(rightAnswer.includes(item))\r\n            count++;\r\n    });\r\n    if(rightAnswer.length === count && answer.length === rightAnswer.length){\r\n        flag = true;\r\n    }\r\n    return flag;\r\n}\r\n\r\nfunction clear(){\r\n    document.getElementById('next').style.display = 'none';\r\n    document.getElementById('check').style.display = 'block';\r\n    document.querySelectorAll('input[type=checkbox]').forEach((item)=>{\r\n        item.disabled = false;\r\n    });\r\n}\r\n","F:\\Myproject\\node1\\client\\src\\components\\game\\Answers.js",[],"F:\\Myproject\\node1\\client\\src\\actions\\history.js",["176","177","178"],"import React from \"react\";\r\nimport saveToLocalStorage, {loadFromLocalStorage, store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {refreshHistory, setHistory} from \"../reducers/appReducer\";\r\nimport {API_URL} from \"../config\";\r\n\r\n\r\nexport const  startHistory = async () =>{\r\n        try {\r\n\r\n            const id = store.getState().user.currentUser.id;\r\n            const response = await axios.post(`${API_URL}/history/response`,{\r\n                id\r\n            });\r\n\r\n            let amount = counterQuizzes(response.data.response,id);\r\n            store.dispatch(setHistory(response.data.response, amount));\r\n\r\n            saveToLocalStorage('history',response.data.response);\r\n            saveToLocalStorage('amount',amount);\r\n\r\n            // console.log(response.data.response)\r\n\r\n        } catch (e) {\r\n            console.log(e.response);\r\n        }\r\n\r\n\r\n}\r\n\r\nexport const counterQuizzes = (history,id)=>{\r\n    let amount = {\r\n        history:{\r\n            value:0,\r\n            avg:0\r\n        },\r\n        biology: {\r\n            value:0,\r\n            avg:0\r\n\r\n        },\r\n        geography: {\r\n            value:0,\r\n            avg:0\r\n\r\n        },\r\n        mixed:{\r\n            value:0,\r\n            avg:0\r\n\r\n        }\r\n    };\r\n\r\n    history.forEach((item)=>{\r\n        if (item.userId===id){\r\n            switch (item.kind) {\r\n                case 'history':{\r\n                    amount.history.value++;\r\n                    amount.history.avg += item.result;\r\n                    break;\r\n                }\r\n                case 'biology':{\r\n                    amount.biology.value++;\r\n                    amount.biology.avg += item.result;\r\n                    break;\r\n                }\r\n                case 'geography':{\r\n                    amount.geography.value++;\r\n                    amount.geography.avg += item.result;\r\n                    break;\r\n                }\r\n                case 'mixed':{\r\n                    amount.mixed.value++;\r\n                    amount.mixed.avg += item.result;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    })\r\n    Object.keys(amount).map((item)=>{\r\n        amount[item].avg = Math.floor(amount[item].avg / amount[item].value);\r\n    })\r\n    return amount;\r\n\r\n}\r\n\r\nexport const actionRefreshHistory = ()=>{\r\n    const history = store.getState().app.history;\r\n    const localHistory = loadFromLocalStorage('history');\r\n    if (localHistory){\r\n        if (history.length === 0 && localHistory.length!==0) store.dispatch(refreshHistory());\r\n    }\r\n}","F:\\Myproject\\node1\\client\\src\\reducers\\appReducer.js",[],"F:\\Myproject\\node1\\client\\src\\components\\history\\History.jsx",["179","180","181","182"],"import React, {useEffect} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {actionRefreshHistory, startHistory} from \"../../actions/history\";\r\nimport {loadFromLocalStorage, store} from \"../../store\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./history.css\";\r\n\r\nconst History = () => {\r\n\r\n    let history = useSelector(state=>state.app.history);\r\n    // history.reverse();\r\n    // console.log(history);\r\n    const localHistory = loadFromLocalStorage('history');\r\n\r\n    // useEffect(()=>{\r\n    //     store.dispatch(()=>{startHistory()});\r\n    // },[])\r\n\r\n    return (\r\n        <div className={'history'}>\r\n            {localHistory.length === 0 ?\r\n                <div>\r\n                    You don't play in quiz yet. You can take a part now  <NavLink to={\"/preview\"}> here </NavLink>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <table>\r\n                        <thead className={\"text-center border border-secondary\"}>\r\n                        <th>№</th>\r\n                        <th>Вид</th>\r\n                        <th>Правильные ответы</th>\r\n                        <th>Всего вопросов</th>\r\n                        <th>% правильных ответов</th>\r\n                        <th>Дата</th>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            history.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index} className={\"text-center border border-secondary\"}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.kind}</td>\r\n                                        <td>{item.rightAnswers}</td>\r\n                                        <td>{item.totalAnswers}</td>\r\n                                        <td>{item.result}%</td>\r\n                                        <td>{item.date}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default History;","F:\\Myproject\\node1\\client\\src\\components\\range\\Range.jsx",[],"F:\\Myproject\\node1\\client\\src\\actions\\range.js",["183","184"],"import React from \"react\";\r\nimport saveToLocalStorage, {loadFromLocalStorage, store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {refreshRange, setCurrentlyResult, setRange} from \"../reducers/appReducer\";\r\nimport {API_URL} from \"../config\";\r\n\r\n\r\nexport const  startRange = async () =>{\r\n    try {\r\n        const response =  await axios.post(`${API_URL}/history/range`,{\r\n        });\r\n\r\n        let range = printRange(response.data.response);\r\n        store.dispatch(setRange(range,top(range)));\r\n        saveToLocalStorage('range',range);\r\n        saveToLocalStorage('top',top(range));\r\n\r\n    } catch (e) {\r\n        console.log(e.response);\r\n    }\r\n\r\n}\r\n\r\nfunction printRange(history) {\r\n    history = sort(history);\r\n    let exception = {\r\n        history:[],\r\n        biology:[],\r\n        geography:[],\r\n        mixed:[]\r\n    }\r\n    let userId = {\r\n        history:'1',\r\n        biology:'1',\r\n        geography:'1',\r\n        mixed:'1'\r\n    }\r\n    let arr = {\r\n        history:[],\r\n        biology:[],\r\n        geography:[],\r\n        mixed:[]\r\n    };\r\n    history.forEach((item)=>{\r\n        if (userId[item.kind] !== item.userId && !exception[item.kind].includes(item.userId)){\r\n            arr[item.kind].push(item)\r\n        }\r\n        exception[item.kind].push(item.userId);\r\n        userId[item.kind] = item.userId;\r\n\r\n    });\r\n    return {\r\n        history: arr.history,\r\n        biology: arr.biology,\r\n        geography: arr.geography,\r\n        mixed: arr.mixed\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a,b)=>{\r\n        return b.result - a.result;\r\n    })\r\n}\r\n\r\n\r\nfunction top(range) {\r\n    const userId = store.getState().user.currentUser.id;\r\n\r\n    let top =  {\r\n        history:0,\r\n        biology: 0,\r\n        geography: 0,\r\n        mixed: 0\r\n    }\r\n\r\n    for (var key in top) {\r\n        writeTop(key);\r\n    }\r\n    // Object.keys(top).map((item)=>{\r\n    //     console.log(item)\r\n    //\r\n    // })\r\n\r\n    function writeTop(kind){\r\n        range[kind].forEach((item,number)=>{\r\n            if (item.userId === userId){\r\n                return top[kind] = number+1\r\n            }\r\n        })\r\n    }\r\n\r\n    return top;\r\n\r\n\r\n}\r\n\r\nexport const actionRefreshRange = ()=>{\r\n    const range = store.getState().app.range;\r\n    const localRange = loadFromLocalStorage('range');\r\n    if (localRange){\r\n        if (Object.keys(range).length === 0 && Object.keys(localRange).length !== 0) store.dispatch(refreshRange());\r\n    }\r\n}\r\n","F:\\Myproject\\node1\\client\\src\\components\\game\\Result.js",[],"F:\\Myproject\\node1\\client\\src\\store\\index.js",["185"],"import {applyMiddleware, createStore} from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport {rootReducer} from \"../reducers/index\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function saveToLocalStorage(name,state){\r\n    try{\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem(name,serializedState)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport  function loadFromLocalStorage(name){\r\n    try {\r\n        const serializedState = localStorage.getItem(name);\r\n        if (serializedState === null) return undefined;\r\n        else if (name === 'code') return serializedState;\r\n        return JSON.parse(serializedState);\r\n    } catch (e) {\r\n        console.log(e)\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const store =  createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n","F:\\Myproject\\node1\\client\\src\\utils\\validator\\validator.js",["186","187"],"import {useEffect, useState} from \"react\";\r\n\r\n\r\nexport const useValidation = (value,validations)=>{\r\n    const [isEmpty,setEmpty] = useState({value:true,text:''})\r\n    const [minLengthError,setMinLengthError] = useState({value:false,text:''})\r\n    const [maxLengthError,setMaxLengthError] = useState({value:false,text:''})\r\n    const [emailError,setEmailError] = useState({value:false,text:''})\r\n    const [inputValid,setInputValid] = useState({value:false,text:''})\r\n\r\n\r\n    useEffect(()=>{\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLength':\r\n                    value.length < validations[validation].value? setMinLengthError({value: true,text: validations[validation].text}) : setMinLengthError({value: false,text: ''})\r\n                    break;\r\n                case 'isEmpty':\r\n                    value?setEmpty({value: false,text: ''}): setEmpty({value: true,text: validations[validation].text})\r\n                    break;\r\n                case'maxLength':\r\n                    value.length > validations[validation].value? setMaxLengthError({value: true,text: validations[validation].text}) : setMaxLengthError({value: false,text: ''})\r\n                    break;\r\n                case 'isEmail':\r\n                    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    re.test(String(value ).toLowerCase()) ? setEmailError({value: false,text: ''}) : setEmailError({value: true,text: validations[validation].text})\r\n                    break;\r\n\r\n            }\r\n        }\r\n    },[value])\r\n\r\n    useEffect(()=>{\r\n        if(isEmpty.value || maxLengthError.value || minLengthError.value || emailError.value){\r\n            setInputValid({value: false,text: 'Неправильно введенные данные'})\r\n        } else {\r\n            setInputValid({value: true,text: ''})\r\n        }\r\n    },[isEmpty.value,maxLengthError.value,minLengthError.value,emailError.value])\r\n\r\n    return {isEmpty,minLengthError,emailError,maxLengthError,inputValid}\r\n}\r\n\r\nexport const useInput = (initialState,validations) =>{\r\n    const [value,setValue] = useState(initialState);\r\n    const [isDirty,setDirty] = useState(false)\r\n    const valid = useValidation(value,validations)\r\n\r\n\r\n    const onChange = (e) =>{\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const onBlur = (e)=>{\r\n        setDirty(true)\r\n    }\r\n\r\n    const printError = (validators)=>{\r\n        let flag = false;\r\n        for (let i = 0; i<validators.length;i++){\r\n            for (let j = 0; j<=i;j++){\r\n                if (j<i){\r\n                    flag = !valid[validators[j]].value;\r\n                }\r\n                else {\r\n                    flag = valid[validators[i]].value;\r\n                }\r\n            }\r\n            if (flag) return <span style={{color:'red'}}>{valid[validators[i]].text}</span>;\r\n        }\r\n\r\n    }\r\n\r\n    return{\r\n        value,onChange,onBlur,isDirty,printError,...valid\r\n    }\r\n}","F:\\Myproject\\node1\\client\\src\\utils\\Modal\\Modal.jsx",[],"F:\\Myproject\\node1\\client\\src\\components\\settings\\Settings.jsx",[],"F:\\Myproject\\node1\\client\\src\\actions\\settings.js",[],"F:\\Myproject\\node1\\client\\src\\components\\home\\Home.jsx",[],"F:\\Myproject\\node1\\client\\src\\config.js",[],"F:\\Myproject\\node1\\client\\src\\components\\footer\\Footer.jsx",[],"F:\\Myproject\\node1\\client\\src\\components\\resetPassword\\resetPassword.js",["188","189"],"import React, {useEffect} from 'react';\r\nimport {useInput} from \"../../utils/validator/validator\";\r\nimport Input from \"../../utils/input/input\";\r\nimport {confirmCode, registration, reset, setNewPassword} from \"../../actions/user\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {setStep} from \"../../reducers/userReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loadFromLocalStorage} from \"../../store\";\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const email= useInput('',{isEmpty: {value:true,text:'Пустое поле'},minLength:{value:3,text:\"минимальная длина - 3\"},isEmail: {value:true,text:'неправильный email'}})\r\n    const newPassword = useInput('',{isEmpty: {value:true,text:'Пустое поле'},minLength: {value:3,text:'минимальная длина - 3'},maxLength: {value:8,text:'максимальная длина - 8'}})\r\n    const text = useInput('',{isEmpty: {value:true,text:'Пустое поле'},minLength: {value:4,text:'минимальная длина - 4'},maxLength: {value:4,text:'максимальная длина - 4'}})\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    let step = useSelector(state=>state.user.step);\r\n    if (step === '0') step = loadFromLocalStorage('step')\r\n\r\n    return (\r\n        <div>\r\n            {step === '1'?\r\n                <div className={'registration'}>\r\n                    <div className=\"registration_header\">Шаг 1</div>\r\n                    {email.isDirty && email.printError(['isEmpty','minLengthError','emailError'])}\r\n\r\n                    <Input setValue={email.onChange} onBlur={email.onBlur} value={email.value}  type={\"text\"} placeholder={\"Введите email...\"}/>\r\n\r\n                    <div className={'w-100 d-flex flex-row justify-content-between align-items-center'}>\r\n                        <Link to={'/login'}>\r\n                            <button className={'registration_btn'}>Отмена</button>\r\n                        </Link>\r\n\r\n                            <button className=\"registration_btn\"\r\n                                    disabled={!email.inputValid.value}\r\n                                    onClick={()=> reset(email.value)}\r\n                            >\r\n                                Дальше\r\n                            </button>\r\n                    </div>\r\n                </div> :''\r\n            }\r\n\r\n            {step === '2' ?\r\n                <div className={'registration'}>\r\n                    <div className=\"registration_header\">Шаг 2</div>\r\n                    {text.isDirty && text.printError(['isEmpty','minLengthError','maxLengthError'])}\r\n\r\n                    <Input setValue={text.onChange} onBlur={text.onBlur} value={text.value}  type={\"number\"} placeholder={\"Введите 4-значный код...\"}/>\r\n\r\n                    <div className={'w-100 d-flex flex-row justify-content-between align-items-center'}>\r\n                        <Link to={'/login'}>\r\n                            <button className={'registration_btn'} onClick={()=>dispatch(setStep('1'))}>Отмена</button>\r\n                        </Link>\r\n\r\n\r\n                            <button className=\"registration_btn\"\r\n                                    disabled={!text.inputValid.value}\r\n                                    onClick={()=>confirmCode(text.value)}\r\n                            >\r\n                                Дальше\r\n                            </button>\r\n\r\n                    </div>\r\n                </div> :''\r\n            }\r\n\r\n            {step === '3'?\r\n                <div className={'registration'}>\r\n                    <div className=\"registration_header\">Шаг 3</div>\r\n\r\n                    {newPassword.isDirty && newPassword.printError(['isEmpty','minLengthError','maxLengthError'])}\r\n\r\n                    <Input id={'password-login'} setValue={newPassword.onChange} onBlur={newPassword.onBlur} value={newPassword.value}  type={\"password\"} placeholder={\"Придумайте новый пароль...\"}/>\r\n\r\n                    <div className={'w-100 d-flex flex-row justify-content-between align-items-center'}>\r\n                        <Link to={'/login'}>\r\n                            <button className={'registration_btn'}  onClick={()=>dispatch(setStep('2'))}>Отмена</button>\r\n                        </Link>\r\n\r\n\r\n                            <button className=\"registration_btn\"\r\n                                    disabled={!newPassword.inputValid.value}\r\n                                    onClick={()=>setNewPassword(email.value,newPassword.value)}\r\n                            >\r\n                                Дальше\r\n                            </button>\r\n                    </div>\r\n                </div> :''\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;",{"ruleId":"190","severity":1,"message":"191","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":9},{"ruleId":"190","severity":1,"message":"194","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":14},{"ruleId":"190","severity":1,"message":"195","line":9,"column":10,"nodeType":"192","messageId":"193","endLine":9,"endColumn":21},{"ruleId":"190","severity":1,"message":"196","line":10,"column":15,"nodeType":"192","messageId":"193","endLine":10,"endColumn":24},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"190","severity":1,"message":"201","line":1,"column":26,"nodeType":"192","messageId":"193","endLine":1,"endColumn":34},{"ruleId":"190","severity":1,"message":"202","line":1,"column":36,"nodeType":"192","messageId":"193","endLine":1,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":31,"column":7,"nodeType":"205","endLine":31,"endColumn":9,"suggestions":"206"},{"ruleId":"190","severity":1,"message":"207","line":33,"column":9,"nodeType":"192","messageId":"193","endLine":33,"endColumn":13},{"ruleId":"203","severity":1,"message":"208","line":39,"column":19,"nodeType":"209","endLine":39,"endColumn":48},{"ruleId":"190","severity":1,"message":"210","line":3,"column":7,"nodeType":"192","messageId":"193","endLine":3,"endColumn":16},{"ruleId":"190","severity":1,"message":"211","line":2,"column":26,"nodeType":"192","messageId":"193","endLine":2,"endColumn":32},{"ruleId":"190","severity":1,"message":"212","line":2,"column":49,"nodeType":"192","messageId":"193","endLine":2,"endColumn":55},{"ruleId":"190","severity":1,"message":"213","line":3,"column":9,"nodeType":"192","messageId":"193","endLine":3,"endColumn":16},{"ruleId":"190","severity":1,"message":"214","line":3,"column":31,"nodeType":"192","messageId":"193","endLine":3,"endColumn":42},{"ruleId":"190","severity":1,"message":"215","line":4,"column":9,"nodeType":"192","messageId":"193","endLine":4,"endColumn":15},{"ruleId":"190","severity":1,"message":"216","line":5,"column":9,"nodeType":"192","messageId":"193","endLine":5,"endColumn":16},{"ruleId":"190","severity":1,"message":"217","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":12},{"ruleId":"190","severity":1,"message":"218","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"219","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":24},{"ruleId":"190","severity":1,"message":"220","line":6,"column":9,"nodeType":"192","messageId":"193","endLine":6,"endColumn":16},{"ruleId":"190","severity":1,"message":"221","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":12},{"ruleId":"190","severity":1,"message":"222","line":7,"column":9,"nodeType":"192","messageId":"193","endLine":7,"endColumn":14},{"ruleId":"190","severity":1,"message":"223","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"219","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":35},{"ruleId":"190","severity":1,"message":"214","line":4,"column":22,"nodeType":"192","messageId":"193","endLine":4,"endColumn":33},{"ruleId":"190","severity":1,"message":"224","line":5,"column":16,"nodeType":"192","messageId":"193","endLine":5,"endColumn":24},{"ruleId":"197","replacedBy":"225"},{"ruleId":"199","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":14,"column":17,"nodeType":"229","endLine":18,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":14,"column":17,"nodeType":"229","endLine":18,"endColumn":19},{"ruleId":"190","severity":1,"message":"218","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"232","line":132,"column":9,"nodeType":"192","messageId":"193","endLine":132,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":134,"column":28,"nodeType":"235","messageId":"236","endLine":134,"endColumn":30},{"ruleId":"233","severity":1,"message":"234","line":156,"column":27,"nodeType":"235","messageId":"236","endLine":156,"endColumn":29},{"ruleId":"190","severity":1,"message":"218","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":56,"column":13,"nodeType":"239","messageId":"240","endLine":77,"endColumn":14},{"ruleId":"233","severity":1,"message":"234","line":80,"column":35,"nodeType":"235","messageId":"236","endLine":80,"endColumn":37},{"ruleId":"190","severity":1,"message":"223","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"241","line":3,"column":9,"nodeType":"192","messageId":"193","endLine":3,"endColumn":29},{"ruleId":"190","severity":1,"message":"242","line":3,"column":31,"nodeType":"192","messageId":"193","endLine":3,"endColumn":43},{"ruleId":"190","severity":1,"message":"243","line":4,"column":31,"nodeType":"192","messageId":"193","endLine":4,"endColumn":36},{"ruleId":"190","severity":1,"message":"218","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"244","line":4,"column":23,"nodeType":"192","messageId":"193","endLine":4,"endColumn":41},{"ruleId":"190","severity":1,"message":"245","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":14,"column":13,"nodeType":"239","messageId":"240","endLine":29,"endColumn":14},{"ruleId":"203","severity":1,"message":"246","line":31,"column":7,"nodeType":"205","endLine":31,"endColumn":14,"suggestions":"247"},{"ruleId":"190","severity":1,"message":"223","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"248","line":4,"column":22,"nodeType":"192","messageId":"193","endLine":4,"endColumn":34},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","'PersistGate' is defined but never used.","'persistor' is defined but never used.","no-native-reassign",["249"],"no-negated-in-lhs",["250"],"'Suspense' is defined but never used.","'lazy' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["251"],"'step' is assigned a value but never used.","Assignments to the 'answers' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'questions' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'connect' is defined but never used.","'useSelector' is defined but never used.","'logout' is defined but never used.","'setKind' is defined but never used.","'Game' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'NavLink' is defined but never used.","'logo' is defined but never used.","'start' is defined but never used.","'useEffect' is defined but never used.","'redirect' is defined but never used.",["249"],["250"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'number' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'actionRefreshHistory' is defined but never used.","'startHistory' is defined but never used.","'store' is defined but never used.","'setCurrentlyResult' is defined but never used.","'persistStore' is defined but never used.","React Hook useEffect has a missing dependency: 'validations'. Either include it or remove the dependency array. If 'setMinLengthError' needs the current value of 'validations', you can also switch to useReducer instead of useState and read 'validations' in the reducer.",["252"],"'registration' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [dispatch]",{"range":"257","text":"258"},"Update the dependencies array to be: [validations, value]",{"range":"259","text":"260"},[1048,1050],"[dispatch]",[1690,1697],"[validations, value]"]