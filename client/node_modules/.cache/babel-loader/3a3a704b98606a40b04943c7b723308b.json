{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport { rootReducer } from \"../reducers/index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nexport default function saveToLocalStorage(name, state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(name, serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function loadFromLocalStorage(name, key) {\n  try {\n    const serializedState = localStorage.getItem(name);\n    console.log(serializedState);\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["F:/Myproject/node1/client/src/store/index.js"],"names":["applyMiddleware","createStore","persistStore","rootReducer","composeWithDevTools","thunk","saveToLocalStorage","name","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","key","getItem","undefined","parse","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAiCC,KAAjC,EAAuC;AAClD,MAAG;AACC,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqBN,IAArB,EAA0BE,eAA1B;AACH,GAHD,CAGE,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;AAED,OAAQ,SAASG,oBAAT,CAA8BV,IAA9B,EAAmCW,GAAnC,EAAuC;AAC3C,MAAI;AACA,UAAMT,eAAe,GAAGG,YAAY,CAACO,OAAb,CAAqBZ,IAArB,CAAxB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,eAAZ;AACA,QAAIA,eAAe,KAAK,IAAxB,EAA8B,OAAOW,SAAP;AAC9B,WAAOV,IAAI,CAACW,KAAL,CAAWZ,eAAX,CAAP;AACH,GALD,CAKE,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOM,SAAP;AACH;AACJ;AAED,OAAO,MAAME,KAAK,GAAIrB,WAAW,CAACE,WAAD,EAAaC,mBAAmB,CAACJ,eAAe,CAACK,KAAD,CAAhB,CAAhC,CAA1B","sourcesContent":["import {applyMiddleware, createStore} from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport {rootReducer} from \"../reducers/index\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function saveToLocalStorage(name,state){\r\n    try{\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem(name,serializedState)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport  function loadFromLocalStorage(name,key){\r\n    try {\r\n        const serializedState = localStorage.getItem(name)\r\n        console.log(serializedState);\r\n        if (serializedState === null) return undefined;\r\n        return JSON.parse(serializedState);\r\n    } catch (e) {\r\n        console.log(e)\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const store =  createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n"]},"metadata":{},"sourceType":"module"}