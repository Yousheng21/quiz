{"ast":null,"code":"import { loadFromLocalStorage } from \"../store\";\n\nconst questions = require('../assets/questions.json');\n\nconst SET_KIND = \"SET_KIND\";\nconst REFRESH_GAME = \"REFRESH_GAME\";\nconst NEXT_GAME = \"NEXT_GAME\";\nconst END_GAME = \"END_GAME\";\nconst RESET_GAME = \"RESET_GAME\";\nconst SET_CURRENTLY_RESULT = \"SET_CURRENTLY_RESULT\";\nconst defaultState = {\n  currentKind: \"\",\n  currentQuestionCount: 0,\n  currentOptions: {},\n  questionsLength: 0,\n  endGame: false,\n  startGame: false,\n  rightAnswer: [],\n  rightAnswersCount: 0,\n  currentlyResult: {}\n};\nexport default function gameReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_KIND:\n      const question = questions[action.payload][0];\n      return { ...state,\n        currentKind: action.payload,\n        currentOptions: question,\n        questionsLength: questions[action.payload].length,\n        endGame: false,\n        startGame: true,\n        rightAnswer: question.answer,\n        rightAnswersCount: 0 // questionContent: question.question,\n        // currentAnswersOption: question.answers,\n        // answer: question.answer\n\n      };\n\n    case REFRESH_GAME:\n      let game = loadFromLocalStorage('game');\n      return { ...state,\n        currentKind: game.currentKind,\n        currentOptions: game.currentOptions,\n        currentQuestionCount: game.currentQuestionCount,\n        questionsLength: game.questionsLength,\n        endGame: game.endGame,\n        startGame: game.startGame,\n        rightAnswer: game.rightAnswer,\n        rightAnswersCount: game.rightAnswersCount\n      };\n\n    case NEXT_GAME:\n      {\n        const question = questions[state.currentKind][state.currentQuestionCount + 1];\n        return { ...state,\n          currentQuestionCount: state.currentQuestionCount + 1,\n          // questionContent: question.question,\n          // currentAnswersOption: question.answers,\n          currentOptions: question,\n          rightAnswer: question.answer,\n          rightAnswersCount: action.payload ? state.rightAnswersCount + 1 : state.rightAnswersCount\n        };\n      }\n\n    case SET_CURRENTLY_RESULT:\n      return { ...state,\n        currentlyResult: action.payload\n      };\n\n    case END_GAME:\n      return { ...state,\n        currentQuestionCount: 0,\n        endGame: true,\n        startGame: false,\n        rightAnswersCount: action.payload ? state.rightAnswersCount + 1 : state.rightAnswersCount,\n        currentlyResult: action.result\n      };\n\n    case RESET_GAME:\n      return defaultState;\n\n    default:\n      return state;\n  }\n}\nexport const setKind = name => ({\n  type: SET_KIND,\n  payload: name\n});\nexport const refreshGame = () => ({\n  type: REFRESH_GAME\n});\nexport const nextGame = answerFlag => ({\n  type: NEXT_GAME,\n  payload: answerFlag\n});\nexport const endGame = (answerFlag, result) => ({\n  type: END_GAME,\n  payload: answerFlag,\n  result: result\n}); // export const setCurrentlyResult = (item) =>({type:SET_CURRENTLY_RESULT,payload:item})\n\nexport const resetGame = () => ({\n  type: RESET_GAME\n});","map":{"version":3,"sources":["F:/Myproject/node1/client/src/reducers/gameReducer.js"],"names":["loadFromLocalStorage","questions","require","SET_KIND","REFRESH_GAME","NEXT_GAME","END_GAME","RESET_GAME","SET_CURRENTLY_RESULT","defaultState","currentKind","currentQuestionCount","currentOptions","questionsLength","endGame","startGame","rightAnswer","rightAnswersCount","currentlyResult","gameReducer","state","action","type","question","payload","length","answer","game","result","setKind","name","refreshGame","nextGame","answerFlag","resetGame"],"mappings":"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","sourcesContent":["import {loadFromLocalStorage} from \"../store\";\r\n\r\nconst questions = require('../assets/questions.json');\r\n\r\nconst SET_KIND=\"SET_KIND\";\r\nconst REFRESH_GAME=\"REFRESH_GAME\";\r\nconst NEXT_GAME=\"NEXT_GAME\";\r\nconst END_GAME=\"END_GAME\";\r\nconst RESET_GAME=\"RESET_GAME\";\r\nconst SET_CURRENTLY_RESULT=\"SET_CURRENTLY_RESULT\";\r\n\r\n\r\nconst defaultState = {\r\n    currentKind:\"\",\r\n    currentQuestionCount:0,\r\n    currentOptions:{},\r\n    questionsLength: 0,\r\n    endGame:false,\r\n    startGame:false,\r\n    rightAnswer:[],\r\n    rightAnswersCount:0,\r\n    currentlyResult:{},\r\n}\r\n\r\nexport default function gameReducer(state=defaultState,action) {\r\n    switch (action.type) {\r\n        case SET_KIND:\r\n            const question = questions[action.payload][0];\r\n            return {\r\n                ...state,\r\n                currentKind: action.payload,\r\n                currentOptions: question,\r\n                questionsLength: questions[action.payload].length,\r\n                endGame: false,\r\n                startGame: true,\r\n                rightAnswer: question.answer,\r\n                rightAnswersCount:0\r\n                // questionContent: question.question,\r\n                // currentAnswersOption: question.answers,\r\n                // answer: question.answer\r\n            }\r\n        case REFRESH_GAME:\r\n            let game = loadFromLocalStorage('game');\r\n            return {\r\n                ...state,\r\n                currentKind:game.currentKind,\r\n                currentOptions: game.currentOptions,\r\n                currentQuestionCount: game.currentQuestionCount,\r\n                questionsLength: game.questionsLength,\r\n                endGame: game.endGame,\r\n                startGame: game.startGame,\r\n                rightAnswer: game.rightAnswer,\r\n                rightAnswersCount: game.rightAnswersCount\r\n            }\r\n        case NEXT_GAME:{\r\n            const question = questions[state.currentKind][state.currentQuestionCount+1];\r\n            return {\r\n                ...state,\r\n                currentQuestionCount: state.currentQuestionCount+1,\r\n                // questionContent: question.question,\r\n                // currentAnswersOption: question.answers,\r\n                currentOptions: question,\r\n                rightAnswer: question.answer,\r\n                rightAnswersCount: action.payload ? state.rightAnswersCount+1 : state.rightAnswersCount\r\n\r\n            }\r\n\r\n        }\r\n        case SET_CURRENTLY_RESULT:\r\n            return {\r\n                ...state,\r\n                currentlyResult: action.payload\r\n            }\r\n        case END_GAME:\r\n            return {\r\n                ...state,\r\n                currentQuestionCount: 0,\r\n                endGame: true,\r\n                startGame: false,\r\n                rightAnswersCount: action.payload ? state.rightAnswersCount+1 : state.rightAnswersCount,\r\n                currentlyResult: action.result\r\n            }\r\n        case RESET_GAME:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setKind = (name) =>({type:SET_KIND,payload:name})\r\nexport const refreshGame = () =>({type:REFRESH_GAME})\r\nexport const nextGame = (answerFlag) => ({type:NEXT_GAME,payload:answerFlag})\r\nexport const endGame = (answerFlag,result) => ({type:END_GAME,payload:answerFlag,result:result})\r\n// export const setCurrentlyResult = (item) =>({type:SET_CURRENTLY_RESULT,payload:item})\r\nexport const resetGame = () => ({type:RESET_GAME})"]},"metadata":{},"sourceType":"module"}