{"ast":null,"code":"const questions = require('../assets/questions.json');\n\nconst SET_KIND = \"SET_KIND\";\nconst START_GAME = \"START_GAME\";\nconst NEXT_GAME = \"NEXT_GAME\";\nconst END_GAME = \"END_GAME\";\nconst defaultState = {\n  currentKind: \"\",\n  currentQuestionCount: 0,\n  currentOptions: {},\n  questionsLength: 0,\n  endGame: false,\n  rightAnswer: [],\n  rightAnswersCount: 0\n};\nexport default function gameReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_KIND:\n      const question = questions[action.payload][0];\n      return { ...state,\n        currentKind: action.payload,\n        currentOptions: question,\n        questionsLength: questions[action.payload].length,\n        endGame: false,\n        rightAnswer: question.answer,\n        rightAnswersCount: 0 // questionContent: question.question,\n        // currentAnswersOption: question.answers,\n        // answer: question.answer\n\n      };\n    // case START_GAME:\n    //\n    //     return {\n    //         ...state,\n    //         currentOptions: question,\n    //         questionContent: question.question,\n    //         currentAnswersOption: question.answers,\n    //         answer: question.answer\n    //     }\n\n    case NEXT_GAME:\n      {\n        const question = questions[state.currentKind][state.currentQuestionCount + 1];\n        return { ...state,\n          currentQuestionCount: state.currentQuestionCount + 1,\n          // questionContent: question.question,\n          // currentAnswersOption: question.answers,\n          currentOptions: question,\n          rightAnswer: question.answer,\n          rightAnswersCount: action.payload ? state.rightAnswersCount + 1 : state.rightAnswersCount\n        };\n      }\n\n    case END_GAME:\n      return { ...state,\n        currentQuestionCount: 0,\n        endGame: true\n      };\n\n    default:\n      return state;\n  }\n}\nexport const setKind = name => ({\n  type: SET_KIND,\n  payload: name\n});\nexport const startGame = () => ({\n  type: START_GAME\n});\nexport const nextGame = answer => ({\n  type: NEXT_GAME,\n  payload: answer\n});\nexport const endGame = () => ({\n  type: END_GAME\n});","map":{"version":3,"sources":["F:/Myproject/node1/client/src/reducers/gameReducer.js"],"names":["questions","require","SET_KIND","START_GAME","NEXT_GAME","END_GAME","defaultState","currentKind","currentQuestionCount","currentOptions","questionsLength","endGame","rightAnswer","rightAnswersCount","gameReducer","state","action","type","question","payload","length","answer","setKind","name","startGame","nextGame"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,0BAAD,CAAzB;;AAEA,MAAMC,QAAQ,GAAC,UAAf;AACA,MAAMC,UAAU,GAAC,YAAjB;AACA,MAAMC,SAAS,GAAC,WAAhB;AACA,MAAMC,QAAQ,GAAC,UAAf;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAC,EADK;AAEjBC,EAAAA,oBAAoB,EAAC,CAFJ;AAGjBC,EAAAA,cAAc,EAAC,EAHE;AAIjBC,EAAAA,eAAe,EAAE,CAJA;AAKjBC,EAAAA,OAAO,EAAC,KALS;AAMjBC,EAAAA,WAAW,EAAC,EANK;AAOjBC,EAAAA,iBAAiB,EAAC;AAPD,CAArB;AAUA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAACT,YAA3B,EAAwCU,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,QAAL;AACI,YAAMgB,QAAQ,GAAGlB,SAAS,CAACgB,MAAM,CAACG,OAAR,CAAT,CAA0B,CAA1B,CAAjB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHR,QAAAA,WAAW,EAAES,MAAM,CAACG,OAFjB;AAGHV,QAAAA,cAAc,EAAES,QAHb;AAIHR,QAAAA,eAAe,EAAEV,SAAS,CAACgB,MAAM,CAACG,OAAR,CAAT,CAA0BC,MAJxC;AAKHT,QAAAA,OAAO,EAAE,KALN;AAMHC,QAAAA,WAAW,EAAEM,QAAQ,CAACG,MANnB;AAOHR,QAAAA,iBAAiB,EAAC,CAPf,CAQH;AACA;AACA;;AAVG,OAAP;AAYJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKT,SAAL;AAAe;AACX,cAAMc,QAAQ,GAAGlB,SAAS,CAACe,KAAK,CAACR,WAAP,CAAT,CAA6BQ,KAAK,CAACP,oBAAN,GAA2B,CAAxD,CAAjB;AACA,eAAO,EACH,GAAGO,KADA;AAEHP,UAAAA,oBAAoB,EAAEO,KAAK,CAACP,oBAAN,GAA2B,CAF9C;AAGH;AACA;AACAC,UAAAA,cAAc,EAAES,QALb;AAMHN,UAAAA,WAAW,EAAEM,QAAQ,CAACG,MANnB;AAOHR,UAAAA,iBAAiB,EAAEG,MAAM,CAACG,OAAP,GAAiBJ,KAAK,CAACF,iBAAN,GAAwB,CAAzC,GAA6CE,KAAK,CAACF;AAPnE,SAAP;AAWH;;AACD,SAAKR,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHP,QAAAA,oBAAoB,EAAE,CAFnB;AAGHG,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ;AACI,aAAOI,KAAP;AA9CR;AAgDH;AAED,OAAO,MAAMO,OAAO,GAAIC,IAAD,KAAU;AAACN,EAAAA,IAAI,EAACf,QAAN;AAAeiB,EAAAA,OAAO,EAACI;AAAvB,CAAV,CAAhB;AACP,OAAO,MAAMC,SAAS,GAAG,OAAM;AAACP,EAAAA,IAAI,EAACd;AAAN,CAAN,CAAlB;AACP,OAAO,MAAMsB,QAAQ,GAAIJ,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAACb,SAAN;AAAgBe,EAAAA,OAAO,EAACE;AAAxB,CAAb,CAAjB;AACP,OAAO,MAAMV,OAAO,GAAG,OAAO;AAACM,EAAAA,IAAI,EAACZ;AAAN,CAAP,CAAhB","sourcesContent":["const questions = require('../assets/questions.json');\r\n\r\nconst SET_KIND=\"SET_KIND\";\r\nconst START_GAME=\"START_GAME\";\r\nconst NEXT_GAME=\"NEXT_GAME\";\r\nconst END_GAME=\"END_GAME\";\r\n\r\n\r\nconst defaultState = {\r\n    currentKind:\"\",\r\n    currentQuestionCount:0,\r\n    currentOptions:{},\r\n    questionsLength: 0,\r\n    endGame:false,\r\n    rightAnswer:[],\r\n    rightAnswersCount:0\r\n}\r\n\r\nexport default function gameReducer(state=defaultState,action) {\r\n    switch (action.type) {\r\n        case SET_KIND:\r\n            const question = questions[action.payload][0];\r\n            return {\r\n                ...state,\r\n                currentKind: action.payload,\r\n                currentOptions: question,\r\n                questionsLength: questions[action.payload].length,\r\n                endGame: false,\r\n                rightAnswer: question.answer,\r\n                rightAnswersCount:0\r\n                // questionContent: question.question,\r\n                // currentAnswersOption: question.answers,\r\n                // answer: question.answer\r\n            }\r\n        // case START_GAME:\r\n        //\r\n        //     return {\r\n        //         ...state,\r\n        //         currentOptions: question,\r\n        //         questionContent: question.question,\r\n        //         currentAnswersOption: question.answers,\r\n        //         answer: question.answer\r\n        //     }\r\n        case NEXT_GAME:{\r\n            const question = questions[state.currentKind][state.currentQuestionCount+1];\r\n            return {\r\n                ...state,\r\n                currentQuestionCount: state.currentQuestionCount+1,\r\n                // questionContent: question.question,\r\n                // currentAnswersOption: question.answers,\r\n                currentOptions: question,\r\n                rightAnswer: question.answer,\r\n                rightAnswersCount: action.payload ? state.rightAnswersCount+1 : state.rightAnswersCount\r\n\r\n            }\r\n\r\n        }\r\n        case END_GAME:\r\n            return {\r\n                ...state,\r\n                currentQuestionCount: 0,\r\n                endGame: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setKind = (name) =>({type:SET_KIND,payload:name})\r\nexport const startGame = () =>({type:START_GAME})\r\nexport const nextGame = (answer) => ({type:NEXT_GAME,payload:answer})\r\nexport const endGame = () => ({type:END_GAME})"]},"metadata":{},"sourceType":"module"}