{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\settings\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useInput } from \"../../utils/validator/validator\";\nimport Input from \"../../utils/input/input\";\nimport { edit } from \"../../actions/settings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const email = useSelector(state => state.user.currentUser.email);\n  const top = useSelector(state => state.app.top);\n  const amount = useSelector(state => state.app.amount);\n  const oldPassword = useInput('', {\n    isEmpty: {\n      value: true,\n      text: 'Field is empty'\n    },\n    minLength: {\n      value: 3,\n      text: 'min length'\n    },\n    maxLength: {\n      value: 8,\n      text: 'max length'\n    }\n  });\n  const newPassword = useInput('', {\n    isEmpty: {\n      value: true,\n      text: 'Field is empty'\n    },\n    minLength: {\n      value: 3,\n      text: 'min length'\n    },\n    maxLength: {\n      value: 8,\n      text: 'max length'\n    }\n  });\n  const [form, setForm] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'd-flex flex-column',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'd-flex flex-column',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"History of the quizzes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'd-flex',\n          children: Object.keys(amount).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item, \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 49\n              }, this), \" \", amount[item].value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 35\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'd-flex flex-column',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Top at follow kind\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'd-flex',\n          children: Object.keys(top).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item, \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 50\n              }, this), \" \", top[item]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'd-flex flex-column',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AVG of right answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'd-flex',\n          children: Object.keys(amount).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item, \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 50\n              }, this), \" \", amount[item].avg]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-secondary',\n      onClick: () => setForm(!form),\n      children: \"Edit profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), form ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [oldPassword.isDirty && oldPassword.printError(['isEmpty', 'minLengthError', 'maxLengthError']), /*#__PURE__*/_jsxDEV(Input, {\n        setValue: oldPassword.onChange,\n        onBlur: oldPassword.onBlur,\n        value: oldPassword.value,\n        type: \"password\",\n        placeholder: \"input previous password...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), newPassword.isDirty && newPassword.printError(['isEmpty', 'minLengthError', 'maxLengthError']), /*#__PURE__*/_jsxDEV(Input, {\n        setValue: newPassword.onChange,\n        onBlur: newPassword.onBlur,\n        value: newPassword.value,\n        type: \"password\",\n        placeholder: \"input new password...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btn btn-primary',\n        disabled: !oldPassword.inputValid.value || !newPassword.inputValid.value,\n        onClick: () => {\n          let a = edit(email, oldPassword.value, newPassword.value);\n          console.log(a); // console.log(a);\n          // !a? setForm(false):setForm(true);\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Settings, \"2H7H/RanJts4JQEdjqKDwXG16kg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useInput, useInput];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/settings/Settings.jsx"],"names":["React","useState","useSelector","useInput","Input","edit","Settings","email","state","user","currentUser","top","app","amount","oldPassword","isEmpty","value","text","minLength","maxLength","newPassword","form","setForm","Object","keys","map","item","avg","isDirty","printError","onChange","onBlur","inputValid","a","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {useInput} from \"../../utils/validator/validator\";\r\nimport Input from \"../../utils/input/input\";\r\nimport {edit} from \"../../actions/settings\";\r\n\r\nconst Settings = () => {\r\n    const email = useSelector(state=>state.user.currentUser.email)\r\n    const top = useSelector(state=>state.app.top)\r\n    const amount = useSelector(state=>state.app.amount)\r\n    const oldPassword = useInput('',{isEmpty: {value:true,text:'Field is empty'},minLength: {value:3,text:'min length'},maxLength: {value:8,text:'max length'}})\r\n    const newPassword = useInput('',{isEmpty: {value:true,text:'Field is empty'},minLength: {value:3,text:'min length'},maxLength: {value:8,text:'max length'}})\r\n    const [form,setForm] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <img src=\"\" alt=\"\"/>\r\n            <div className={'d-flex flex-column'}>\r\n                <div>\r\n                    Email: {email}\r\n                </div>\r\n                <div className={'d-flex flex-column'}>\r\n                    <h3>History of the quizzes</h3>\r\n                    <div className={'d-flex'}>\r\n                        {Object.keys(amount).map((item)=>{\r\n                           return <span>{item}: <br /> {amount[item].value}</span>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className={'d-flex flex-column'}>\r\n                    <h3>Top at follow kind</h3>\r\n                    <div className={'d-flex'}>\r\n                        {Object.keys(top).map((item)=>{\r\n                            return <span>{item}: <br /> {top[item]}</span>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className={'d-flex flex-column'}>\r\n                    <h3>AVG of right answer</h3>\r\n                    <div className={'d-flex'}>\r\n                        {Object.keys(amount).map((item)=>{\r\n                            return <span>{item}: <br /> {amount[item].avg}</span>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className={'btn btn-secondary'} onClick={()=>setForm(!form)}>Edit profile</button>\r\n            {form ?\r\n                <div>\r\n                    {oldPassword.isDirty && oldPassword.printError(['isEmpty', 'minLengthError', 'maxLengthError'])}\r\n\r\n                    <Input setValue={oldPassword.onChange} onBlur={oldPassword.onBlur} value={oldPassword.value}\r\n                           type={\"password\"} placeholder={\"input previous password...\"}/>\r\n\r\n                    {newPassword.isDirty && newPassword.printError(['isEmpty', 'minLengthError', 'maxLengthError'])}\r\n\r\n                    <Input setValue={newPassword.onChange} onBlur={newPassword.onBlur} value={newPassword.value}\r\n                           type={\"password\"} placeholder={\"input new password...\"}/>\r\n                    {/*{(!email.inputValid.value || !password.inputValid.value) && <div>{email.inputValid.text || password.inputValid.text}</div>}*/}\r\n\r\n                    <button className={'btn btn-primary'}\r\n                        disabled={!oldPassword.inputValid.value || !newPassword.inputValid.value}\r\n                        onClick={() => {\r\n                            let a = edit(email, oldPassword.value, newPassword.value);\r\n                            console.log(a);\r\n                            // console.log(a);\r\n                            // !a? setForm(false):setForm(true);\r\n                        }\r\n\r\n                        }>Save\r\n                    </button>\r\n                </div> : ''\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}