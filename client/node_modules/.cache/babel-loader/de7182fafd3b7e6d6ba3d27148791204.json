{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\range\\\\Range.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadFromLocalStorage, store } from \"../../store\";\nimport Modal from \"../../utils/Modal/Modal\";\nimport { setCurrentlyRange } from \"../../reducers/appReducer\";\nimport { actionRefreshRange } from \"../../actions/range\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Range = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let range = useSelector(state => state.app.currentlyRange);\n  const localHistory = loadFromLocalStorage('history');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: localHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"You don't play in quiz yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n\n    /*<div  className=\"d-flex justify-content-center\">*/\n\n    /*    <div id={\"preloader\"}  className=\"spinner-border\" role=\"status\">*/\n\n    /*        <span className=\"sr-only\">Loading...</span>*/\n\n    /*    </div>*/\n\n    /*</div>*/\n    _jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid justify-content-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: range.length === 0 ? \"btn btn-outline-success active\" : \"btn btn-outline-success \",\n          onClick: () => dispatch(setCurrentlyRange('history')),\n          type: \"button\",\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: () => dispatch(setCurrentlyRange('geography')),\n          type: \"button\",\n          children: \"Geography\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: () => dispatch(setCurrentlyRange('biology')),\n          type: \"button\",\n          children: \"Biology\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: () => dispatch(setCurrentlyRange('mixed')),\n          type: \"button\",\n          children: \"Mixed quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-center border border-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u2116\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Percentage of answers is right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of this quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: range.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"text-center border border-secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [item.result, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Range, \"pvaOtgwKYqp1I6a303lht9zrHQQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Range;\nexport default Range;\n\nvar _c;\n\n$RefreshReg$(_c, \"Range\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/range/Range.jsx"],"names":["React","Suspense","useEffect","useState","useDispatch","useSelector","loadFromLocalStorage","store","Modal","setCurrentlyRange","actionRefreshRange","Range","dispatch","range","state","app","currentlyRange","localHistory","length","map","item","index","username","result","date"],"mappings":"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","sourcesContent":["import React, {Suspense, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loadFromLocalStorage, store} from \"../../store\";\r\nimport Modal from \"../../utils/Modal/Modal\";\r\nimport {setCurrentlyRange} from \"../../reducers/appReducer\";\r\nimport {actionRefreshRange} from \"../../actions/range\";\r\n\r\nconst Range = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    let range = useSelector(state=>state.app.currentlyRange);\r\n    const localHistory = loadFromLocalStorage('history');\r\n    return (\r\n        <div>\r\n            {localHistory.length === 0 ?\r\n                <div>\r\n                    You don't play in quiz yet\r\n                </div>\r\n                :\r\n\r\n                /*<div  className=\"d-flex justify-content-center\">*/\r\n                /*    <div id={\"preloader\"}  className=\"spinner-border\" role=\"status\">*/\r\n                /*        <span className=\"sr-only\">Loading...</span>*/\r\n                /*    </div>*/\r\n                /*</div>*/\r\n\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <div className=\"container-fluid justify-content-start\">\r\n                        <button\r\n                            className={range.length === 0 ? \"btn btn-outline-success active\" : \"btn btn-outline-success \"}\r\n                            onClick={() => dispatch(setCurrentlyRange('history'))}\r\n                            type=\"button\">History\r\n                        </button>\r\n                        <button className=\"btn btn-outline-success\"\r\n                                onClick={() => dispatch(setCurrentlyRange('geography'))}\r\n                                type=\"button\">Geography\r\n                        </button>\r\n                        <button className=\"btn btn-outline-success\"\r\n                                onClick={() => dispatch(setCurrentlyRange('biology'))}\r\n                                type=\"button\">Biology\r\n                        </button>\r\n                        <button className=\"btn btn-outline-secondary\"\r\n                                onClick={() => dispatch(setCurrentlyRange('mixed'))}\r\n                                type=\"button\">Mixed quiz\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <table>\r\n                            <thead className={\"text-center border border-secondary\"}>\r\n                            <th>№</th>\r\n                            <th>Username</th>\r\n                            <th>Percentage of answers is right</th>\r\n                            <th>Date of this quiz</th>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {\r\n                                range.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index} className={\"text-center border border-secondary\"}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{item.username}</td>\r\n                                            <td>{item.result}%</td>\r\n                                            <td>{item.date}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </nav>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Range;"]},"metadata":{},"sourceType":"module"}