{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\game\\\\SelectGame.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, NavLink, Route } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../reducers/userReducer\";\nimport { setKind } from \"../../reducers/gameReducer\";\nimport { CSSTransition } from \"react-transition-group\";\nimport saveToLocalStorage, { store } from \"../../store\";\nimport './game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectGame = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const routes = ['history', 'biology', 'geography', 'mixed']; // const kind = useSelector(state=>state.game.currentKind)\n  // console.log(kind);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kinds\",\n    children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: props.match != null,\n      timeout: 100,\n      classNames: \"page\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u042D\\u0442\\u0430 \\u0438\\u0433\\u0440\\u0430 \\u0436\\u0430\\u043D\\u0440\\u0430 \\\"\", props.kind, \"\\\", \\u043A\\u043E\\u0442\\u043E\\u0440\\u0430\\u044F \\u0432\\u043A\\u043B\\u044E\\u0447\\u0430\\u0435\\u0442 20 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432. \\u041D\\u0430\\u0436\\u0430\\u0432 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0443 \\\"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0430\\u0442\\u044C\\\" \\u0432\\u044B \\u043D\\u0435 \\u0441\\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0432\\u044B\\u0439\\u0442\\u0438 \\u043E\\u0431\\u0440\\u0430\\u0442\\u043D\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: '/game/' + props.kind,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              dispatch(setKind(props.kind));\n              saveToLocalStorage('game', store.getState().game);\n            },\n            children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectGame, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SelectGame;\nexport default SelectGame; // const mapStateToProps = (state, ownProps) => ({\n//     name:  ownProps.params.name\n// })\n//\n// export default connect(mapStateToProps)(SelectGame);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectGame\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/game/SelectGame.jsx"],"names":["React","BrowserRouter","Router","NavLink","Route","connect","useDispatch","useSelector","logout","setKind","CSSTransition","saveToLocalStorage","store","SelectGame","props","dispatch","routes","match","kind","getState","game"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,OAAjC,EAA0CC,KAA1C,QAAsD,kBAAtD;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,WAA9B,QAAgD,aAAhD;AACA,SAAQC,MAAR,QAAqB,4BAArB;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,kBAAP,IAA4BC,KAA5B,QAAwC,aAAxC;AACA,OAAO,YAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAG,CAAC,SAAD,EAAW,SAAX,EAAqB,WAArB,EAAiC,OAAjC,CAAf,CAF0B,CAG1B;AACA;;AACA,sBAEI;AAAK,IAAA,SAAS,EAAE,OAAhB;AAAA,2BACY,QAAC,aAAD;AACI,MAAA,EAAE,EAAEF,KAAK,CAACG,KAAN,IAAe,IADvB;AAEI,MAAA,OAAO,EAAE,GAFb;AAGI,MAAA,UAAU,EAAC,MAHf;AAII,MAAA,aAAa,MAJjB;AAAA,6BAMI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACQ;AAAA,sGAAoBH,KAAK,CAACI,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ,QAAC,OAAD;AAAS,UAAA,EAAE,EAAE,WAASJ,KAAK,CAACI,IAA5B;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAI;AACjBH,cAAAA,QAAQ,CAACN,OAAO,CAACK,KAAK,CAACI,IAAP,CAAR,CAAR;AACAP,cAAAA,kBAAkB,CAAC,MAAD,EAAQC,KAAK,CAACO,QAAN,GAAiBC,IAAzB,CAAlB;AACN,aAHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiDH,CAtDD;;GAAMP,U;UACeP,W;;;KADfO,U;AAwDN,eAAeA,UAAf,C,CACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router, NavLink, Route} from \"react-router-dom\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../reducers/userReducer\";\r\nimport {setKind} from \"../../reducers/gameReducer\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport saveToLocalStorage, {store} from \"../../store\";\r\nimport './game.css'\r\n\r\nconst SelectGame = (props) => {\r\n    const dispatch = useDispatch();\r\n    const routes = ['history','biology','geography','mixed'];\r\n    // const kind = useSelector(state=>state.game.currentKind)\r\n    // console.log(kind);\r\n    return (\r\n\r\n        <div className={\"kinds\"}>\r\n                    <CSSTransition\r\n                        in={props.match != null}\r\n                        timeout={100}\r\n                        classNames=\"page\"\r\n                        unmountOnExit\r\n                    >\r\n                        <div className=\"page\">\r\n                                <p>Эта игра жанра \"{props.kind}\", которая включает 20 вопросов. Нажав кнопку \"Начать играть\" вы не сможете выйти обратно</p>\r\n                                <NavLink to={'/game/'+props.kind}>\r\n                                    <button onClick={()=>{\r\n                                        dispatch(setKind(props.kind));\r\n                                        saveToLocalStorage('game',store.getState().game);\r\n                                 }}>\r\n                                    Начать игру\r\n                                    </button>\r\n                                </NavLink>\r\n                        </div>\r\n                    </CSSTransition>\r\n\r\n\r\n\r\n            {/*<NavLink to={'/game/geography'}>*/}\r\n            {/*    <button onClick={()=>{ dispatch(setKind(\"geography\"));*/}\r\n            {/*     saveToLocalStorage('game',store.getState().game);*/}\r\n            {/*    }}>geography</button>*/}\r\n            {/*</NavLink>*/}\r\n            {/*<NavLink*/}\r\n            {/*    to={'/game/history'}>*/}\r\n            {/*    <button onClick={()=> {*/}\r\n            {/*        dispatch(setKind(\"history\"));*/}\r\n            {/*        saveToLocalStorage('game',store.getState().game);*/}\r\n            {/*    }}>history</button>*/}\r\n            {/*</NavLink>*/}\r\n            {/*<NavLink exact to={'/game/biology'}>*/}\r\n            {/*    <button onClick={()=> {*/}\r\n            {/*        dispatch(setKind(\"biology\"));*/}\r\n            {/*        saveToLocalStorage('game',store.getState().game);*/}\r\n            {/*    }}>biology</button>*/}\r\n            {/*</NavLink>*/}\r\n            {/*<NavLink to={'/game/mixed'}>*/}\r\n            {/*    <button onClick={()=>{ dispatch(setKind(\"mixed\"));*/}\r\n            {/*     saveToLocalStorage('game',store.getState().game);*/}\r\n            {/*    }}>Mixed</button>*/}\r\n            {/*</NavLink>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectGame;\r\n// const mapStateToProps = (state, ownProps) => ({\r\n//     name:  ownProps.params.name\r\n// })\r\n//\r\n// export default connect(mapStateToProps)(SelectGame);"]},"metadata":{},"sourceType":"module"}