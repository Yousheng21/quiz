{"ast":null,"code":"import React from \"react\";\nimport saveToLocalStorage, { store } from \"../store\";\nimport axios from \"axios\";\nimport { refreshHistory, setHistory } from \"../reducers/appReducer\";\nexport const startHistory = () => {\n  return async dispatch => {\n    try {\n      let amount = {};\n      const id = store.getState().user.currentUser.id;\n      const response = await axios.post('http://localhost:5000/history/response', {\n        id\n      });\n      amount = counterQuizzes(response.data.response);\n      console.log(amount);\n      saveToLocalStorage('history', response.data.response);\n      saveToLocalStorage('amount', amount);\n      console.log(response.data.response);\n      dispatch(setHistory(response.data.response, amount));\n    } catch (e) {\n      console.log(e.response);\n    }\n  };\n};\n\nconst counterQuizzes = history => {\n  const userId = store.getState().user.currentUser.id;\n  let amount = {\n    history: {\n      value: 0,\n      avg: 0\n    },\n    biology: {\n      value: 0,\n      avg: 0\n    },\n    geography: {\n      value: 0,\n      avg: 0\n    },\n    mixed: {\n      value: 0,\n      avg: 0\n    }\n  };\n  history.forEach(item => {\n    if (item.userId === userId) {\n      switch (item.kind) {\n        case 'history':\n          {\n            amount.history.value++;\n            amount.history.avg += item.result;\n            break;\n          }\n\n        case 'biology':\n          {\n            amount.biology++;\n            amount.biology.avg += item.result;\n            break;\n          }\n\n        case 'geography':\n          {\n            amount.geography++;\n            amount.geography.avg += item.result;\n            break;\n          }\n\n        case 'mixed':\n          {\n            amount.mixed++;\n            amount.mixed.avg += item.result;\n            break;\n          }\n      }\n    }\n  });\n  console.log(amount); // Object.keys(amount).map((item)=>{\n  //     amount[item].avg /= amount[item].value\n  // })\n\n  return amount;\n};\n\nexport const actionRefreshHistory = () => {\n  let history = store.getState().app.history;\n  if (history.length === 0) store.dispatch(refreshHistory());\n};","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/history.js"],"names":["React","saveToLocalStorage","store","axios","refreshHistory","setHistory","startHistory","dispatch","amount","id","getState","user","currentUser","response","post","counterQuizzes","data","console","log","e","history","userId","value","avg","biology","geography","mixed","forEach","item","kind","result","actionRefreshHistory","app","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport saveToLocalStorage, {store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {refreshHistory, setHistory} from \"../reducers/appReducer\";\r\n\r\n\r\nexport const  startHistory = () =>{\r\n    return async dispatch =>{\r\n        try {\r\n            let amount = {};\r\n            const id = store.getState().user.currentUser.id;\r\n            const response = await axios.post('http://localhost:5000/history/response',{\r\n                id\r\n            });\r\n            amount = counterQuizzes(response.data.response);\r\n            console.log(amount);\r\n            saveToLocalStorage('history',response.data.response);\r\n            saveToLocalStorage('amount',amount);\r\n            console.log(response.data.response);\r\n\r\n            dispatch(setHistory(response.data.response,amount ));\r\n\r\n        } catch (e) {\r\n            console.log(e.response);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nconst counterQuizzes = (history) => {\r\n    const userId = store.getState().user.currentUser.id;\r\n    let amount = {\r\n        history:{\r\n            value:0,\r\n            avg:0\r\n        },\r\n        biology: {\r\n            value:0,\r\n            avg:0\r\n        },\r\n        geography: {\r\n            value:0,\r\n            avg:0\r\n        },\r\n        mixed:{\r\n            value:0,\r\n            avg:0\r\n        }\r\n    };\r\n\r\n    history.forEach((item)=>{\r\n        if (item.userId===userId){\r\n            switch (item.kind) {\r\n                case 'history':{\r\n                    amount.history.value++;\r\n                    amount.history.avg += item.result;\r\n                    break;\r\n                }\r\n                case 'biology':{\r\n                    amount.biology++;\r\n                    amount.biology.avg += item.result;\r\n                    break;\r\n                }\r\n                case 'geography':{\r\n                    amount.geography++;\r\n                    amount.geography.avg += item.result;\r\n                    break;\r\n                }\r\n                case 'mixed':{\r\n                    amount.mixed++;\r\n                    amount.mixed.avg += item.result;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    })\r\n    console.log(amount);\r\n    // Object.keys(amount).map((item)=>{\r\n    //     amount[item].avg /= amount[item].value\r\n    // })\r\n    return amount;\r\n\r\n}\r\n\r\nexport const actionRefreshHistory = ()=>{\r\n    let history = store.getState().app.history;\r\n    if (history.length === 0) store.dispatch(refreshHistory());\r\n}"]},"metadata":{},"sourceType":"module"}