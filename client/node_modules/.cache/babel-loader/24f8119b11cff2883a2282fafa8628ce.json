{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { endGame, nextGame } from \"../reducers/gameReducer\";\nimport { store } from \"../reducers\";\nimport { useSelector } from \"react-redux\";\nexport const next = (current, length) => {\n  var selectedCheckBoxes = document.querySelectorAll('input.radioCustomButton:checked');\n  var checkedValues = Array.from(selectedCheckBoxes).map(cb => cb.value);\n  console.log(checkedValues);\n\n  if (current === length) {\n    end();\n  } else store.dispatch(nextGame());\n};\n\nconst end = () => {\n  store.dispatch(endGame());\n};\n\nconst setAnswer = answer => {\n  _s();\n\n  const rightAnser = useSelector(state => state.r);\n  let count = 0,\n      flag = false,\n      rightAnswer = store.rightAnswer;\n  answer.map((item, index) => {\n    if (rightAnswer.includes(item)) count++;\n  });\n\n  if (rightAnswer.length === count) {\n    flag = true;\n    let answerRight = this.state.answersRight + 1;\n    this.setState({\n      answersRight: answerRight\n    });\n  }\n\n  answer.map((item, index) => {\n    let input = document.getElementById(item);\n    input.className = flag ? \"radioCustomButton1\" : \"radioCustomButton2\";\n  });\n};\n\n_s(setAnswer, \"um0/9dYGhbMDWwPcqxoPuATWm8U=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/game.js"],"names":["React","endGame","nextGame","store","useSelector","next","current","length","selectedCheckBoxes","document","querySelectorAll","checkedValues","Array","from","map","cb","value","console","log","end","dispatch","setAnswer","answer","rightAnser","state","r","count","flag","rightAnswer","item","index","includes","answerRight","answersRight","setState","input","getElementById","className"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,yBAAhC;AACA,SAAQC,KAAR,QAAoB,aAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAGA,OAAO,MAAMC,IAAI,GAAG,CAACC,OAAD,EAASC,MAAT,KAAmB;AACnC,MAAIC,kBAAkB,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,iCAA1B,CAAzB;AACA,MAAIC,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWL,kBAAX,EAA+BM,GAA/B,CAAmCC,EAAE,IAAIA,EAAE,CAACC,KAA5C,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;;AACA,MAAIL,OAAO,KAAKC,MAAhB,EAAwB;AACpBY,IAAAA,GAAG;AACN,GAFD,MAEQhB,KAAK,CAACiB,QAAN,CAAelB,QAAQ,EAAvB;AACX,CAPM;;AAaP,MAAMiB,GAAG,GAAG,MAAK;AACbhB,EAAAA,KAAK,CAACiB,QAAN,CAAenB,OAAO,EAAtB;AACH,CAFD;;AAIA,MAAMoB,SAAS,GAAIC,MAAD,IAAW;AAAA;;AACzB,QAAMC,UAAU,GAAGnB,WAAW,CAACoB,KAAK,IAAEA,KAAK,CAACC,CAAd,CAA9B;AACA,MAAIC,KAAK,GAAG,CAAZ;AAAA,MAAeC,IAAI,GAAG,KAAtB;AAAA,MACIC,WAAW,GAAGzB,KAAK,CAACyB,WADxB;AAEAN,EAAAA,MAAM,CAACR,GAAP,CAAW,CAACe,IAAD,EAAMC,KAAN,KAAc;AACrB,QAAGF,WAAW,CAACG,QAAZ,CAAqBF,IAArB,CAAH,EACIH,KAAK;AACZ,GAHD;;AAIA,MAAGE,WAAW,CAACrB,MAAZ,KAAuBmB,KAA1B,EAAgC;AAC5BC,IAAAA,IAAI,GAAG,IAAP;AACA,QAAIK,WAAW,GAAG,KAAKR,KAAL,CAAWS,YAAX,GAAwB,CAA1C;AACA,SAAKC,QAAL,CAAc;AACVD,MAAAA,YAAY,EAAED;AADJ,KAAd;AAGH;;AACDV,EAAAA,MAAM,CAACR,GAAP,CAAW,CAACe,IAAD,EAAMC,KAAN,KAAc;AACrB,QAAIK,KAAK,GAAG1B,QAAQ,CAAC2B,cAAT,CAAwBP,IAAxB,CAAZ;AACAM,IAAAA,KAAK,CAACE,SAAN,GAAkBV,IAAI,GAAG,oBAAH,GAA0B,oBAAhD;AACH,GAHD;AAIH,CAnBD;;GAAMN,S;UACiBjB,W","sourcesContent":["import React from \"react\";\r\nimport {endGame, nextGame} from \"../reducers/gameReducer\";\r\nimport {store} from \"../reducers\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nexport const next = (current,length) =>{\r\n    var selectedCheckBoxes = document.querySelectorAll('input.radioCustomButton:checked');\r\n    var checkedValues = Array.from(selectedCheckBoxes).map(cb => cb.value);\r\n    console.log(checkedValues);\r\n    if (current === length) {\r\n        end();\r\n    } else  store.dispatch(nextGame())\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst end = () =>{\r\n    store.dispatch(endGame())\r\n}\r\n\r\nconst setAnswer = (answer) =>{\r\n    const rightAnser = useSelector(state=>state.r)\r\n    let count = 0, flag = false,\r\n        rightAnswer = store.rightAnswer;\r\n    answer.map((item,index)=>{\r\n        if(rightAnswer.includes(item))\r\n            count++;\r\n    });\r\n    if(rightAnswer.length === count){\r\n        flag = true;\r\n        let answerRight = this.state.answersRight+1;\r\n        this.setState({\r\n            answersRight: answerRight,\r\n        });\r\n    }\r\n    answer.map((item,index)=>{\r\n        let input = document.getElementById(item);\r\n        input.className = flag ? \"radioCustomButton1\" : \"radioCustomButton2\";\r\n    });\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}