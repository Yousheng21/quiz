{"ast":null,"code":"import React from \"react\";\nimport { endGame, nextGame, refreshGame } from \"../reducers/gameReducer\";\nimport saveToLocalStorage, { store } from \"../store\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { startHistory } from \"./history\";\nimport { startRange } from \"./range\";\nimport { setCurrentlyResult } from \"../reducers/gameReducer\";\nexport const startGame = () => {\n  let input = document.querySelectorAll('input[type=checkbox]');\n  input.forEach(item => {\n    item.className = 'radioCustomButton';\n    item.checked = false;\n  });\n  document.querySelectorAll(\"label.radioCustomLabel1\").forEach(item => {\n    item.className = 'radioCustomLabel';\n  });\n};\nexport const refresh = () => {\n  let kind = store.getState().game.currentKind;\n  if (!kind) store.dispatch(refreshGame());\n};\nexport const next = (current, length) => {\n  var answer = checkAnswer();\n\n  if (current === length) {\n    setTimeout(() => end(answer, length), 500);\n  } else {\n    clear();\n    store.dispatch(nextGame(answer));\n  }\n\n  saveToLocalStorage('game', store.getState().game);\n};\n\nconst end = async (answer, length) => {\n  try {\n    const right = answer ? store.getState().game.rightAnswersCount + 1 : store.getState().game.rightAnswersCount;\n    const kind = store.getState().game.currentKind;\n    const email = store.getState().user.currentUser.email;\n    const result = Math.floor(right / length * 100);\n    let date = new Date();\n    date.setMonth(date.getMonth() + 1);\n    let month = date.getMonth() < 10 ? \"0\" + date.getMonth() : date.getMonth();\n    date = date.getDate() + \".\" + month + \".\" + date.getFullYear() + \" \" + date.getHours() + \":\" + date.getMinutes();\n    const response = await axios.post('http://localhost:5000/history/request', {\n      email,\n      result,\n      kind,\n      right,\n      length,\n      date\n    });\n    let current = currentResult(kind, response.data.id);\n    store.dispatch(endGame(answer, current));\n    await startHistory();\n    await startRange();\n    saveToLocalStorage('game', store.getState().game);\n    console.log(response.data);\n  } catch (e) {\n    console.log(e.response);\n  }\n};\n\nfunction currentResult(kind, id) {\n  const range = store.getState().app.range[kind];\n  let current = {\n    number: 0,\n    item: {}\n  };\n  range.forEach((item, number) => {\n    if (item._id === id) {\n      current.number = number + 1;\n      current.item = item;\n    }\n  });\n  return current;\n}\n\nexport const giveAnswers = () => {\n  var selectedCheckBoxes = document.querySelectorAll('input:checked');\n  return Array.from(selectedCheckBoxes).map(cb => cb.value);\n};\nexport const setAnswer = () => {\n  let flag = checkAnswer();\n  let answer = giveAnswers();\n  let number = store.getState().game.currentQuestionCount;\n  answer.map((item, index) => {\n    let checkbox = document.getElementById(item);\n    checkbox.classList.replace('radioCustomButton', flag ? 'radioCustomButton1' : 'radioCustomButton2');\n  });\n  if (!flag) setTimeout(() => selectRightAnswer(), 500);\n  document.querySelectorAll('input[type=checkbox]').forEach(item => {\n    item.disabled = true;\n  });\n  document.getElementById('next').style.display = 'block';\n  document.getElementById('check').style.display = 'none';\n};\n\nconst selectRightAnswer = () => {\n  let input = document.querySelectorAll('input[type=checkbox]'),\n      rightAnswer = store.getState().game.rightAnswer;\n  input.forEach(item => {\n    item.className = 'radioCustomButton';\n    item.checked = false;\n  });\n  rightAnswer.map(item => {\n    document.querySelector(\"label[for=\" + item + \"]\").className = 'radioCustomLabel1';\n  });\n};\n\nconst checkAnswer = () => {\n  let answer = giveAnswers();\n  let count = 0,\n      flag = false,\n      rightAnswer = store.getState().game.rightAnswer;\n  answer.forEach(item => {\n    if (rightAnswer.includes(item)) count++;\n  });\n\n  if (rightAnswer.length === count && answer.length === rightAnswer.length) {\n    flag = true;\n  }\n\n  return flag;\n};\n\nfunction clear() {\n  document.getElementById('next').style.display = 'none';\n  document.getElementById('check').style.display = 'block';\n  document.querySelectorAll('input[type=checkbox]').forEach(item => {\n    item.disabled = false;\n  });\n}","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/game.js"],"names":["React","endGame","nextGame","refreshGame","saveToLocalStorage","store","useSelector","axios","startHistory","startRange","setCurrentlyResult","startGame","input","document","querySelectorAll","forEach","item","className","checked","refresh","kind","getState","game","currentKind","dispatch","next","current","length","answer","checkAnswer","setTimeout","end","clear","right","rightAnswersCount","email","user","currentUser","result","Math","floor","date","Date","setMonth","getMonth","month","getDate","getFullYear","getHours","getMinutes","response","post","currentResult","data","id","console","log","e","range","app","number","_id","giveAnswers","selectedCheckBoxes","Array","from","map","cb","value","setAnswer","flag","currentQuestionCount","index","checkbox","getElementById","classList","replace","selectRightAnswer","disabled","style","display","rightAnswer","querySelector","count","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {endGame, nextGame, refreshGame} from \"../reducers/gameReducer\";\r\nimport saveToLocalStorage, {store} from \"../store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {startHistory} from \"./history\";\r\nimport {startRange} from \"./range\";\r\nimport {setCurrentlyResult} from \"../reducers/gameReducer\";\r\n\r\n\r\nexport const startGame = () =>{\r\n    let input = document.querySelectorAll('input[type=checkbox]');\r\n    input.forEach((item)=>{\r\n        item.className = 'radioCustomButton';\r\n        item.checked = false;\r\n    })\r\n    document.querySelectorAll(\"label.radioCustomLabel1\").forEach((item)=>{\r\n        item.className = 'radioCustomLabel';\r\n    });\r\n\r\n\r\n}\r\n\r\nexport const refresh = ()=>{\r\n    let kind = store.getState().game.currentKind;\r\n    if (!kind) store.dispatch(refreshGame());\r\n}\r\n\r\nexport const next = (current,length) =>{\r\n\r\n    var answer = checkAnswer();\r\n    if (current === length) {\r\n        setTimeout(() => end(answer,length),500 );\r\n\r\n    } else  {\r\n        clear();\r\n        store.dispatch(nextGame(answer));\r\n    }\r\n    saveToLocalStorage('game',store.getState().game);\r\n}\r\n\r\n\r\nconst end = async (answer,length) =>{\r\n        try {\r\n            const right = answer ? store.getState().game.rightAnswersCount+1 : store.getState().game.rightAnswersCount;\r\n            const kind = store.getState().game.currentKind;\r\n            const email = store.getState().user.currentUser.email;\r\n            const result = Math.floor(right/length *100);\r\n\r\n\r\n\r\n            let date = new Date();\r\n            date.setMonth(date.getMonth()+1);\r\n            let month = date.getMonth() <10 ? \"0\"+date.getMonth(): date.getMonth();\r\n            date = date.getDate() +\".\"+ month +\".\"+date.getFullYear() +\" \"+date.getHours()+\":\"+date.getMinutes();\r\n\r\n            const response = await axios.post('http://localhost:5000/history/request',{\r\n                email,\r\n                result,\r\n                kind,\r\n                right,\r\n                length,\r\n                date\r\n            });\r\n            let current = currentResult(kind,response.data.id)\r\n            store.dispatch(endGame(answer,current));\r\n            await startHistory();\r\n            await startRange();\r\n            saveToLocalStorage('game',store.getState().game);\r\n            console.log(response.data);\r\n        } catch (e) {\r\n\r\n            console.log(e.response)\r\n        }\r\n\r\n}\r\n\r\nfunction currentResult(kind,id) {\r\n    const range = store.getState().app.range[kind];\r\n    let current = {\r\n        number:0,\r\n        item:{}\r\n    }\r\n    range.forEach((item,number)=>{\r\n        if (item._id === id){\r\n            current.number = number+1;\r\n            current.item = item;\r\n        }\r\n    })\r\n\r\n    return current;\r\n}\r\n\r\n\r\nexport const giveAnswers = () =>{\r\n    var selectedCheckBoxes = document.querySelectorAll('input:checked');\r\n    return Array.from(selectedCheckBoxes).map(cb => cb.value);\r\n}\r\n\r\nexport const setAnswer = ()=>{\r\n    let flag = checkAnswer();\r\n    let answer = giveAnswers();\r\n    let number = store.getState().game.currentQuestionCount;\r\n\r\n    answer.map((item,index)=>{\r\n        let checkbox = document.getElementById(item);\r\n        checkbox.classList.replace('radioCustomButton',flag?'radioCustomButton1':'radioCustomButton2');\r\n    });\r\n    if (!flag) setTimeout(()=>selectRightAnswer(),500);\r\n\r\n    document.querySelectorAll('input[type=checkbox]').forEach((item)=>{\r\n        item.disabled = true;\r\n    })\r\n\r\n    document.getElementById('next').style.display = 'block';\r\n    document.getElementById('check').style.display = 'none';\r\n\r\n}\r\n\r\nconst selectRightAnswer = ()=>{\r\n    let input = document.querySelectorAll('input[type=checkbox]'),\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    input.forEach((item)=>{\r\n        item.className = 'radioCustomButton';\r\n        item.checked = false;\r\n    });\r\n    rightAnswer.map((item)=>{\r\n        document.querySelector(\"label[for=\"+item+\"]\").className = 'radioCustomLabel1';\r\n    });\r\n}\r\n\r\n\r\nconst checkAnswer = () =>{\r\n    let answer = giveAnswers();\r\n    let count = 0, flag = false,\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    answer.forEach((item)=>{\r\n        if(rightAnswer.includes(item))\r\n            count++;\r\n    });\r\n    if(rightAnswer.length === count && answer.length === rightAnswer.length){\r\n        flag = true;\r\n    }\r\n    return flag;\r\n}\r\n\r\nfunction clear(){\r\n    document.getElementById('next').style.display = 'none';\r\n    document.getElementById('check').style.display = 'block';\r\n    document.querySelectorAll('input[type=checkbox]').forEach((item)=>{\r\n        item.disabled = false;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}