{"ast":null,"code":"import React from \"react\";\nimport saveToLocalStorage, { loadFromLocalStorage, store } from \"../store\";\nimport axios from \"axios\";\nimport { refreshRange, setRange } from \"../reducers/appReducer\";\nexport const startRange = async () => {\n  try {\n    let historyArr = [],\n        biologyArr = [],\n        geographyArr = [],\n        mixedArr = []; // await delay(1000);\n\n    const response = await axios.post('http://localhost:5000/history/range', {\n      kind\n    });\n    store.dispatch(setRange(range, top(range)));\n    saveToLocalStorage('range', range);\n    saveToLocalStorage('top', top(range));\n  } catch (e) {\n    console.log(e.response);\n  }\n\n  history.forEach(item => {\n    switch (item.kind) {\n      case 'history':\n        historyArr.push(item);\n        break;\n\n      case 'biology':\n        biologyArr.push(item);\n        break;\n\n      case 'geography':\n        geographyArr.push(item);\n        break;\n\n      case 'mixed':\n        mixedArr.push(item);\n        break;\n\n      default:\n        break;\n    }\n  });\n  let range = {\n    history: sort(historyArr),\n    biology: sort(biologyArr),\n    geography: sort(geographyArr),\n    mixed: sort(mixedArr)\n  };\n  console.log(range);\n};\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    return b.result - a.result;\n  });\n}\n\nfunction top(range) {\n  const userId = store.getState().user.currentUser.id;\n  let top = {\n    history: 0,\n    biology: 0,\n    geography: 0,\n    mixed: 0\n  };\n  Object.keys(top).map(item => {\n    writeTop(item);\n  });\n\n  function writeTop(kind) {\n    range[kind].every((item, number) => {\n      if (item.userId === userId) {\n        top[kind] = number + 1;\n        return false;\n      }\n    });\n  }\n\n  return top;\n}\n\nexport const actionRefreshRange = () => {\n  const range = store.getState().app.range;\n  const localRange = loadFromLocalStorage('range');\n  if (Object.keys(range).length === 0 && Object.keys(localRange).length !== 0) store.dispatch(refreshRange());\n};","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/range.js"],"names":["React","saveToLocalStorage","loadFromLocalStorage","store","axios","refreshRange","setRange","startRange","historyArr","biologyArr","geographyArr","mixedArr","response","post","kind","dispatch","range","top","e","console","log","history","forEach","item","push","sort","biology","geography","mixed","arr","a","b","result","userId","getState","user","currentUser","id","Object","keys","map","writeTop","every","number","actionRefreshRange","app","localRange","length"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IAA4BC,oBAA5B,EAAkDC,KAAlD,QAA8D,UAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,EAAsBC,QAAtB,QAAqC,wBAArC;AAIA,OAAO,MAAOC,UAAU,GAAG,YAAW;AAClC,MAAI;AACA,QAAIC,UAAU,GAAG,EAAjB;AAAA,QAAoBC,UAAU,GAAC,EAA/B;AAAA,QAAkCC,YAAY,GAAC,EAA/C;AAAA,QAAkDC,QAAQ,GAAG,EAA7D,CADA,CAEA;;AACA,UAAMC,QAAQ,GAAI,MAAMR,KAAK,CAACS,IAAN,CAAW,qCAAX,EAAiD;AACrEC,MAAAA;AADqE,KAAjD,CAAxB;AAGAX,IAAAA,KAAK,CAACY,QAAN,CAAeT,QAAQ,CAACU,KAAD,EAAOC,GAAG,CAACD,KAAD,CAAV,CAAvB;AACAf,IAAAA,kBAAkB,CAAC,OAAD,EAASe,KAAT,CAAlB;AACAf,IAAAA,kBAAkB,CAAC,KAAD,EAAOgB,GAAG,CAACD,KAAD,CAAV,CAAlB;AAEH,GAVD,CAUE,OAAOE,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACN,QAAd;AACH;;AACDS,EAAAA,OAAO,CAACC,OAAR,CAAiBC,IAAD,IAAQ;AACpB,YAAQA,IAAI,CAACT,IAAb;AACI,WAAK,SAAL;AACIN,QAAAA,UAAU,CAACgB,IAAX,CAAgBD,IAAhB;AACA;;AACJ,WAAK,SAAL;AACId,QAAAA,UAAU,CAACe,IAAX,CAAgBD,IAAhB;AACA;;AACJ,WAAK,WAAL;AACIb,QAAAA,YAAY,CAACc,IAAb,CAAkBD,IAAlB;AACA;;AACJ,WAAK,OAAL;AACIZ,QAAAA,QAAQ,CAACa,IAAT,CAAcD,IAAd;AACA;;AACJ;AACI;AAdR;AAiBH,GAlBD;AAoBA,MAAIP,KAAK,GAAG;AACRK,IAAAA,OAAO,EAAEI,IAAI,CAACjB,UAAD,CADL;AAERkB,IAAAA,OAAO,EAAED,IAAI,CAAChB,UAAD,CAFL;AAGRkB,IAAAA,SAAS,EAACF,IAAI,CAACf,YAAD,CAHN;AAIRkB,IAAAA,KAAK,EAACH,IAAI,CAACd,QAAD;AAJF,GAAZ;AAOAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAKH,CA9CM;;AAgDP,SAASS,IAAT,CAAcI,GAAd,EAAmB;AACf,SAAOA,GAAG,CAACJ,IAAJ,CAAS,CAACK,CAAD,EAAGC,CAAH,KAAO;AACnB,WAAOA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAApB;AACH,GAFM,CAAP;AAGH;;AAED,SAASf,GAAT,CAAaD,KAAb,EAAoB;AAChB,QAAMiB,MAAM,GAAG9B,KAAK,CAAC+B,QAAN,GAAiBC,IAAjB,CAAsBC,WAAtB,CAAkCC,EAAjD;AAEA,MAAIpB,GAAG,GAAI;AACPI,IAAAA,OAAO,EAAC,CADD;AAEPK,IAAAA,OAAO,EAAE,CAFF;AAGPC,IAAAA,SAAS,EAAE,CAHJ;AAIPC,IAAAA,KAAK,EAAE;AAJA,GAAX;AAOAU,EAAAA,MAAM,CAACC,IAAP,CAAYtB,GAAZ,EAAiBuB,GAAjB,CAAsBjB,IAAD,IAAQ;AACzBkB,IAAAA,QAAQ,CAAClB,IAAD,CAAR;AACH,GAFD;;AAIA,WAASkB,QAAT,CAAkB3B,IAAlB,EAAuB;AACnBE,IAAAA,KAAK,CAACF,IAAD,CAAL,CAAY4B,KAAZ,CAAkB,CAACnB,IAAD,EAAMoB,MAAN,KAAe;AAC7B,UAAIpB,IAAI,CAACU,MAAL,KAAgBA,MAApB,EAA2B;AACvBhB,QAAAA,GAAG,CAACH,IAAD,CAAH,GAAY6B,MAAM,GAAC,CAAnB;AACA,eAAO,KAAP;AACH;AACJ,KALD;AAMH;;AAED,SAAO1B,GAAP;AAGH;;AAED,OAAO,MAAM2B,kBAAkB,GAAG,MAAI;AAClC,QAAM5B,KAAK,GAAGb,KAAK,CAAC+B,QAAN,GAAiBW,GAAjB,CAAqB7B,KAAnC;AACA,QAAM8B,UAAU,GAAG5C,oBAAoB,CAAC,OAAD,CAAvC;AACA,MAAIoC,MAAM,CAACC,IAAP,CAAYvB,KAAZ,EAAmB+B,MAAnB,KAA8B,CAA9B,IAAmCT,MAAM,CAACC,IAAP,CAAYO,UAAZ,EAAwBC,MAAxB,KAAmC,CAA1E,EAA6E5C,KAAK,CAACY,QAAN,CAAeV,YAAY,EAA3B;AAChF,CAJM","sourcesContent":["import React from \"react\";\r\nimport saveToLocalStorage, {loadFromLocalStorage, store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {refreshRange, setRange} from \"../reducers/appReducer\";\r\n\r\n\r\n\r\nexport const  startRange = async () =>{\r\n    try {\r\n        let historyArr = [],biologyArr=[],geographyArr=[],mixedArr = [];\r\n        // await delay(1000);\r\n        const response =  await axios.post('http://localhost:5000/history/range',{\r\n            kind\r\n        });\r\n        store.dispatch(setRange(range,top(range)));\r\n        saveToLocalStorage('range',range);\r\n        saveToLocalStorage('top',top(range));\r\n\r\n    } catch (e) {\r\n        console.log(e.response);\r\n    }\r\n    history.forEach((item)=>{\r\n        switch (item.kind) {\r\n            case 'history':\r\n                historyArr.push(item)\r\n                break;\r\n            case 'biology':\r\n                biologyArr.push(item)\r\n                break;\r\n            case 'geography':\r\n                geographyArr.push(item)\r\n                break;\r\n            case 'mixed':\r\n                mixedArr.push(item)\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n    });\r\n\r\n    let range = {\r\n        history: sort(historyArr),\r\n        biology: sort(biologyArr),\r\n        geography:sort(geographyArr),\r\n        mixed:sort(mixedArr)\r\n    }\r\n\r\n    console.log(range);\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a,b)=>{\r\n        return b.result - a.result;\r\n    })\r\n}\r\n\r\nfunction top(range) {\r\n    const userId = store.getState().user.currentUser.id;\r\n\r\n    let top =  {\r\n        history:0,\r\n        biology: 0,\r\n        geography: 0,\r\n        mixed: 0\r\n    }\r\n\r\n    Object.keys(top).map((item)=>{\r\n        writeTop(item);\r\n    })\r\n\r\n    function writeTop(kind){\r\n        range[kind].every((item,number)=>{\r\n            if (item.userId === userId){\r\n                top[kind] = number+1\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n\r\n    return top;\r\n\r\n\r\n}\r\n\r\nexport const actionRefreshRange = ()=>{\r\n    const range = store.getState().app.range;\r\n    const localRange = loadFromLocalStorage('range');\r\n    if (Object.keys(range).length === 0 && Object.keys(localRange).length !== 0) store.dispatch(refreshRange());\r\n}\r\n"]},"metadata":{},"sourceType":"module"}