{"ast":null,"code":"import React from \"react\";\nimport { endGame, nextGame } from \"../reducers/gameReducer\";\nimport { store } from \"../reducers\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nexport const start = () => {\n  let input = document.querySelectorAll('input[type=checkbox]');\n  input.forEach(item => {\n    item.className = 'radioCustomButton';\n    item.checked = false;\n  });\n  document.querySelectorAll(\"label.radioCustomLabel1\").forEach(item => {\n    item.className = 'radioCustomLabel';\n  });\n};\nexport const next = (current, length) => {\n  var answer = checkAnswer();\n\n  if (current === length) {\n    setTimeout(() => end(answer, length), 500);\n  } else {\n    setTimeout(() => store.dispatch(nextGame(answer)), 500);\n  }\n};\n\nconst end = async (answer, length) => {\n  try {\n    const right = answer ? store.getState().game.rightAnswersCount + 1 : store.getState().game.rightAnswersCount;\n    const kind = store.getState().game.currentKind;\n    const email = store.getState().user.currentUser.email;\n    let date = new Date();\n    let month = date.getUTCMonth() < 10 ? \"0\" + date.getUTCMonth() : date.getUTCMonth();\n    date = date.getDate() + \".\" + month + \".\" + date.getFullYear() + \" \" + date.getHours() + \":\" + date.getMinutes();\n    console.log(date); // const response = await axios.post('http://localhost:5000/history/request',{\n    //     email,\n    //     kind,\n    //     right,\n    //     length,\n    //     date\n    // });\n    // console.log(response.data);\n\n    store.dispatch(endGame(answer));\n  } catch (e) {\n    console.log(e.response);\n  }\n};\n\nconst giveAnswers = () => {\n  var selectedCheckBoxes = document.querySelectorAll('input:checked');\n  return Array.from(selectedCheckBoxes).map(cb => cb.value);\n};\n\nexport const setAnswer = () => {\n  let flag = checkAnswer();\n  let answer = giveAnswers();\n  let number = store.getState().game.currentQuestionCount;\n  document.getElementById('next').style.display = 'block';\n  document.getElementById('check').style.display = 'none';\n  answer.map((item, index) => {\n    let input = document.getElementById(item);\n    input.className = flag ? \"radioCustomButton1\" : \"radioCustomButton2\";\n  });\n  if (!flag) setTimeout(() => selectRightAnswer(), 500);\n  document.querySelectorAll('input[type=checkbox]').forEach(item => {\n    item.disabled = true;\n  });\n};\n\nconst selectRightAnswer = () => {\n  let input = document.querySelectorAll('input[type=checkbox]'),\n      rightAnswer = store.getState().game.rightAnswer;\n  input.forEach(item => {\n    item.className = 'radioCustomButton';\n    item.checked = false;\n  });\n  rightAnswer.map(item => {\n    document.querySelector(\"label[for=\" + item + \"]\").className = 'radioCustomLabel1';\n  });\n};\n\nconst checkAnswer = () => {\n  let answer = giveAnswers();\n  let count = 0,\n      flag = false,\n      rightAnswer = store.getState().game.rightAnswer;\n  answer.forEach(item => {\n    if (rightAnswer.includes(item)) count++;\n  });\n\n  if (rightAnswer.length === count && answer.length === rightAnswer.length) {\n    flag = true;\n  }\n\n  return flag;\n};","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/game.js"],"names":["React","endGame","nextGame","store","useSelector","axios","start","input","document","querySelectorAll","forEach","item","className","checked","next","current","length","answer","checkAnswer","setTimeout","end","dispatch","right","getState","game","rightAnswersCount","kind","currentKind","email","user","currentUser","date","Date","month","getUTCMonth","getDate","getFullYear","getHours","getMinutes","console","log","e","response","giveAnswers","selectedCheckBoxes","Array","from","map","cb","value","setAnswer","flag","number","currentQuestionCount","getElementById","style","display","index","selectRightAnswer","disabled","rightAnswer","querySelector","count","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {endGame, nextGame} from \"../reducers/gameReducer\";\r\nimport {store} from \"../reducers\";\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const start = () =>{\r\n    let input = document.querySelectorAll('input[type=checkbox]');\r\n    input.forEach((item)=>{\r\n        item.className = 'radioCustomButton';\r\n        item.checked = false;\r\n    })\r\n    document.querySelectorAll(\"label.radioCustomLabel1\").forEach((item)=>{\r\n        item.className = 'radioCustomLabel';\r\n    });\r\n}\r\n\r\nexport const next = (current,length) =>{\r\n\r\n    var answer = checkAnswer();\r\n    if (current === length) {\r\n        setTimeout(() => end(answer,length), 500);\r\n\r\n    } else  {\r\n        setTimeout(() => store.dispatch(nextGame(answer)), 500);\r\n    }\r\n}\r\n\r\n\r\nconst end = async (answer,length) =>{\r\n    try {\r\n        const right = answer ? store.getState().game.rightAnswersCount+1 : store.getState().game.rightAnswersCount;\r\n        const kind = store.getState().game.currentKind;\r\n        const email = store.getState().user.currentUser.email;\r\n        let date = new Date();\r\n        let month = date.getUTCMonth() <10 ? \"0\"+date.getUTCMonth(): date.getUTCMonth();\r\n        date = date.getDate() +\".\"+ month +\".\"+date.getFullYear() +\" \"+date.getHours()+\":\"+date.getMinutes();\r\n        console.log(date);\r\n        // const response = await axios.post('http://localhost:5000/history/request',{\r\n        //     email,\r\n        //     kind,\r\n        //     right,\r\n        //     length,\r\n        //     date\r\n        // });\r\n        // console.log(response.data);\r\n\r\n        store.dispatch(endGame(answer));\r\n    } catch (e) {\r\n        console.log(e.response)\r\n    }\r\n\r\n}\r\n\r\nconst giveAnswers = () =>{\r\n    var selectedCheckBoxes = document.querySelectorAll('input:checked');\r\n    return Array.from(selectedCheckBoxes).map(cb => cb.value);\r\n}\r\n\r\nexport const setAnswer = ()=>{\r\n    let flag = checkAnswer();\r\n    let answer = giveAnswers();\r\n    let number = store.getState().game.currentQuestionCount;\r\n    document.getElementById('next').style.display = 'block';\r\n    document.getElementById('check').style.display = 'none';\r\n    answer.map((item,index)=>{\r\n        let input = document.getElementById(item);\r\n        input.className = flag ? \"radioCustomButton1\" : \"radioCustomButton2\";\r\n    });\r\n    if (!flag) setTimeout(()=>selectRightAnswer(),500);\r\n    document.querySelectorAll('input[type=checkbox]').forEach((item)=>{\r\n        item.disabled = true;\r\n    })\r\n}\r\n\r\nconst selectRightAnswer = ()=>{\r\n    let input = document.querySelectorAll('input[type=checkbox]'),\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    input.forEach((item)=>{\r\n        item.className = 'radioCustomButton';\r\n        item.checked = false;\r\n    });\r\n    rightAnswer.map((item)=>{\r\n        document.querySelector(\"label[for=\"+item+\"]\").className = 'radioCustomLabel1';\r\n    });\r\n}\r\n\r\n\r\nconst checkAnswer = () =>{\r\n    let answer = giveAnswers();\r\n    let count = 0, flag = false,\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    answer.forEach((item)=>{\r\n        if(rightAnswer.includes(item))\r\n            count++;\r\n    });\r\n    if(rightAnswer.length === count && answer.length === rightAnswer.length){\r\n        flag = true;\r\n    }\r\n    return flag;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}