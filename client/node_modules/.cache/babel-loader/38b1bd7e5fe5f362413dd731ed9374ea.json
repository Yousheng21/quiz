{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\game\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Transition, CSSTransition, SwitchTransition, TransitionGroup } from \"react-transition-group\";\nimport { next, setAnswer, start } from \"../../actions/game\";\nimport Answers from \"./Answers\";\nimport Result from \"./Result\";\nimport \"../../assets/css/game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const dispatch = useDispatch(); // dispatch(startGame());\n\n  start();\n  const [loaderVisible, setLoaderVisible] = useState(false);\n  const number = useSelector(state => state.game.currentQuestionCount);\n  let options = useSelector(state => state.game.currentOptions);\n  const flag = useSelector(state => state.game.endGame);\n  const length = useSelector(state => state.game.questionsLength);\n  const rightAnswers = useSelector(state => state.game.rightAnswersCount);\n  let answers = shuffleArray(options.answers);\n  setTimeout(() => setLoaderVisible(true));\n\n  function clear() {\n    document.getElementById('next').style.display = 'none';\n    document.getElementById('check').style.display = 'block';\n    document.querySelectorAll('input[type=checkbox]').forEach(item => {\n      item.disabled = false;\n    });\n  }\n\n  function shuffleArray(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // Пока остаются элементы, чтобы перемешать …\n\n    while (0 !== currentIndex) {\n      // Выберите оставшийся элемент …\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // И поменяйте местами с текущим элементом.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !flag ? /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: loaderVisible,\n      timeout: 500,\n      classNames: \"answers\" // mountOnEnter\n      // unmountOnExit\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [number + 1, \" Question of \", length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: options.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"answerOptions\",\n          children: answers.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Answers, {\n              type: item.type,\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 48\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: 'check',\n            onClick: () => setAnswer(),\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            style: {\n              display: 'none'\n            },\n            id: 'next',\n            onClick: () => {\n              next(number + 1, length);\n              setLoaderVisible(!loaderVisible);\n              clear();\n            },\n            children: length - number === 1 ? \"Finish\" : \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this)]\n      }, number, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this)\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Result, {\n      number: number,\n      answers: rightAnswers,\n      length: length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"Iu4STpGpStMdH1bzg54/mH03ozE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/game/Game.jsx"],"names":["React","useState","useDispatch","useSelector","Transition","CSSTransition","SwitchTransition","TransitionGroup","next","setAnswer","start","Answers","Result","Game","dispatch","loaderVisible","setLoaderVisible","number","state","game","currentQuestionCount","options","currentOptions","flag","endGame","length","questionsLength","rightAnswers","rightAnswersCount","answers","shuffleArray","setTimeout","clear","document","getElementById","style","display","querySelectorAll","forEach","item","disabled","array","currentIndex","temporaryValue","randomIndex","Math","floor","random","question","map","index","type","content","flexDirection"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Transition, CSSTransition, SwitchTransition, TransitionGroup} from \"react-transition-group\";\r\nimport {next, setAnswer, start} from \"../../actions/game\";\r\n\r\nimport Answers from \"./Answers\";\r\nimport Result from \"./Result\";\r\nimport \"../../assets/css/game.css\";\r\n\r\n\r\n\r\nconst Game = () => {\r\n    const dispatch = useDispatch();\r\n    // dispatch(startGame());\r\n    start();\r\n    const [loaderVisible,setLoaderVisible] = useState(false);\r\n    const number = useSelector(state=>state.game.currentQuestionCount);\r\n    let options = useSelector(state=>state.game.currentOptions);\r\n    const flag = useSelector(state=>state.game.endGame);\r\n    const length = useSelector(state=>state.game.questionsLength);\r\n    const rightAnswers = useSelector(state=>state.game.rightAnswersCount);\r\n    let answers = shuffleArray(options.answers);\r\n    setTimeout(()=>setLoaderVisible(true),);\r\n    function clear(){\r\n        document.getElementById('next').style.display = 'none';\r\n        document.getElementById('check').style.display = 'block';\r\n        document.querySelectorAll('input[type=checkbox]').forEach((item)=>{\r\n            item.disabled = false;\r\n        });\r\n    }\r\n\r\n    function shuffleArray(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n        // Пока остаются элементы, чтобы перемешать …\r\n        while (0 !== currentIndex) {\r\n            // Выберите оставшийся элемент …\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            // И поменяйте местами с текущим элементом.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n        return array;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                !flag ?\r\n                    <CSSTransition\r\n                        key={number}\r\n                        in={loaderVisible}\r\n                        timeout={500}\r\n                        classNames={\"answers\"}\r\n                        // mountOnEnter\r\n                        // unmountOnExit\r\n                    >\r\n                            <div className=\"answers\" key={number}>\r\n                                <h3>{number+1} Question of {length}</h3>\r\n                                <h2>{options.question}</h2>\r\n                                <ul className=\"answerOptions\">\r\n                                    {/*Для каждого варианта ответа вызываем функцию*/}\r\n                                    {answers.map((item, index) => {\r\n                                        return <Answers type={item.type} content={item.content} />\r\n                                    })}\r\n                                </ul>\r\n                                <div style={{display:'flex',flexDirection:'row'}}>\r\n                                    <button type={\"button\"} id={'check'} onClick={()=>setAnswer()}>Check</button>\r\n                                    <button type={\"button\"} style={{display:'none'}} id={'next'} onClick={()=>{\r\n                                        next(number + 1,length);\r\n                                        setLoaderVisible(!loaderVisible);\r\n                                        clear();\r\n                                    }}>{length-number===1?\"Finish\":\"Next\"}</button>\r\n                                </div>\r\n                            </div>\r\n                    </CSSTransition>\r\n                :\r\n                    <Result number={number} answers={rightAnswers} length={length}/>\r\n\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}