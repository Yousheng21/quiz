{"ast":null,"code":"import React from \"react\";\nimport saveToLocalStorage, { store } from \"../store\";\nimport axios from \"axios\";\nimport { refreshHistory, setHistory } from \"../reducers/appReducer\";\nexport const startHistory = async () => {\n  try {\n    function counterQuizzes(history) {\n      const userId = store.getState().user.currentUser.id;\n      let amount = {\n        history: {\n          value: 0,\n          avg: 0\n        },\n        biology: {\n          value: 0,\n          avg: 0\n        },\n        geography: {\n          value: 0,\n          avg: 0\n        },\n        mixed: {\n          value: 0,\n          avg: 0\n        }\n      };\n      history.forEach(item => {\n        if (item.userId === userId) {\n          switch (item.kind) {\n            case 'history':\n              {\n                amount.history.value++;\n                amount.history.avg += item.result;\n                break;\n              }\n\n            case 'biology':\n              {\n                amount.biology++;\n                amount.biology.avg += item.result;\n                break;\n              }\n\n            case 'geography':\n              {\n                amount.geography++;\n                amount.geography.avg += item.result;\n                break;\n              }\n\n            case 'mixed':\n              {\n                amount.mixed++;\n                amount.mixed.avg += item.result;\n                break;\n              }\n          }\n        }\n      }); // Object.keys(amount).map((item)=>{\n      //     amount[item].avg /= amount[item].value\n      // })\n\n      return amount;\n    }\n\n    const id = store.getState().user.currentUser.id;\n    const response = await axios.post('http://localhost:5000/history/response', {\n      id\n    });\n    let a = counterQuizzes(response.data.response);\n    store.dispatch(setHistory(response.data.response, a));\n    saveToLocalStorage('history', response.data.response);\n    saveToLocalStorage('amount', () => counterQuizzes(response.data.response)); // console.log(response.data.response)\n  } catch (e) {\n    console.log(e.response);\n  }\n};\nexport const actionRefreshHistory = () => {\n  let history = store.getState().app.history;\n  if (history.length === 0) store.dispatch(refreshHistory());\n};","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/history.js"],"names":["React","saveToLocalStorage","store","axios","refreshHistory","setHistory","startHistory","counterQuizzes","history","userId","getState","user","currentUser","id","amount","value","avg","biology","geography","mixed","forEach","item","kind","result","response","post","a","data","dispatch","e","console","log","actionRefreshHistory","app","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport saveToLocalStorage, {store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {refreshHistory, setHistory} from \"../reducers/appReducer\";\r\n\r\n\r\nexport const  startHistory = async () =>{\r\n        try {\r\n\r\n            function counterQuizzes(history){\r\n                const userId = store.getState().user.currentUser.id;\r\n                let amount = {\r\n                    history:{\r\n                        value:0,\r\n                        avg:0\r\n                    },\r\n                    biology: {\r\n                        value:0,\r\n                        avg:0\r\n                    },\r\n                    geography: {\r\n                        value:0,\r\n                        avg:0\r\n                    },\r\n                    mixed:{\r\n                        value:0,\r\n                        avg:0\r\n                    }\r\n                };\r\n\r\n                history.forEach((item)=>{\r\n                    if (item.userId===userId){\r\n                        switch (item.kind) {\r\n                            case 'history':{\r\n                                amount.history.value++;\r\n                                amount.history.avg += item.result;\r\n                                break;\r\n                            }\r\n                            case 'biology':{\r\n                                amount.biology++;\r\n                                amount.biology.avg += item.result;\r\n                                break;\r\n                            }\r\n                            case 'geography':{\r\n                                amount.geography++;\r\n                                amount.geography.avg += item.result;\r\n                                break;\r\n                            }\r\n                            case 'mixed':{\r\n                                amount.mixed++;\r\n                                amount.mixed.avg += item.result;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                // Object.keys(amount).map((item)=>{\r\n                //     amount[item].avg /= amount[item].value\r\n                // })\r\n                return amount;\r\n\r\n            }\r\n\r\n            const id = store.getState().user.currentUser.id;\r\n            const response = await axios.post('http://localhost:5000/history/response',{\r\n                id\r\n            });\r\n            let a = counterQuizzes(response.data.response);\r\n\r\n            store.dispatch(setHistory(response.data.response,a));\r\n            saveToLocalStorage('history',response.data.response);\r\n            saveToLocalStorage('amount',()=>counterQuizzes(response.data.response));\r\n            // console.log(response.data.response)\r\n\r\n\r\n\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e.response);\r\n        }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const actionRefreshHistory = ()=>{\r\n    let history = store.getState().app.history;\r\n    if (history.length === 0) store.dispatch(refreshHistory());\r\n}"]},"metadata":{},"sourceType":"module"}