{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\game\\\\SelectGame.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, NavLink, Route } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../reducers/userReducer\";\nimport { setKind } from \"../../reducers/gameReducer\";\nimport { CSSTransition } from \"react-transition-group\";\nimport saveToLocalStorage, { store } from \"../../store\";\nimport './game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectGame = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const routes = ['history', 'biology', 'geography', 'mixed']; // const kind = useSelector(state=>state.game.currentKind)\n  // console.log(kind);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kinds\",\n    children: [routes.map(item => /*#__PURE__*/_jsxDEV(NavLink, {\n      to: '/game/preview/' + item,\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)), routes.map(item => /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: '/game/preview/' + item,\n      children: match => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: match != null,\n        timeout: 100,\n        classNames: \"page\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'page',\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u042D\\u0442\\u0430 \\u0438\\u0433\\u0440\\u0430 \\u0436\\u0430\\u043D\\u0440\\u0430 \\\"\", item, \"\\\", \\u043A\\u043E\\u0442\\u043E\\u0440\\u0430\\u044F \\u0432\\u043A\\u043B\\u044E\\u0447\\u0430\\u0435\\u0442 20 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432. \\u041D\\u0430\\u0436\\u0430\\u0432 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0443 \\\"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0430\\u0442\\u044C\\\" \\u0432\\u044B \\u043D\\u0435 \\u0441\\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0432\\u044B\\u0439\\u0442\\u0438 \\u043E\\u0431\\u0440\\u0430\\u0442\\u043D\\u043E\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: '/game/' + item,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                dispatch(setKind(item));\n                saveToLocalStorage('game', store.getState().game);\n              },\n              children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectGame, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SelectGame;\nexport default SelectGame; // const mapStateToProps = (state, ownProps) => ({\n//     name:  ownProps.params.name\n// })\n//\n// export default connect(mapStateToProps)(SelectGame);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectGame\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/game/SelectGame.jsx"],"names":["React","BrowserRouter","Router","NavLink","Route","connect","useDispatch","useSelector","logout","setKind","CSSTransition","saveToLocalStorage","store","SelectGame","props","dispatch","routes","map","item","match","getState","game"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,OAAjC,EAA0CC,KAA1C,QAAsD,kBAAtD;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,WAA9B,QAAgD,aAAhD;AACA,SAAQC,MAAR,QAAqB,4BAArB;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,kBAAP,IAA4BC,KAA5B,QAAwC,aAAxC;AACA,OAAO,YAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAG,CAAC,SAAD,EAAW,SAAX,EAAqB,WAArB,EAAiC,OAAjC,CAAf,CAF0B,CAG1B;AACA;;AACA,sBAEI;AAAK,IAAA,SAAS,EAAE,OAAhB;AAAA,eACKA,MAAM,CAACC,GAAP,CAAYC,IAAD,iBACR,QAAC,OAAD;AAAoB,MAAA,EAAE,EAAE,mBAAiBA,IAAzC;AAAA,gBACKA;AADL,OAAcA,IAAd;AAAA;AAAA;AAAA;AAAA,YADH,CADL,EAMKF,MAAM,CAACC,GAAP,CAAYC,IAAD,iBACR,QAAC,KAAD;AAAkB,MAAA,KAAK,MAAvB;AAAwB,MAAA,IAAI,EAAE,mBAAiBA,IAA/C;AAAA,gBACOC,KAAF,iBACG,QAAC,aAAD;AACI,QAAA,EAAE,EAAEA,KAAK,IAAI,IADjB;AAEI,QAAA,OAAO,EAAE,GAFb;AAGI,QAAA,UAAU,EAAC,MAHf;AAII,QAAA,aAAa,MAJjB;AAAA,+BAMI;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA,kCACI;AAAA,wGAAoBD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAE,WAASA,IAAtB;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAE,MAAI;AACjBH,gBAAAA,QAAQ,CAACN,OAAO,CAACS,IAAD,CAAR,CAAR;AACAP,gBAAAA,kBAAkB,CAAC,MAAD,EAAQC,KAAK,CAACQ,QAAN,GAAiBC,IAAzB,CAAlB;AACH,eAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AAFR,OAAYH,IAAZ;AAAA;AAAA;AAAA;AAAA,YADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6DH,CAlED;;GAAML,U;UACeP,W;;;KADfO,U;AAoEN,eAAeA,UAAf,C,CACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router, NavLink, Route} from \"react-router-dom\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../reducers/userReducer\";\r\nimport {setKind} from \"../../reducers/gameReducer\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport saveToLocalStorage, {store} from \"../../store\";\r\nimport './game.css'\r\n\r\nconst SelectGame = (props) => {\r\n    const dispatch = useDispatch();\r\n    const routes = ['history','biology','geography','mixed'];\r\n    // const kind = useSelector(state=>state.game.currentKind)\r\n    // console.log(kind);\r\n    return (\r\n\r\n        <div className={\"kinds\"}>\r\n            {routes.map((item) =>  (\r\n                <NavLink key={item} to={'/game/preview/'+item}>\r\n                    {item}\r\n                </NavLink>\r\n            ))}\r\n            {routes.map((item)=>(\r\n                <Route key={item} exact path={'/game/preview/'+item}>\r\n                    {( match ) => (\r\n                        <CSSTransition\r\n                            in={match != null}\r\n                            timeout={100}\r\n                            classNames=\"page\"\r\n                            unmountOnExit\r\n                        >\r\n                            <div className={'page'}>\r\n                                <p>Эта игра жанра \"{item}\", которая включает 20 вопросов. Нажав кнопку \"Начать играть\" вы не сможете выйти обратно</p>\r\n                                <NavLink to={'/game/'+item}>\r\n                                    <button onClick={()=>{\r\n                                        dispatch(setKind(item));\r\n                                        saveToLocalStorage('game',store.getState().game);\r\n                                    }}>\r\n                                        Начать игру\r\n                                    </button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </CSSTransition>\r\n                    )}\r\n                </Route>\r\n            ))}\r\n\r\n\r\n\r\n\r\n            {/*<NavLink to={'/game/geography'}>*/}\r\n            {/*    <button onClick={()=>{ dispatch(setKind(\"geography\"));*/}\r\n            {/*     saveToLocalStorage('game',store.getState().game);*/}\r\n            {/*    }}>geography</button>*/}\r\n            {/*</NavLink>*/}\r\n            {/*<NavLink*/}\r\n            {/*    to={'/game/history'}>*/}\r\n            {/*    <button onClick={()=> {*/}\r\n            {/*        dispatch(setKind(\"history\"));*/}\r\n            {/*        saveToLocalStorage('game',store.getState().game);*/}\r\n            {/*    }}>history</button>*/}\r\n            {/*</NavLink>*/}\r\n            {/*<NavLink exact to={'/game/biology'}>*/}\r\n            {/*    <button onClick={()=> {*/}\r\n            {/*        dispatch(setKind(\"biology\"));*/}\r\n            {/*        saveToLocalStorage('game',store.getState().game);*/}\r\n            {/*    }}>biology</button>*/}\r\n            {/*</NavLink>*/}\r\n            {/*<NavLink to={'/game/mixed'}>*/}\r\n            {/*    <button onClick={()=>{ dispatch(setKind(\"mixed\"));*/}\r\n            {/*     saveToLocalStorage('game',store.getState().game);*/}\r\n            {/*    }}>Mixed</button>*/}\r\n            {/*</NavLink>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectGame;\r\n// const mapStateToProps = (state, ownProps) => ({\r\n//     name:  ownProps.params.name\r\n// })\r\n//\r\n// export default connect(mapStateToProps)(SelectGame);"]},"metadata":{},"sourceType":"module"}