{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\registration\\\\Login.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./registration.css\";\nimport Input from \"../../utils/input/input\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useValidation = (value, validations) => {\n  _s();\n\n  const [isEmpty, setEmpty] = useState({\n    value: true,\n    text: ''\n  });\n  const [minLengthError, setMinLengthError] = useState({\n    value: false,\n    text: ''\n  });\n  const [maxLengthError, setMaxLengthError] = useState({\n    value: false,\n    text: ''\n  });\n  const [emailError, setEmailError] = useState({\n    value: false,\n    text: ''\n  });\n  const [inputValid, setInputValid] = useState({\n    value: false,\n    text: ''\n  });\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'minLength':\n          value.length < validations[validation].value ? setMinLengthError({\n            value: true,\n            text: validations[validation].text\n          }) : setMinLengthError({\n            value: false,\n            text: ''\n          });\n          break;\n\n        case 'isEmpty':\n          value ? setEmpty({\n            value: false,\n            text: ''\n          }) : setEmpty({\n            value: true,\n            text: validations[validation].text\n          });\n          break;\n\n        case 'maxLength':\n          value.length > validations[validation].value ? setMaxLengthError({\n            value: true,\n            text: validations[validation].text\n          }) : setMaxLengthError({\n            value: false,\n            text: ''\n          });\n          break;\n\n        case 'isEmail':\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase()) ? setEmailError({\n            value: false,\n            text: ''\n          }) : setEmailError({\n            value: true,\n            text: validations[validation].text\n          });\n          break;\n      }\n    }\n  }, [value]);\n  useEffect(() => {\n    if (isEmpty.value || maxLengthError.value || minLengthError.value || emailError.value) {\n      setInputValid({\n        value: false,\n        text: 'Form is invalid'\n      });\n    } else {\n      setInputValid({\n        value: true,\n        text: ''\n      });\n    }\n  }, [isEmpty.value, maxLengthError.value, minLengthError.value, emailError.value]);\n  return {\n    isEmpty,\n    minLengthError,\n    emailError,\n    maxLengthError,\n    inputValid\n  };\n};\n\n_s(useValidation, \"O6cehxtiaKjvSqqrZhA7vCGqHUs=\");\n\nconst useInput = (initialState, validations) => {\n  _s2();\n\n  const [value, setValue] = useState(initialState);\n  const [isDirty, setDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = e => {\n    setDirty(true);\n  };\n\n  const printError = validators => {\n    let flag = false;\n\n    for (let i = 0; i < validators.length; i++) {\n      for (let j = 0; j <= i; j++) {\n        if (j < i) {\n          flag = !valid[validators[j]].value;\n        } else {\n          flag = valid[validators[i]].value;\n        }\n      }\n\n      if (flag) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: valid[validators[i]].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }, this);\n    }\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    printError,\n    ...valid\n  };\n};\n\n_s2(useInput, \"NTaWvRKc20l5RmBrIhNe1ENXwJM=\", false, function () {\n  return [useValidation];\n});\n\nconst Login = () => {\n  _s3();\n\n  const email = useInput('', {\n    isEmpty: {\n      value: true,\n      text: 'Field is empty'\n    },\n    minLength: {\n      value: 3,\n      text: \"min length\"\n    },\n    isEmail: {\n      value: true,\n      text: 'email error'\n    }\n  });\n  const password = useInput('', {\n    isEmpty: {\n      value: true,\n      text: 'Field is empty'\n    },\n    minLength: {\n      value: 5,\n      text: 'min length'\n    },\n    maxLength: {\n      value: 8,\n      text: 'max length'\n    }\n  });\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'registration',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration_header\",\n      children: \"Authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), email.isDirty && email.printError(['isEmpty', 'minLengthError', 'emailError']), /*#__PURE__*/_jsxDEV(Input, {\n      setValue: email.onChange,\n      onBlur: email.onBlur,\n      value: email.value,\n      type: \"text\",\n      placeholder: \"input email...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), password.isDirty && password.isEmpty.value && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: password.isEmpty.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 62\n    }, this), password.isDirty && !password.isEmpty.value && password.minLengthError.value && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: password.minLengthError.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 96\n    }, this), password.isDirty && !password.isEmpty.value && !password.minLengthError.value && password.maxLengthError.value && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: password.maxLengthError.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 130\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      setValue: password.onChange,\n      onBlur: password.onBlur,\n      value: password.value,\n      type: \"password\",\n      placeholder: \"input password...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), (!email.inputValid.value || !password.inputValid.value) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: email.inputValid.text || password.inputValid.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 73\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !email.inputValid.value || !password.inputValid.value,\n      className: \"registration_btn\",\n      onClick: () => dispatch(login(email, password)),\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(Login, \"5H1+wiJxOzCiSNVaQSAG/PquIU8=\", false, function () {\n  return [useInput, useInput, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/registration/Login.jsx"],"names":["React","useEffect","useState","Input","useDispatch","login","useValidation","value","validations","isEmpty","setEmpty","text","minLengthError","setMinLengthError","maxLengthError","setMaxLengthError","emailError","setEmailError","inputValid","setInputValid","validation","length","re","test","String","toLowerCase","useInput","initialState","setValue","isDirty","setDirty","valid","onChange","e","target","onBlur","printError","validators","flag","i","j","Login","email","minLength","isEmail","password","maxLength","dispatch","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"./registration.css\";\r\nimport Input from \"../../utils/input/input\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../../actions/user\";\r\n\r\nconst useValidation = (value,validations)=>{\r\n    const [isEmpty,setEmpty] = useState({value:true,text:''})\r\n    const [minLengthError,setMinLengthError] = useState({value:false,text:''})\r\n    const [maxLengthError,setMaxLengthError] = useState({value:false,text:''})\r\n    const [emailError,setEmailError] = useState({value:false,text:''})\r\n    const [inputValid,setInputValid] = useState({value:false,text:''})\r\n\r\n\r\n    useEffect(()=>{\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLength':\r\n                    value.length < validations[validation].value? setMinLengthError({value: true,text: validations[validation].text}) : setMinLengthError({value: false,text: ''})\r\n                    break;\r\n                case 'isEmpty':\r\n                    value?setEmpty({value: false,text: ''}): setEmpty({value: true,text: validations[validation].text})\r\n                    break;\r\n                case'maxLength':\r\n                    value.length > validations[validation].value? setMaxLengthError({value: true,text: validations[validation].text}) : setMaxLengthError({value: false,text: ''})\r\n                    break;\r\n                case 'isEmail':\r\n                    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                     re.test(String(value ).toLowerCase()) ? setEmailError({value: false,text: ''}) : setEmailError({value: true,text: validations[validation].text})\r\n                    break;\r\n\r\n            }\r\n        }\r\n    },[value])\r\n\r\n    useEffect(()=>{\r\n        if(isEmpty.value || maxLengthError.value || minLengthError.value || emailError.value){\r\n            setInputValid({value: false,text: 'Form is invalid'})\r\n        } else {\r\n            setInputValid({value: true,text: ''})\r\n        }\r\n    },[isEmpty.value,maxLengthError.value,minLengthError.value,emailError.value])\r\n\r\n    return {isEmpty,minLengthError,emailError,maxLengthError,inputValid}\r\n}\r\n\r\nconst useInput = (initialState,validations) =>{\r\n    const [value,setValue] = useState(initialState);\r\n    const [isDirty,setDirty] = useState(false)\r\n    const valid = useValidation(value,validations)\r\n\r\n\r\n    const onChange = (e) =>{\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const onBlur = (e)=>{\r\n     setDirty(true)\r\n    }\r\n\r\n    const printError = (validators)=>{\r\n        let flag = false;\r\n        for (let i = 0; i<validators.length;i++){\r\n           for (let j = 0; j<=i;j++){\r\n              if (j<i){\r\n                  flag = !valid[validators[j]].value;\r\n              }\r\n              else {\r\n                  flag = valid[validators[i]].value;\r\n              }\r\n           }\r\n            if (flag) return <p>{valid[validators[i]].text}</p>;\r\n        }\r\n\r\n    }\r\n\r\n    return{\r\n        value,onChange,onBlur,isDirty,printError,...valid\r\n    }\r\n}\r\n\r\nconst Login = () => {\r\n    const email= useInput('',{isEmpty: {value:true,text:'Field is empty'},minLength:{value:3,text:\"min length\"},isEmail: {value:true,text:'email error'}})\r\n    const password = useInput('',{isEmpty: {value:true,text:'Field is empty'},minLength: {value:5,text:'min length'},maxLength: {value:8,text:'max length'}})\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={'registration'}>\r\n            <div className=\"registration_header\">Authorization</div>\r\n\r\n            {email.isDirty && email.printError(['isEmpty','minLengthError','emailError'])}\r\n\r\n            {/*{(email.isDirty && email.isEmpty.value) && <div style={{color:'red'}}>{email.isEmpty.text}</div>}*/}\r\n            {/*{(email.isDirty && !email.isEmpty.value && email.minLengthError.value) && <div style={{color:'red'}}>{email.minLengthError.text}</div>}*/}\r\n            {/*{(email.isDirty && !email.isEmpty.value && !email.minLengthError.value && email.emailError.value) && <div style={{color:'red'}}>{email.emailError.text}</div>}*/}\r\n            <Input setValue={email.onChange} onBlur={email.onBlur} value={email.value}  type={\"text\"} placeholder={\"input email...\"}/>\r\n            {(password.isDirty && password.isEmpty.value) && <div style={{color:'red'}}>{password.isEmpty.text}</div>}\r\n            {(password.isDirty && !password.isEmpty.value && password.minLengthError.value) && <div style={{color:'red'}}>{password.minLengthError.text}</div>}\r\n            {(password.isDirty && !password.isEmpty.value && !password.minLengthError.value && password.maxLengthError.value) && <div style={{color:'red'}}>{password.maxLengthError.text}</div>}\r\n            <Input setValue={password.onChange} onBlur={password.onBlur} value={password.value}  type={\"password\"} placeholder={\"input password...\"}/>\r\n            {(!email.inputValid.value || !password.inputValid.value) && <div>{email.inputValid.text || password.inputValid.text}</div>}\r\n            <button disabled={!email.inputValid.value || !password.inputValid.value} className=\"registration_btn\" onClick={()=>dispatch(login(email,password))}>Log in</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}