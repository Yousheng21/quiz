{"ast":null,"code":"import React from \"react\";\nimport { endGame, nextGame } from \"../reducers/gameReducer\";\nimport { store } from \"../reducers\";\nimport { useSelector } from \"react-redux\";\nexport const start = () => {};\nexport const next = (current, length) => {\n  var answer = checkAnswer();\n  console.log(answer);\n\n  if (current === length) {\n    setTimeout(() => end(answer), 500);\n  } else {\n    setTimeout(() => store.dispatch(nextGame(answer)), 500);\n  }\n};\n\nconst end = answer => {\n  store.dispatch(endGame(answer));\n};\n\nconst giveAnswers = () => {\n  var selectedCheckBoxes = document.querySelectorAll('input:checked');\n  return Array.from(selectedCheckBoxes).map(cb => cb.value);\n};\n\nexport const setAnswer = () => {\n  let flag = checkAnswer();\n  let answer = giveAnswers();\n  let number = store.getState().game.currentQuestionCount;\n  document.getElementById(number).style.display = 'block';\n  answer.map((item, index) => {\n    let input = document.getElementById(item);\n    input.className = flag ? \"radioCustomButton1\" : \"radioCustomButton2\";\n  });\n};\n\nconst checkAnswer = () => {\n  let answer = giveAnswers();\n  console.log(answer);\n  let count = 0,\n      flag = false,\n      rightAnswer = store.getState().game.rightAnswer;\n  answer.forEach(item => {\n    if (rightAnswer.includes(item)) count++;\n  });\n\n  if (rightAnswer.length === count && answer.length === rightAnswer.length) {\n    flag = true;\n  }\n\n  return flag;\n};","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/game.js"],"names":["React","endGame","nextGame","store","useSelector","start","next","current","length","answer","checkAnswer","console","log","setTimeout","end","dispatch","giveAnswers","selectedCheckBoxes","document","querySelectorAll","Array","from","map","cb","value","setAnswer","flag","number","getState","game","currentQuestionCount","getElementById","style","display","item","index","input","className","count","rightAnswer","forEach","includes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,yBAAhC;AACA,SAAQC,KAAR,QAAoB,aAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAK,CAEzB,CAFM;AAIP,OAAO,MAAMC,IAAI,GAAG,CAACC,OAAD,EAASC,MAAT,KAAmB;AAEnC,MAAIC,MAAM,GAAGC,WAAW,EAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,MAAIF,OAAO,KAAKC,MAAhB,EAAwB;AACpBK,IAAAA,UAAU,CAAC,MAAMC,GAAG,CAACL,MAAD,CAAV,EAAoB,GAApB,CAAV;AAEH,GAHD,MAGQ;AACJI,IAAAA,UAAU,CAAC,MAAMV,KAAK,CAACY,QAAN,CAAeb,QAAQ,CAACO,MAAD,CAAvB,CAAP,EAAyC,GAAzC,CAAV;AACH;AACJ,CAVM;;AAaP,MAAMK,GAAG,GAAIL,MAAD,IAAW;AACnBN,EAAAA,KAAK,CAACY,QAAN,CAAed,OAAO,CAACQ,MAAD,CAAtB;AACH,CAFD;;AAIA,MAAMO,WAAW,GAAG,MAAK;AACrB,MAAIC,kBAAkB,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,eAA1B,CAAzB;AACA,SAAOC,KAAK,CAACC,IAAN,CAAWJ,kBAAX,EAA+BK,GAA/B,CAAmCC,EAAE,IAAIA,EAAE,CAACC,KAA5C,CAAP;AACH,CAHD;;AAKA,OAAO,MAAMC,SAAS,GAAG,MAAI;AACzB,MAAIC,IAAI,GAAGhB,WAAW,EAAtB;AACA,MAAID,MAAM,GAAGO,WAAW,EAAxB;AACA,MAAIW,MAAM,GAAGxB,KAAK,CAACyB,QAAN,GAAiBC,IAAjB,CAAsBC,oBAAnC;AACAZ,EAAAA,QAAQ,CAACa,cAAT,CAAwBJ,MAAxB,EAAgCK,KAAhC,CAAsCC,OAAtC,GAAgD,OAAhD;AACAxB,EAAAA,MAAM,CAACa,GAAP,CAAW,CAACY,IAAD,EAAMC,KAAN,KAAc;AACrB,QAAIC,KAAK,GAAGlB,QAAQ,CAACa,cAAT,CAAwBG,IAAxB,CAAZ;AACAE,IAAAA,KAAK,CAACC,SAAN,GAAkBX,IAAI,GAAG,oBAAH,GAA0B,oBAAhD;AACH,GAHD;AAIH,CATM;;AAWP,MAAMhB,WAAW,GAAG,MAAK;AACrB,MAAID,MAAM,GAAGO,WAAW,EAAxB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,MAAI6B,KAAK,GAAG,CAAZ;AAAA,MAAeZ,IAAI,GAAG,KAAtB;AAAA,MACIa,WAAW,GAAGpC,KAAK,CAACyB,QAAN,GAAiBC,IAAjB,CAAsBU,WADxC;AAEA9B,EAAAA,MAAM,CAAC+B,OAAP,CAAgBN,IAAD,IAAQ;AACnB,QAAGK,WAAW,CAACE,QAAZ,CAAqBP,IAArB,CAAH,EACII,KAAK;AACZ,GAHD;;AAIA,MAAGC,WAAW,CAAC/B,MAAZ,KAAuB8B,KAAvB,IAAgC7B,MAAM,CAACD,MAAP,KAAkB+B,WAAW,CAAC/B,MAAjE,EAAwE;AACpEkB,IAAAA,IAAI,GAAG,IAAP;AACH;;AACD,SAAOA,IAAP;AACH,CAbD","sourcesContent":["import React from \"react\";\r\nimport {endGame, nextGame} from \"../reducers/gameReducer\";\r\nimport {store} from \"../reducers\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nexport const start = () =>{\r\n\r\n}\r\n\r\nexport const next = (current,length) =>{\r\n\r\n    var answer = checkAnswer();\r\n    console.log(answer);\r\n    if (current === length) {\r\n        setTimeout(() => end(answer), 500);\r\n\r\n    } else  {\r\n        setTimeout(() => store.dispatch(nextGame(answer)), 500);\r\n    }\r\n}\r\n\r\n\r\nconst end = (answer) =>{\r\n    store.dispatch(endGame(answer));\r\n}\r\n\r\nconst giveAnswers = () =>{\r\n    var selectedCheckBoxes = document.querySelectorAll('input:checked');\r\n    return Array.from(selectedCheckBoxes).map(cb => cb.value);\r\n}\r\n\r\nexport const setAnswer = ()=>{\r\n    let flag = checkAnswer();\r\n    let answer = giveAnswers();\r\n    let number = store.getState().game.currentQuestionCount;\r\n    document.getElementById(number).style.display = 'block';\r\n    answer.map((item,index)=>{\r\n        let input = document.getElementById(item);\r\n        input.className = flag ? \"radioCustomButton1\" : \"radioCustomButton2\";\r\n    });\r\n}\r\n\r\nconst checkAnswer = () =>{\r\n    let answer = giveAnswers();\r\n    console.log(answer);\r\n    let count = 0, flag = false,\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    answer.forEach((item)=>{\r\n        if(rightAnswer.includes(item))\r\n            count++;\r\n    });\r\n    if(rightAnswer.length === count && answer.length === rightAnswer.length){\r\n        flag = true;\r\n    }\r\n    return flag;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}