{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\game\\\\SelectGame.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, NavLink, Route, Switch } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../reducers/userReducer\";\nimport { setKind } from \"../../reducers/gameReducer\";\nimport { CSSTransition } from \"react-transition-group\";\nimport saveToLocalStorage, { store } from \"../../store\";\nimport './game.css';\nimport Game from \"./Game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectGame = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const routes = ['history', 'biology', 'geography', 'mixed']; // const kind = useSelector(state=>state.game.currentKind)\n  // console.log(kind);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kinds\",\n      children: routes.map(item => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: '/preview/' + item,\n        activeClassName: 'active',\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [routes.map(item => /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${props.match.path}/` + item,\n        children: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n          in: match != null,\n          timeout: 300,\n          classNames: \"page\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u042D\\u0442\\u043E\\u0442 \\u0440\\u0430\\u0437\\u0434\\u0435\\u043B \", item, \" \\u0441\\u043E\\u0441\\u043E\\u0442\\u043E\\u0438\\u0442 \\u0438\\u0437 20 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432. \\u041D\\u0430\\u0436\\u0430\\u0432 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0443 \\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443 \\u0432\\u044B \\u043D\\u0435 \\u0441\\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0434\\u043E\\u0441\\u0440\\u043E\\u0447\\u043D\\u043E \\u0435\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: '/game/' + item,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  dispatch(setKind(item));\n                  saveToLocalStorage('game', store.getState().game);\n                },\n                children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: props.match.path,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${props.match.path}/history`,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${props.match.path}/biology`,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this) // <div className={\"kinds\"}>\n  //         {routes.map((item) =>  (\n  //             <NavLink key={item} to={'/preview/'+item} activeClassName={'active'}>\n  //                 {item}\n  //             </NavLink>\n  //         ))}\n\n  /*<NavLink to={'/game/geography'}>*/\n\n  /*    <button onClick={()=>{ dispatch(setKind(\"geography\"));*/\n\n  /*     saveToLocalStorage('game',store.getState().game);*/\n\n  /*    }}>geography</button>*/\n\n  /*</NavLink>*/\n  // </div>\n  ;\n};\n\n_s(SelectGame, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SelectGame;\nexport default SelectGame; // const mapStateToProps = (state, ownProps) => ({\n//     name:  ownProps.params.name\n// })\n//\n// export default connect(mapStateToProps)(SelectGame);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectGame\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/game/SelectGame.jsx"],"names":["React","BrowserRouter","Router","NavLink","Route","Switch","connect","useDispatch","useSelector","logout","setKind","CSSTransition","saveToLocalStorage","store","Game","SelectGame","props","dispatch","routes","map","item","match","path","getState","game"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router, NavLink, Route,Switch} from \"react-router-dom\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../reducers/userReducer\";\r\nimport {setKind} from \"../../reducers/gameReducer\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport saveToLocalStorage, {store} from \"../../store\";\r\nimport './game.css'\r\nimport Game from \"./Game\";\r\n\r\nconst SelectGame = (props) => {\r\n    const dispatch = useDispatch();\r\n    const routes = ['history','biology','geography','mixed'];\r\n    // const kind = useSelector(state=>state.game.currentKind)\r\n    // console.log(kind);\r\n    return (\r\n        <div>\r\n            <div className={\"kinds\"}>\r\n                {routes.map((item) =>  (\r\n                    <NavLink key={item} to={'/preview/'+item} activeClassName={'active'}>\r\n                        {item}\r\n                    </NavLink>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                {routes.map((item)=>(\r\n                    <Route key={item} exact path={`${props.match.path}/`+item}>\r\n                        {({ match }) => (\r\n                            <CSSTransition\r\n                                in={match != null}\r\n                                timeout={300}\r\n                                classNames=\"page\"\r\n                                unmountOnExit\r\n                            >\r\n                                <div className=\"page\">\r\n                                   <p>Этот раздел {item} сосотоит из 20 вопросов. Нажав кнопку начать игру вы не сможете досрочно ее завершить</p>\r\n                                    <NavLink to={'/game/'+item}>\r\n                                        <button onClick={()=>{\r\n                                            dispatch(setKind(item));\r\n                                            saveToLocalStorage('game',store.getState().game);\r\n                                           }}>Начать игру</button>\r\n                                    </NavLink>\r\n                                </div>\r\n                            </CSSTransition>\r\n                        )}\r\n                    </Route>\r\n                ))}\r\n                <Route exact path={props.match.path} >1</Route>\r\n                <Route path={`${props.match.path}/history`} >2</Route>\r\n                <Route path={`${props.match.path}/biology`} >3</Route>\r\n            </div>\r\n        </div>\r\n\r\n        // <div className={\"kinds\"}>\r\n        //         {routes.map((item) =>  (\r\n        //             <NavLink key={item} to={'/preview/'+item} activeClassName={'active'}>\r\n        //                 {item}\r\n        //             </NavLink>\r\n        //         ))}\r\n\r\n            /*<NavLink to={'/game/geography'}>*/\r\n            /*    <button onClick={()=>{ dispatch(setKind(\"geography\"));*/\r\n            /*     saveToLocalStorage('game',store.getState().game);*/\r\n            /*    }}>geography</button>*/\r\n            /*</NavLink>*/\r\n\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default SelectGame;\r\n// const mapStateToProps = (state, ownProps) => ({\r\n//     name:  ownProps.params.name\r\n// })\r\n//\r\n// export default connect(mapStateToProps)(SelectGame);"]},"metadata":{},"sourceType":"module"}