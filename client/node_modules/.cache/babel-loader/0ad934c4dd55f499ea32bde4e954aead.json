{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser } from \"../reducers/userReducer\";\nimport { endGame, nextGame } from \"../reducers/gameReducer\";\nimport axios from \"axios\";\nimport React, { useCallback } from \"react\";\nexport const Next = ({\n  current,\n  length\n}) => {\n  _s();\n\n  const dispatch = useDispatch(); // dispatch(startGame());\n\n  const handler = useCallback(name => dispatch(name), [dispatch]);\n  console.log(current, length);\n\n  if (current === length) {\n    return handler(endGame());\n  } else return handler(nextGame());\n};\n\n_s(Next, \"QttWfXgFL0DQJbGie+KQ8NLojmc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Next;\nexport const end = () => {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Next\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/game.js"],"names":["useDispatch","useSelector","setUser","endGame","nextGame","axios","React","useCallback","Next","current","length","dispatch","handler","name","console","log","end"],"mappings":";;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,QAAsB,yBAAtB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,yBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AAGA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAAA;;AACtC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CADsC,CAEtC;;AACA,QAAMY,OAAO,GAAGL,WAAW,CAAEM,IAAD,IACxBF,QAAQ,CAACE,IAAD,CADe,EAEzB,CAACF,QAAD,CAFyB,CAA3B;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAoBC,MAApB;;AACA,MAAID,OAAO,KAAKC,MAAhB,EAAwB;AACnB,WAAOE,OAAO,CAACT,OAAO,EAAR,CAAd;AACJ,GAFD,MAEQ,OAAOS,OAAO,CAACR,QAAQ,EAAT,CAAd;AAEX,CAZM;;GAAMI,I;UACQR,W;;;KADRQ,I;AAcb,OAAO,MAAMQ,GAAG,GAAG,MAAK,CAEvB,CAFM","sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUser} from \"../reducers/userReducer\";\r\nimport {endGame, nextGame} from \"../reducers/gameReducer\";\r\nimport axios from \"axios\";\r\nimport React, {useCallback} from \"react\";\r\n\r\n\r\nexport const Next = ({current,length}) => {\r\n    const dispatch = useDispatch();\r\n    // dispatch(startGame());\r\n    const handler = useCallback((name) =>\r\n        dispatch(name)\r\n    , [dispatch]);\r\n\r\n    console.log(current,length);\r\n    if (current === length) {\r\n         return handler(endGame())\r\n    } else  return handler(nextGame())\r\n\r\n};\r\n\r\nexport const end = () =>{\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}