{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\game\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"./View\";\nimport { nextGame, startGame } from \"../../reducers/gameReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst questions = require('../../assets/questions.json');\n\nconst Game = () => {\n  _s();\n\n  const dispatch = useDispatch(); // dispatch(startGame());\n\n  const number = useSelector(state => state.game.currentQuestionCount);\n  const options = useSelector(state => state.game.currentOptions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [number, \" Question\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: options.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: options.answers.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => dispatch(nextGame()),\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"057UV7cSoYMfESx+NLkWgAfN644=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/game/Game.jsx"],"names":["React","useDispatch","useSelector","View","nextGame","startGame","questions","require","Game","dispatch","number","state","game","currentQuestionCount","options","currentOptions","question","answers","map","item","index","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,4BAAlC;;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,6BAAD,CAAzB;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CADe,CAEf;;AACA,QAAMS,MAAM,GAAGR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,oBAAnB,CAA1B;AACA,QAAMC,OAAO,GAAGZ,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWG,cAAnB,CAA3B;AAEA,sBACI;AAAA,4BACI;AAAA,iBAAKL,MAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKI,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAEOF,OAAO,CAACG,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC7B,4BAAO;AAAA,oBAAiBD,IAAI,CAACE;AAAtB,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFF;AAFP;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUI;AAAQ,MAAA,IAAI,EAAE,QAAd;AAAwB,MAAA,OAAO,EAAE,MAAIX,QAAQ,CAACL,QAAQ,EAAT,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArBD;;GAAMI,I;UACeP,W,EAEFC,W,EACCA,W;;;KAJdM,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport View from \"./View\";\r\nimport {nextGame, startGame} from \"../../reducers/gameReducer\";\r\nconst questions = require('../../assets/questions.json');\r\nconst Game = () => {\r\n    const dispatch = useDispatch();\r\n    // dispatch(startGame());\r\n    const number = useSelector(state=>state.game.currentQuestionCount);\r\n    const options = useSelector(state=>state.game.currentOptions);\r\n\r\n    return (\r\n        <div>\r\n            <h3>{number} Question</h3>\r\n            <h2>{options.question}</h2>\r\n            <ul>\r\n                {\r\n                   options.answers.map((item,index)=>{\r\n                        return <li key={index}>{item.content}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n            <button type={\"button\"} onClick={()=>dispatch(nextGame())}>Check</button>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}