{"ast":null,"code":"import React from \"react\";\nimport saveToLocalStorage, { loadFromLocalStorage, store } from \"../store\";\nimport axios from \"axios\";\nimport { refreshRange, setRange } from \"../reducers/appReducer\";\nexport const startRange = async () => {\n  try {\n    const response = await axios.post('http://localhost:5000/history/range', {});\n    let range = printRange(response.data.response);\n    store.dispatch(setRange(range, top(range)));\n    saveToLocalStorage('range', range);\n    saveToLocalStorage('top', top(range));\n  } catch (e) {\n    console.log(e.response);\n  }\n};\n\nfunction printRange(history) {\n  history = sort(history);\n  let exception;\n  let userId = {\n    history: '1',\n    biology: '1',\n    geography: '1',\n    mixed: '1'\n  };\n  let arr = exception = {\n    history: [],\n    biology: [],\n    geography: [],\n    mixed: []\n  };\n  history.forEach(item => {\n    if (userId[item.kind] !== item.userId && !exception[item.kind].includes(item.userId)) {\n      arr[item.kind].push(item);\n    }\n\n    exception[item.kind].push(item.userId);\n    userId[item.kind] = item.userId;\n  });\n  console.log(arr);\n  return {\n    history: arr.history,\n    biology: arr.biology,\n    geography: arr.geography,\n    mixed: arr.mixed\n  };\n}\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    return b.result - a.result;\n  });\n}\n\nfunction top(range) {\n  const userId = store.getState().user.currentUser.id;\n  let top = {\n    history: 0,\n    biology: 0,\n    geography: 0,\n    mixed: 0\n  };\n  Object.keys(top).map(item => {\n    writeTop(item);\n  });\n\n  function writeTop(kind) {\n    range[kind].every((item, number) => {\n      if (item.userId === userId) {\n        top[kind] = number + 1;\n        return false;\n      }\n    });\n  }\n\n  return top;\n}\n\nexport const actionRefreshRange = () => {\n  const range = store.getState().app.range;\n  const localRange = loadFromLocalStorage('range');\n  if (Object.keys(range).length === 0 && Object.keys(localRange).length !== 0) store.dispatch(refreshRange());\n};","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/range.js"],"names":["React","saveToLocalStorage","loadFromLocalStorage","store","axios","refreshRange","setRange","startRange","response","post","range","printRange","data","dispatch","top","e","console","log","history","sort","exception","userId","biology","geography","mixed","arr","forEach","item","kind","includes","push","a","b","result","getState","user","currentUser","id","Object","keys","map","writeTop","every","number","actionRefreshRange","app","localRange","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport saveToLocalStorage, {loadFromLocalStorage, store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {refreshRange, setRange} from \"../reducers/appReducer\";\r\n\r\n\r\nexport const  startRange = async () =>{\r\n    try {\r\n        const response =  await axios.post('http://localhost:5000/history/range',{\r\n        });\r\n\r\n        let range = printRange(response.data.response);\r\n        store.dispatch(setRange(range,top(range)));\r\n        saveToLocalStorage('range',range);\r\n        saveToLocalStorage('top',top(range));\r\n\r\n    } catch (e) {\r\n        console.log(e.response);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction printRange(history) {\r\n    history = sort(history);\r\n    let exception;\r\n    let userId = {\r\n        history:'1',\r\n        biology:'1',\r\n        geography:'1',\r\n        mixed:'1'\r\n    }\r\n    let arr = exception = {\r\n        history:[],\r\n        biology:[],\r\n        geography:[],\r\n        mixed:[]\r\n    };\r\n    history.forEach((item)=>{\r\n        if (userId[item.kind] !== item.userId && !exception[item.kind].includes(item.userId)){\r\n            arr[item.kind].push(item)\r\n        }\r\n        exception[item.kind].push(item.userId);\r\n        userId[item.kind] = item.userId;\r\n\r\n    });\r\n    console.log(arr);\r\n    return {\r\n        history: arr.history,\r\n        biology: arr.biology,\r\n        geography: arr.geography,\r\n        mixed: arr.mixed\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a,b)=>{\r\n        return b.result - a.result;\r\n    })\r\n}\r\n\r\n\r\nfunction top(range) {\r\n    const userId = store.getState().user.currentUser.id;\r\n\r\n    let top =  {\r\n        history:0,\r\n        biology: 0,\r\n        geography: 0,\r\n        mixed: 0\r\n    }\r\n\r\n    Object.keys(top).map((item)=>{\r\n        writeTop(item);\r\n    })\r\n\r\n    function writeTop(kind){\r\n        range[kind].every((item,number)=>{\r\n            if (item.userId === userId){\r\n                top[kind] = number+1\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n\r\n    return top;\r\n\r\n\r\n}\r\n\r\nexport const actionRefreshRange = ()=>{\r\n    const range = store.getState().app.range;\r\n    const localRange = loadFromLocalStorage('range');\r\n    if (Object.keys(range).length === 0 && Object.keys(localRange).length !== 0) store.dispatch(refreshRange());\r\n}\r\n"]},"metadata":{},"sourceType":"module"}