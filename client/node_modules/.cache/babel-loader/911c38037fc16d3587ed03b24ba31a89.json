{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from \"./userReducer\";\nimport gameReducer from \"./gameReducer\";\nimport appReducer from \"./appReducer\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"game\"]\n};\nexport const rootReducer = combineReducers({\n  user: userReducer,\n  app: appReducer,\n  game: gameReducer\n});\nexport default persistReducer(persistConfig, rootReducer); // export const store =  createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))","map":{"version":3,"sources":["F:/Myproject/node1/client/src/reducers/index.js"],"names":["combineReducers","persistReducer","storage","userReducer","gameReducer","appReducer","persistConfig","key","whitelist","rootReducer","user","app","game"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAFkB;AAGlBM,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHO,CAAtB;AAMA,OAAO,MAAMC,WAAW,GAAGT,eAAe,CAAC;AACvCU,EAAAA,IAAI,EAAEP,WADiC;AAEvCQ,EAAAA,GAAG,EAACN,UAFmC;AAGvCO,EAAAA,IAAI,EAAER;AAHiC,CAAD,CAAnC;AAMP,eAAeH,cAAc,CAACK,aAAD,EAAeG,WAAf,CAA7B,C,CAEA","sourcesContent":["import {combineReducers} from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport userReducer from \"./userReducer\";\r\nimport gameReducer from \"./gameReducer\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    whitelist: [\"game\"]\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    user: userReducer,\r\n    app:appReducer,\r\n    game: gameReducer\r\n})\r\n\r\nexport default persistReducer(persistConfig,rootReducer);\r\n\r\n// export const store =  createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))"]},"metadata":{},"sourceType":"module"}