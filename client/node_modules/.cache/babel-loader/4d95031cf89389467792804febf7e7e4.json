{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\registration\\\\Login.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./registration.css\";\nimport Input from \"../../utils/input/input\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useValidation = (value, validations) => {\n  _s();\n\n  const [isEmpty, setEmpty] = useState({\n    value: true,\n    text: ''\n  });\n  const [minLengthError, setMinLengthError] = useState(false);\n  const [maxLengthError, setMaxLengthError] = useState(false);\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'minLength':\n          value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false);\n          break;\n\n        case 'isEmpty':\n          value ? setEmpty({\n            value: false,\n            text: ''\n          }) : setEmpty({\n            value: false,\n            text: validations[validation].text\n          });\n          break;\n\n        case 'maxLength':\n          value.length > validations[validation] ? setMaxLengthError(true) : setMaxLengthError(false);\n          break;\n\n        case 'isEmail':\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase());\n          break;\n      }\n    }\n  }, [value]);\n  return {\n    isEmpty,\n    minLengthError\n  };\n};\n\n_s(useValidation, \"49XaWgOYwHnBbreOWK3mTTg3nV8=\");\n\nconst useInput = (initialState, validations) => {\n  _s2();\n\n  const [value, setValue] = useState(initialState);\n  const [isDirty, setDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = e => {\n    setDirty(true);\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid\n  };\n};\n\n_s2(useInput, \"NTaWvRKc20l5RmBrIhNe1ENXwJM=\", false, function () {\n  return [useValidation];\n});\n\nconst Login = () => {\n  _s3();\n\n  const email = useInput('', {\n    isEmpty: {\n      value: true,\n      text: 'Field is empty'\n    },\n    minLength: 3,\n    isEmail: true\n  });\n  const password = useInput('', {\n    isEmpty: {\n      value: true,\n      text: 'Field is empty'\n    },\n    minLength: 5,\n    maxLength: 8\n  });\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'registration',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration_header\",\n      children: \"Authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), email.isDirty && email.isEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: email.isEmpty.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 50\n    }, this), email.isDirty && email.minLengthError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: \"min length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 57\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      setValue: email.onChange,\n      onBlur: email.onBlur,\n      value: email.value,\n      type: \"text\",\n      placeholder: \"input email...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), password.isDirty && password.isEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: password.isEmpty.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 56\n    }, this), password.isDirty && password.minLengthError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: \"min length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      setValue: password.onChange,\n      onBlur: password.onBlur,\n      value: password.value,\n      type: \"password\",\n      placeholder: \"input password...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"registration_btn\",\n      onClick: () => dispatch(login(email, password)),\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(Login, \"5H1+wiJxOzCiSNVaQSAG/PquIU8=\", false, function () {\n  return [useInput, useInput, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/registration/Login.jsx"],"names":["React","useEffect","useState","Input","useDispatch","login","useValidation","value","validations","isEmpty","setEmpty","text","minLengthError","setMinLengthError","maxLengthError","setMaxLengthError","validation","length","re","test","String","toLowerCase","useInput","initialState","setValue","isDirty","setDirty","valid","onChange","e","target","onBlur","Login","email","minLength","isEmail","password","maxLength","dispatch","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"./registration.css\";\r\nimport Input from \"../../utils/input/input\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../../actions/user\";\r\n\r\nconst useValidation = (value,validations)=>{\r\n    const [isEmpty,setEmpty] = useState({value:true,text:''})\r\n    const [minLengthError,setMinLengthError] = useState(false)\r\n    const [maxLengthError,setMaxLengthError] = useState(false)\r\n\r\n\r\n    useEffect(()=>{\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLength':\r\n                    value.length < validations[validation]? setMinLengthError(true) : setMinLengthError(false)\r\n                    break;\r\n                case 'isEmpty':\r\n                    value?setEmpty({value: false,text: ''}): setEmpty({value: false,text: validations[validation].text})\r\n                    break;\r\n                case'maxLength':\r\n                    value.length > validations[validation]? setMaxLengthError(true) : setMaxLengthError(false)\r\n                    break;\r\n                case 'isEmail':\r\n                    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                     re.test(String(value ).toLowerCase());\r\n                    break;\r\n\r\n            }\r\n        }\r\n    },[value])\r\n\r\n    return {isEmpty,minLengthError}\r\n}\r\n\r\nconst useInput = (initialState,validations) =>{\r\n    const [value,setValue] = useState(initialState);\r\n    const [isDirty,setDirty] = useState(false)\r\n    const valid = useValidation(value,validations)\r\n\r\n\r\n    const onChange = (e) =>{\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const onBlur = (e)=>{\r\n     setDirty(true)\r\n    }\r\n\r\n    return{\r\n        value,onChange,onBlur,isDirty,...valid\r\n    }\r\n}\r\n\r\nconst Login = () => {\r\n    const email= useInput('',{isEmpty: {value:true,text:'Field is empty'},minLength:3,isEmail:true})\r\n    const password = useInput('',{isEmpty: {value:true,text:'Field is empty'},minLength:5,maxLength:8})\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className={'registration'}>\r\n            <div className=\"registration_header\">Authorization</div>\r\n            {(email.isDirty && email.isEmpty) && <div style={{color:'red'}}>{email.isEmpty.text}</div>}\r\n            {(email.isDirty && email.minLengthError) && <div style={{color:'red'}}>{\"min length\"}</div>}\r\n            <Input setValue={email.onChange} onBlur={email.onBlur} value={email.value}  type={\"text\"} placeholder={\"input email...\"}/>\r\n            {(password.isDirty && password.isEmpty) && <div style={{color:'red'}}>{password.isEmpty.text}</div>}\r\n            {(password.isDirty && password.minLengthError) && <div style={{color:'red'}}>{\"min length\"}</div>}\r\n            <Input setValue={password.onChange} onBlur={password.onBlur} value={password.value}  type={\"password\"} placeholder={\"input password...\"}/>\r\n            <button className=\"registration_btn\" onClick={()=>dispatch(login(email,password))}>Log in</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}