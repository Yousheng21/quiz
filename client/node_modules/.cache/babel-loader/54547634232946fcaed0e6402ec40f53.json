{"ast":null,"code":"import React from \"react\";\nimport saveToLocalStorage, { loadFromLocalStorage, store } from \"../store\";\nimport axios from \"axios\";\nimport { refreshRange, setRange } from \"../reducers/appReducer\";\nexport const startRange = async () => {\n  try {\n    const response = await axios.post('http://localhost:5000/history/range', {});\n    let range = printRange(response.data.response);\n    store.dispatch(setRange(range, top(range)));\n    saveToLocalStorage('range', range);\n    saveToLocalStorage('top', top(range));\n  } catch (e) {\n    console.log(e.response);\n  }\n};\n\nfunction printRange(history) {\n  let userId = 1;\n  let historyArr = [],\n      biologyArr = [],\n      geographyArr = [],\n      mixedArr = [],\n      exception = [];\n  history.forEach(item => {\n    if (userId !== item.userId && !exception.includes(item.userId)) {\n      switch (item.kind) {\n        case 'history':\n          historyArr.push(item);\n          break;\n\n        case 'biology':\n          biologyArr.push(item);\n          break;\n\n        case 'geography':\n          geographyArr.push(item);\n          break;\n\n        case 'mixed':\n          mixedArr.push(item);\n          break;\n\n        default:\n          break;\n      }\n\n      exception.push(item.userId);\n      userId = item.userId;\n    }\n\n    userId = item.userId;\n  });\n  return {\n    history: sort(historyArr),\n    biology: sort(biologyArr),\n    geography: sort(geographyArr),\n    mixed: sort(mixedArr)\n  };\n}\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    return b.result - a.result;\n  });\n}\n\nfunction top(range) {\n  const userId = store.getState().user.currentUser.id;\n  let top = {\n    history: 0,\n    biology: 0,\n    geography: 0,\n    mixed: 0\n  };\n  Object.keys(top).map(item => {\n    writeTop(item);\n  });\n\n  function writeTop(kind) {\n    range[kind].every((item, number) => {\n      if (item.userId === userId) {\n        top[kind] = number + 1;\n        return false;\n      }\n    });\n  }\n\n  return top;\n}\n\nexport const actionRefreshRange = () => {\n  const range = store.getState().app.range;\n  const localRange = loadFromLocalStorage('range');\n  if (Object.keys(range).length === 0 && Object.keys(localRange).length !== 0) store.dispatch(refreshRange());\n};","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/range.js"],"names":["React","saveToLocalStorage","loadFromLocalStorage","store","axios","refreshRange","setRange","startRange","response","post","range","printRange","data","dispatch","top","e","console","log","history","userId","historyArr","biologyArr","geographyArr","mixedArr","exception","forEach","item","includes","kind","push","sort","biology","geography","mixed","arr","a","b","result","getState","user","currentUser","id","Object","keys","map","writeTop","every","number","actionRefreshRange","app","localRange","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport saveToLocalStorage, {loadFromLocalStorage, store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {refreshRange, setRange} from \"../reducers/appReducer\";\r\n\r\n\r\nexport const  startRange = async () =>{\r\n    try {\r\n        const response =  await axios.post('http://localhost:5000/history/range',{\r\n        });\r\n\r\n        let range = printRange(response.data.response);\r\n        store.dispatch(setRange(range,top(range)));\r\n        saveToLocalStorage('range',range);\r\n        saveToLocalStorage('top',top(range));\r\n\r\n    } catch (e) {\r\n        console.log(e.response);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction printRange(history) {\r\n    let userId = 1;\r\n    let historyArr = [],biologyArr=[],geographyArr=[],mixedArr = [],exception = [];\r\n    history.forEach((item)=>{\r\n        if (userId !== item.userId && !exception.includes(item.userId)){\r\n            switch (item.kind) {\r\n                case 'history':\r\n                    historyArr.push(item)\r\n                    break;\r\n                case 'biology':\r\n                    biologyArr.push(item)\r\n                    break;\r\n                case 'geography':\r\n                    geographyArr.push(item)\r\n                    break;\r\n                case 'mixed':\r\n                    mixedArr.push(item)\r\n                    break;\r\n                default:\r\n                    break;\r\n\r\n            }\r\n            exception.push(item.userId);\r\n            userId = item.userId;\r\n        }\r\n        userId = item.userId;\r\n    });\r\n\r\n    return {\r\n        history: sort(historyArr),\r\n        biology: sort(biologyArr),\r\n        geography: sort(geographyArr),\r\n        mixed: sort(mixedArr)\r\n    };\r\n}\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a,b)=>{\r\n        return b.result - a.result;\r\n    })\r\n}\r\n\r\nfunction top(range) {\r\n    const userId = store.getState().user.currentUser.id;\r\n\r\n    let top =  {\r\n        history:0,\r\n        biology: 0,\r\n        geography: 0,\r\n        mixed: 0\r\n    }\r\n\r\n    Object.keys(top).map((item)=>{\r\n        writeTop(item);\r\n    })\r\n\r\n    function writeTop(kind){\r\n        range[kind].every((item,number)=>{\r\n            if (item.userId === userId){\r\n                top[kind] = number+1\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n\r\n    return top;\r\n\r\n\r\n}\r\n\r\nexport const actionRefreshRange = ()=>{\r\n    const range = store.getState().app.range;\r\n    const localRange = loadFromLocalStorage('range');\r\n    if (Object.keys(range).length === 0 && Object.keys(localRange).length !== 0) store.dispatch(refreshRange());\r\n}\r\n"]},"metadata":{},"sourceType":"module"}