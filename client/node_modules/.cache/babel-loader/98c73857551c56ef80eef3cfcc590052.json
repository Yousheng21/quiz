{"ast":null,"code":"var _jsxFileName = \"F:\\\\Myproject\\\\node1\\\\client\\\\src\\\\components\\\\game\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CSSTransitionGroup from \"react-\";\nimport View from \"./View\";\nimport { next } from \"../../actions/game\";\nimport { endGame, nextGame } from \"../../reducers/gameReducer\";\nimport Answers from \"./Answers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst questions = require('../../assets/questions.json');\n\nconst Game = () => {\n  _s();\n\n  const dispatch = useDispatch(); // dispatch(startGame());\n\n  const number = useSelector(state => state.game.currentQuestionCount);\n  const options = useSelector(state => state.game.currentOptions);\n  const flag = useSelector(state => state.game.endGame);\n  const length = useSelector(state => state.game.questionsLength);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !flag ? /*#__PURE__*/_jsxDEV(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionEnterTimeout: 800,\n      transitionLeaveTimeout: 500,\n      transitionAppear: true,\n      transitionAppearTimeout: 500,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [number + 1, \" Question of \", length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: options.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"answerOptions\",\n          children: options.answers.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Answers, {\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 48\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => next(number + 1, length),\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Game over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"98JU4AoUPBcLDsj2R5kC19/pMgs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["F:/Myproject/node1/client/src/components/game/Game.jsx"],"names":["React","useDispatch","useSelector","CSSTransitionGroup","View","next","endGame","nextGame","Answers","questions","require","Game","dispatch","number","state","game","currentQuestionCount","options","currentOptions","flag","length","questionsLength","question","answers","map","item","index","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,kBAAP,MAA+B,QAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,4BAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,6BAAD,CAAzB;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CADe,CAEf;;AACA,QAAMY,MAAM,GAAGX,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,oBAAnB,CAA1B;AACA,QAAMC,OAAO,GAAGf,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWG,cAAnB,CAA3B;AACA,QAAMC,IAAI,GAAGjB,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWT,OAAnB,CAAxB;AACA,QAAMc,MAAM,GAAGlB,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWM,eAAnB,CAA1B;AAEA,sBAEI;AAAA,cAEQ,CAACF,IAAD,gBACQ,QAAC,kBAAD;AACI,MAAA,SAAS,EAAC,WADd;AAEI,MAAA,SAAS,EAAC,KAFd;AAGI,MAAA,cAAc,EAAC,MAHnB;AAII,MAAA,sBAAsB,EAAE,GAJ5B;AAKI,MAAA,sBAAsB,EAAE,GAL5B;AAMI,MAAA,gBAAgB,MANpB;AAOI,MAAA,uBAAuB,EAAE,GAP7B;AAAA,6BAQI;AAAA,gCACI;AAAA,qBAAKN,MAAM,GAAC,CAAZ,mBAA4BO,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKH,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAEKL,OAAO,CAACM,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,gCAAO,QAAC,OAAD;AAAS,cAAA,OAAO,EAAED,IAAI,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AAFL;AAAA;AAAA;AAAA;AAAA,gBAHJ,eASI;AAAQ,UAAA,IAAI,EAAE,QAAd;AAAwB,UAAA,OAAO,EAAE,MAAItB,IAAI,CAACQ,MAAM,GAAG,CAAV,EAAYO,MAAZ,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADR,gBAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBR;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgCH,CAxCD;;GAAMT,I;UACeV,W,EAEFC,W,EACCA,W,EACHA,W,EACEA,W;;;KANbS,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CSSTransitionGroup from \"react-\";\r\nimport View from \"./View\";\r\nimport {next} from \"../../actions/game\";\r\nimport {endGame, nextGame} from \"../../reducers/gameReducer\";\r\nimport Answers from \"./Answers\";\r\nconst questions = require('../../assets/questions.json');\r\nconst Game = () => {\r\n    const dispatch = useDispatch();\r\n    // dispatch(startGame());\r\n    const number = useSelector(state=>state.game.currentQuestionCount);\r\n    const options = useSelector(state=>state.game.currentOptions);\r\n    const flag = useSelector(state=>state.game.endGame);\r\n    const length = useSelector(state=>state.game.questionsLength);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                !flag ?\r\n                        <CSSTransitionGroup\r\n                            className=\"container\"\r\n                            component=\"div\"\r\n                            transitionName=\"fade\"\r\n                            transitionEnterTimeout={800}\r\n                            transitionLeaveTimeout={500}\r\n                            transitionAppear\r\n                            transitionAppearTimeout={500}>\r\n                            <div>\r\n                                <h3>{number+1} Question of {length}</h3>\r\n                                <h2>{options.question}</h2>\r\n                                <ul className=\"answerOptions\">\r\n                                    {/*Для каждого варианта ответа вызываем функцию*/}\r\n                                    {options.answers.map((item, index) => {\r\n                                        return <Answers content={item.content} />\r\n                                    })}\r\n                                </ul>\r\n                                <button type={\"button\"} onClick={()=>next(number + 1,length)}>Check</button>\r\n                            </div>\r\n                        </CSSTransitionGroup>\r\n                :\r\n                <div>Game over!</div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}