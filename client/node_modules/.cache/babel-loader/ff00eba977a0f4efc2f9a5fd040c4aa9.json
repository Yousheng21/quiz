{"ast":null,"code":"import React from \"react\";\nimport { store } from \"../store\";\nimport axios from \"axios\";\nimport { setRange } from \"../reducers/appReducer\";\n\nconst delay = ms => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n};\n\nexport const start = history => {\n  function sort(arr) {\n    return arr.sort((a, b) => {\n      return b.result - a.result;\n    });\n  }\n\n  let historyArr = [],\n      biologyArr = [],\n      geographyArr = [],\n      mixedArr = []; // try {\n  //     // await delay(1000);\n  //     const response =  await axios.post('http://localhost:5000/history/range',{\n  //         kind\n  //     });\n  //     // document.getElementById('preloader').hidden = true;\n  //     return store.dispatch(setRange(response.data.response));\n  //\n  // } catch (e) {\n  //     console.log(e.response);\n  // }\n\n  history.forEach(item => {\n    switch (item.kind) {\n      case 'history':\n        historyArr.push(item);\n        break;\n\n      case 'biology':\n        biologyArr.push(item);\n        break;\n\n      case 'geography':\n        geographyArr.push(item);\n        break;\n\n      case 'mixed':\n        mixedArr.push(item);\n        break;\n\n      default:\n        break;\n    }\n  });\n  let range = {\n    history: sort(historyArr),\n    biology: sort(biologyArr),\n    geography: sort(geographyArr),\n    mixed: sort(mixedArr)\n  };\n  store.dispatch(setRange(range));\n};","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/range.js"],"names":["React","store","axios","setRange","delay","ms","Promise","resolve","setTimeout","start","history","sort","arr","a","b","result","historyArr","biologyArr","geographyArr","mixedArr","forEach","item","kind","push","range","biology","geography","mixed","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;;AAEA,MAAMC,KAAK,GAAGC,EAAE,IAAG;AACf,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BC,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,OAAO;AACV,KAFS,EAERF,EAFQ,CAAV;AAGH,GAJM,CAAP;AAKH,CAND;;AAQA,OAAO,MAAOI,KAAK,GAAIC,OAAD,IAAY;AAE9B,WAASC,IAAT,CAAcC,GAAd,EAAmB;AACf,WAAOA,GAAG,CAACD,IAAJ,CAAS,CAACE,CAAD,EAAGC,CAAH,KAAO;AACnB,aAAOA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAApB;AACH,KAFM,CAAP;AAGH;;AAED,MAAIC,UAAU,GAAG,EAAjB;AAAA,MAAoBC,UAAU,GAAC,EAA/B;AAAA,MAAkCC,YAAY,GAAC,EAA/C;AAAA,MAAkDC,QAAQ,GAAG,EAA7D,CAR8B,CAS9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAT,EAAAA,OAAO,CAACU,OAAR,CAAiBC,IAAD,IAAQ;AACpB,YAAQA,IAAI,CAACC,IAAb;AACI,WAAK,SAAL;AACIN,QAAAA,UAAU,CAACO,IAAX,CAAgBF,IAAhB;AACA;;AACJ,WAAK,SAAL;AACIJ,QAAAA,UAAU,CAACM,IAAX,CAAgBF,IAAhB;AACA;;AACJ,WAAK,WAAL;AACIH,QAAAA,YAAY,CAACK,IAAb,CAAkBF,IAAlB;AACA;;AACJ,WAAK,OAAL;AACIF,QAAAA,QAAQ,CAACI,IAAT,CAAcF,IAAd;AACA;;AACJ;AACI;AAdR;AAiBH,GAlBD;AAoBA,MAAIG,KAAK,GAAG;AACRd,IAAAA,OAAO,EAAEC,IAAI,CAACK,UAAD,CADL;AAERS,IAAAA,OAAO,EAAEd,IAAI,CAACM,UAAD,CAFL;AAGRS,IAAAA,SAAS,EAACf,IAAI,CAACO,YAAD,CAHN;AAIRS,IAAAA,KAAK,EAAChB,IAAI,CAACQ,QAAD;AAJF,GAAZ;AAOAlB,EAAAA,KAAK,CAAC2B,QAAN,CAAezB,QAAQ,CAACqB,KAAD,CAAvB;AAGH,CAlDM","sourcesContent":["import React from \"react\";\r\nimport {store} from \"../store\";\r\nimport axios from \"axios\";\r\nimport {setRange} from \"../reducers/appReducer\";\r\n\r\nconst delay = ms =>{\r\n    return new Promise(resolve => {\r\n        setTimeout(()=>{\r\n            resolve()\r\n        },ms)\r\n    })\r\n}\r\n\r\nexport const  start = (history) =>{\r\n\r\n    function sort(arr) {\r\n        return arr.sort((a,b)=>{\r\n            return b.result - a.result;\r\n        })\r\n    }\r\n\r\n    let historyArr = [],biologyArr=[],geographyArr=[],mixedArr = [];\r\n    // try {\r\n    //     // await delay(1000);\r\n    //     const response =  await axios.post('http://localhost:5000/history/range',{\r\n    //         kind\r\n    //     });\r\n    //     // document.getElementById('preloader').hidden = true;\r\n    //     return store.dispatch(setRange(response.data.response));\r\n    //\r\n    // } catch (e) {\r\n    //     console.log(e.response);\r\n    // }\r\n    history.forEach((item)=>{\r\n        switch (item.kind) {\r\n            case 'history':\r\n                historyArr.push(item)\r\n                break;\r\n            case 'biology':\r\n                biologyArr.push(item)\r\n                break;\r\n            case 'geography':\r\n                geographyArr.push(item)\r\n                break;\r\n            case 'mixed':\r\n                mixedArr.push(item)\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n    });\r\n\r\n    let range = {\r\n        history: sort(historyArr),\r\n        biology: sort(biologyArr),\r\n        geography:sort(geographyArr),\r\n        mixed:sort(mixedArr)\r\n    }\r\n\r\n    store.dispatch(setRange(range));\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}