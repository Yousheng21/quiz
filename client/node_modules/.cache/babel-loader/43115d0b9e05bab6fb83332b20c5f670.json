{"ast":null,"code":"import React from \"react\";\nimport { endGame, nextGame, refreshGame } from \"../reducers/gameReducer\";\nimport saveToLocalStorage, { store } from \"../store\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nexport const startGame = () => {\n  let input = document.querySelectorAll('input[type=checkbox]');\n  input.forEach(item => {\n    item.className = 'radioCustomButton';\n    item.checked = false;\n  });\n  document.querySelectorAll(\"label.radioCustomLabel1\").forEach(item => {\n    item.className = 'radioCustomLabel';\n  });\n  let kind = store.getState().game.currentKind;\n  if (!kind) store.dispatch(refreshGame());\n};\nexport const next = (current, length) => {\n  var answer = checkAnswer();\n\n  if (current === length) {\n    clear();\n    setTimeout(() => end(answer, length), 500);\n  } else {\n    clear();\n    store.dispatch(nextGame(answer));\n  }\n\n  saveToLocalStorage('game', store.getState().game);\n};\n\nconst end = async (answer, length) => {\n  try {\n    const right = answer ? store.getState().game.rightAnswersCount + 1 : store.getState().game.rightAnswersCount;\n    const kind = store.getState().game.currentKind;\n    const email = store.getState().user.currentUser.email;\n    const result = Math.floor(right / length * 100);\n    let date = new Date();\n    date.setMonth(date.getMonth() + 1);\n    let month = date.getMonth() < 10 ? \"0\" + date.getMonth() : date.getMonth();\n    date = date.getDate() + \".\" + month + \".\" + date.getFullYear() + \" \" + date.getHours() + \":\" + date.getMinutes(); // const response = await axios.post('http://localhost:5000/history/request',{\n    //     email,\n    //     result,\n    //     kind,\n    //     right,\n    //     length,\n    //     date\n    // });\n    // console.log(response.data);\n\n    store.dispatch(endGame(answer));\n    saveToLocalStorage('game', store.getState().game);\n  } catch (e) {\n    console.log(e.response);\n  }\n};\n\nconst giveAnswers = () => {\n  var selectedCheckBoxes = document.querySelectorAll('input:checked');\n  return Array.from(selectedCheckBoxes).map(cb => cb.value);\n};\n\nexport const setAnswer = () => {\n  let flag = checkAnswer();\n  let answer = giveAnswers();\n  let number = store.getState().game.currentQuestionCount;\n  document.getElementById('next').style.display = 'block';\n  document.getElementById('check').style.display = 'none';\n  answer.map((item, index) => {\n    let input = document.getElementById(item);\n    input.className = flag ? \"radioCustomButton1\" : \"radioCustomButton2\";\n  });\n  if (!flag) setTimeout(() => selectRightAnswer(), 500);\n  document.querySelectorAll('input[type=checkbox]').forEach(item => {\n    item.disabled = true;\n  });\n};\n\nconst selectRightAnswer = () => {\n  let input = document.querySelectorAll('input[type=checkbox]'),\n      rightAnswer = store.getState().game.rightAnswer;\n  input.forEach(item => {\n    item.className = 'radioCustomButton';\n    item.checked = false;\n  });\n  rightAnswer.map(item => {\n    document.querySelector(\"label[for=\" + item + \"]\").className = 'radioCustomLabel1';\n  });\n};\n\nconst checkAnswer = () => {\n  let answer = giveAnswers();\n  let count = 0,\n      flag = false,\n      rightAnswer = store.getState().game.rightAnswer;\n  answer.forEach(item => {\n    if (rightAnswer.includes(item)) count++;\n  });\n\n  if (rightAnswer.length === count && answer.length === rightAnswer.length) {\n    flag = true;\n  }\n\n  return flag;\n};\n\nfunction clear() {\n  document.getElementById('next').style.display = 'none';\n  document.getElementById('check').style.display = 'block';\n  document.querySelectorAll('input[type=checkbox]').forEach(item => {\n    item.disabled = false;\n  });\n}","map":{"version":3,"sources":["F:/Myproject/node1/client/src/actions/game.js"],"names":["React","endGame","nextGame","refreshGame","saveToLocalStorage","store","useSelector","axios","startGame","input","document","querySelectorAll","forEach","item","className","checked","kind","getState","game","currentKind","dispatch","next","current","length","answer","checkAnswer","clear","setTimeout","end","right","rightAnswersCount","email","user","currentUser","result","Math","floor","date","Date","setMonth","getMonth","month","getDate","getFullYear","getHours","getMinutes","e","console","log","response","giveAnswers","selectedCheckBoxes","Array","from","map","cb","value","setAnswer","flag","number","currentQuestionCount","getElementById","style","display","index","selectRightAnswer","disabled","rightAnswer","querySelector","count","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {endGame, nextGame, refreshGame} from \"../reducers/gameReducer\";\r\nimport saveToLocalStorage, {store} from \"../store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const startGame = () =>{\r\n    let input = document.querySelectorAll('input[type=checkbox]');\r\n    input.forEach((item)=>{\r\n        item.className = 'radioCustomButton';\r\n        item.checked = false;\r\n    })\r\n    document.querySelectorAll(\"label.radioCustomLabel1\").forEach((item)=>{\r\n        item.className = 'radioCustomLabel';\r\n    });\r\n    let kind = store.getState().game.currentKind;\r\n    if (!kind) store.dispatch(refreshGame());\r\n\r\n}\r\n\r\nexport const next = (current,length) =>{\r\n\r\n    var answer = checkAnswer();\r\n    if (current === length) {\r\n        clear();\r\n        setTimeout(() => end(answer,length),500 );\r\n\r\n    } else  {\r\n        clear();\r\n        store.dispatch(nextGame(answer));\r\n    }\r\n    saveToLocalStorage('game',store.getState().game);\r\n}\r\n\r\n\r\nconst end = async (answer,length) =>{\r\n    try {\r\n        const right = answer ? store.getState().game.rightAnswersCount+1 : store.getState().game.rightAnswersCount;\r\n        const kind = store.getState().game.currentKind;\r\n        const email = store.getState().user.currentUser.email;\r\n        const result = Math.floor(right/length *100);\r\n\r\n        let date = new Date();\r\n        date.setMonth(date.getMonth()+1);\r\n        let month = date.getMonth() <10 ? \"0\"+date.getMonth(): date.getMonth();\r\n        date = date.getDate() +\".\"+ month +\".\"+date.getFullYear() +\" \"+date.getHours()+\":\"+date.getMinutes();\r\n\r\n        // const response = await axios.post('http://localhost:5000/history/request',{\r\n        //     email,\r\n        //     result,\r\n        //     kind,\r\n        //     right,\r\n        //     length,\r\n        //     date\r\n        // });\r\n        // console.log(response.data);\r\n\r\n        store.dispatch(endGame(answer));\r\n        saveToLocalStorage('game',store.getState().game);\r\n    } catch (e) {\r\n        console.log(e.response)\r\n    }\r\n\r\n}\r\n\r\nconst giveAnswers = () =>{\r\n    var selectedCheckBoxes = document.querySelectorAll('input:checked');\r\n    return Array.from(selectedCheckBoxes).map(cb => cb.value);\r\n}\r\n\r\nexport const setAnswer = ()=>{\r\n    let flag = checkAnswer();\r\n    let answer = giveAnswers();\r\n    let number = store.getState().game.currentQuestionCount;\r\n    document.getElementById('next').style.display = 'block';\r\n    document.getElementById('check').style.display = 'none';\r\n    answer.map((item,index)=>{\r\n        let input = document.getElementById(item);\r\n        input.className = flag ? \"radioCustomButton1\" : \"radioCustomButton2\";\r\n    });\r\n    if (!flag) setTimeout(()=>selectRightAnswer(),500);\r\n    document.querySelectorAll('input[type=checkbox]').forEach((item)=>{\r\n        item.disabled = true;\r\n    })\r\n}\r\n\r\nconst selectRightAnswer = ()=>{\r\n    let input = document.querySelectorAll('input[type=checkbox]'),\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    input.forEach((item)=>{\r\n        item.className = 'radioCustomButton';\r\n        item.checked = false;\r\n    });\r\n    rightAnswer.map((item)=>{\r\n        document.querySelector(\"label[for=\"+item+\"]\").className = 'radioCustomLabel1';\r\n    });\r\n}\r\n\r\n\r\nconst checkAnswer = () =>{\r\n    let answer = giveAnswers();\r\n    let count = 0, flag = false,\r\n        rightAnswer = store.getState().game.rightAnswer;\r\n    answer.forEach((item)=>{\r\n        if(rightAnswer.includes(item))\r\n            count++;\r\n    });\r\n    if(rightAnswer.length === count && answer.length === rightAnswer.length){\r\n        flag = true;\r\n    }\r\n    return flag;\r\n}\r\n\r\nfunction clear(){\r\n    document.getElementById('next').style.display = 'none';\r\n    document.getElementById('check').style.display = 'block';\r\n    document.querySelectorAll('input[type=checkbox]').forEach((item)=>{\r\n        item.disabled = false;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}